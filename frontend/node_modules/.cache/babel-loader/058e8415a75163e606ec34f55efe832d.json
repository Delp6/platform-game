{"ast":null,"code":"import GetWorldXY from './GetWorldXY.js';\nimport GetWorldX from './GetWorldX.js';\nimport GetWorldY from './GetWorldY.js';\nimport GetTileXY from './GetTileXY.js';\nimport GetTileX from './GetTileX.js';\nimport GetTileY from './GetTileY.js';\nimport GetValue from '../../object/GetValue.js';\n\nclass Quad {\n  constructor(config) {\n    this.resetFromJSON(config);\n  }\n\n  resetFromJSON(o) {\n    this.setType(GetValue(o, 'type', 0));\n    this.setDirectionMode(GetValue(o, 'dir', 4));\n    this.setOriginPosition(GetValue(o, 'x', 0), GetValue(o, 'y', 0));\n    this.setCellSize(GetValue(o, 'cellWidth', 0), GetValue(o, 'cellHeight', 0));\n  }\n\n  setType(type) {\n    if (typeof type === 'string') {\n      type = ORIENTATIONTYPE[type];\n    }\n\n    this.mode = type; // orthogonal, isometric, or staggered\n\n    return this;\n  }\n\n  setDirectionMode(mode) {\n    if (typeof mode === 'string') {\n      mode = DIRMODE[mode];\n    }\n\n    this.directions = mode;\n    return this;\n  }\n\n  setOriginPosition(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  set width(value) {\n    this._width = value;\n    this._halfWidth = value / 2;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  set height(value) {\n    this._height = value;\n    this._halfHeight = value / 2;\n  }\n\n  setCellSize(width, height) {\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n\n  get cellWidth() {\n    return this.width;\n  }\n\n  set cellWidth(value) {\n    this.width = value;\n  }\n\n  get cellHeight() {\n    return this.height;\n  }\n\n  set cellHieght(value) {\n    this.height = value;\n  }\n\n}\n\nvar methods = {\n  getWorldXY: GetWorldXY,\n  getWorldX: GetWorldX,\n  getWorldY: GetWorldY,\n  getTileXY: GetTileXY,\n  getTileX: GetTileX,\n  getTileY: GetTileY\n};\nObject.assign(Quad.prototype, methods);\nconst ORIENTATIONTYPE = {\n  'orthogonal': 0,\n  'isometric': 1,\n  'staggered': 2\n};\nconst DIRMODE = {\n  '4dir': 4,\n  '8dir': 8\n};\nexport default Quad;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/utils/grid/quad/Quad.js"],"names":["GetWorldXY","GetWorldX","GetWorldY","GetTileXY","GetTileX","GetTileY","GetValue","Quad","constructor","config","resetFromJSON","o","setType","setDirectionMode","setOriginPosition","setCellSize","type","ORIENTATIONTYPE","mode","DIRMODE","directions","x","y","width","_width","value","_halfWidth","height","_height","_halfHeight","cellWidth","cellHeight","cellHieght","methods","getWorldXY","getWorldX","getWorldY","getTileXY","getTileX","getTileY","Object","assign","prototype"],"mappings":"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","sourcesContent":["import GetWorldXY from './GetWorldXY.js';\r\nimport GetWorldX from './GetWorldX.js';\r\nimport GetWorldY from './GetWorldY.js';\r\nimport GetTileXY from './GetTileXY.js';\r\nimport GetTileX from './GetTileX.js';\r\nimport GetTileY from './GetTileY.js';\r\nimport GetValue from '../../object/GetValue.js';\r\n\r\nclass Quad {\r\n    constructor(config) {\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) {\r\n        this.setType(GetValue(o, 'type', 0));\r\n        this.setDirectionMode(GetValue(o, 'dir', 4));\r\n        this.setOriginPosition(GetValue(o, 'x', 0), GetValue(o, 'y', 0));\r\n        this.setCellSize(GetValue(o, 'cellWidth', 0), GetValue(o, 'cellHeight', 0));\r\n    }\r\n\r\n    setType(type) {\r\n        if (typeof (type) === 'string') {\r\n            type = ORIENTATIONTYPE[type]\r\n        }\r\n        this.mode = type; // orthogonal, isometric, or staggered\r\n        return this;\r\n    }\r\n\r\n    setDirectionMode(mode) {\r\n        if (typeof (mode) === 'string') {\r\n            mode = DIRMODE[mode];\r\n        }\r\n\r\n        this.directions = mode;\r\n        return this;\r\n    }\r\n\r\n    setOriginPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n        this._halfWidth = value / 2;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n        this._halfHeight = value / 2;\r\n    }\r\n\r\n    setCellSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    get cellWidth() {\r\n        return this.width;\r\n    }\r\n\r\n    set cellWidth(value) {\r\n        this.width = value;\r\n    }\r\n\r\n    get cellHeight() {\r\n        return this.height;\r\n    }\r\n\r\n    set cellHieght(value) {\r\n        this.height = value;\r\n    }\r\n}\r\n\r\nvar methods = {\r\n    getWorldXY: GetWorldXY,\r\n    getWorldX: GetWorldX,\r\n    getWorldY: GetWorldY,\r\n    getTileXY: GetTileXY,\r\n    getTileX: GetTileX,\r\n    getTileY: GetTileY,\r\n}\r\nObject.assign(\r\n    Quad.prototype,\r\n    methods\r\n);\r\n\r\nconst ORIENTATIONTYPE = {\r\n    'orthogonal': 0,\r\n    'isometric': 1,\r\n    'staggered': 2\r\n};\r\n\r\nconst DIRMODE = {\r\n    '4dir': 4,\r\n    '8dir': 8\r\n}\r\n\r\nexport default Quad;"]},"metadata":{},"sourceType":"module"}