{"ast":null,"code":"import AreTileXYEqual from '../../utils/AreTileXYEqual.js';\nimport EmitChessEvent from './EmitChessEvent.js';\n\nvar OnPointerMove = function (pointer) {\n  if (!this.enable) {\n    return;\n  }\n\n  var board = this.board; // Get touched tileX, tileY\n\n  var out = board.worldXYToTileXY(pointer.worldX, pointer.worldY, true);\n\n  if (AreTileXYEqual(this.tilePosition, out)) {\n    // Tile position dose not change\n    return;\n  }\n\n  var tileX = out.x,\n      tileY = out.y;\n  this.prevTilePosition.x = this.tilePosition.x;\n  this.prevTilePosition.y = this.tilePosition.y;\n  this.tilePosition.x = tileX;\n  this.tilePosition.y = tileY;\n\n  if (!board.contains(tileX, tileY)) {\n    // Move outside\n    if (this.pointer === pointer) {\n      // Release touch pointer\n      this.pointer = null;\n    }\n\n    return;\n  }\n\n  if (this.pointer === null) {\n    // Catch new touch pointer\n    this.pointer = pointer;\n  } // prevTilePosition might be undefined at beginning\n\n\n  if (this.prevTilePosition.x != null && this.prevTilePosition.y != null) {\n    board.emit('tileout', pointer, this.prevTilePosition);\n  }\n\n  board.emit('tilemove', pointer, this.tilePosition);\n  board.emit('tileover', pointer, this.tilePosition);\n  EmitChessEvent('gameobjectout', 'board.pointerout', board, this.prevTilePosition.x, this.prevTilePosition.y, pointer);\n\n  var boardEventCallback = function (gameObject) {\n    board.emit('gameobjectmove', pointer, gameObject);\n    board.emit('gameobjectover', pointer, gameObject);\n  };\n\n  var chessEventCallback = function (gameObject) {\n    gameObject.emit('board.pointermove', pointer);\n    gameObject.emit('board.pointerover', pointer);\n  };\n\n  EmitChessEvent(boardEventCallback, chessEventCallback, board, tileX, tileY, pointer);\n};\n\nexport default OnPointerMove;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/board/input/OnPointerMove.js"],"names":["AreTileXYEqual","EmitChessEvent","OnPointerMove","pointer","enable","board","out","worldXYToTileXY","worldX","worldY","tilePosition","tileX","x","tileY","y","prevTilePosition","contains","emit","boardEventCallback","gameObject","chessEventCallback"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,IAAIC,aAAa,GAAG,UAAUC,OAAV,EAAmB;AACnC,MAAI,CAAC,KAAKC,MAAV,EAAkB;AACd;AACH;;AAED,MAAIC,KAAK,GAAG,KAAKA,KAAjB,CALmC,CAMnC;;AACA,MAAIC,GAAG,GAAGD,KAAK,CAACE,eAAN,CAAsBJ,OAAO,CAACK,MAA9B,EAAsCL,OAAO,CAACM,MAA9C,EAAsD,IAAtD,CAAV;;AACA,MAAIT,cAAc,CAAC,KAAKU,YAAN,EAAoBJ,GAApB,CAAlB,EAA4C;AACxC;AACA;AACH;;AAED,MAAIK,KAAK,GAAGL,GAAG,CAACM,CAAhB;AAAA,MACIC,KAAK,GAAGP,GAAG,CAACQ,CADhB;AAEA,OAAKC,gBAAL,CAAsBH,CAAtB,GAA0B,KAAKF,YAAL,CAAkBE,CAA5C;AACA,OAAKG,gBAAL,CAAsBD,CAAtB,GAA0B,KAAKJ,YAAL,CAAkBI,CAA5C;AACA,OAAKJ,YAAL,CAAkBE,CAAlB,GAAsBD,KAAtB;AACA,OAAKD,YAAL,CAAkBI,CAAlB,GAAsBD,KAAtB;;AACA,MAAI,CAACR,KAAK,CAACW,QAAN,CAAeL,KAAf,EAAsBE,KAAtB,CAAL,EAAmC;AAC/B;AACA,QAAI,KAAKV,OAAL,KAAiBA,OAArB,EAA8B;AAAE;AAC5B,WAAKA,OAAL,GAAe,IAAf;AACH;;AACD;AACH;;AACD,MAAI,KAAKA,OAAL,KAAiB,IAArB,EAA2B;AAAE;AACzB,SAAKA,OAAL,GAAeA,OAAf;AACH,GA5BkC,CA8BnC;;;AACA,MAAK,KAAKY,gBAAL,CAAsBH,CAAtB,IAA2B,IAA5B,IAAsC,KAAKG,gBAAL,CAAsBD,CAAtB,IAA2B,IAArE,EAA4E;AACxET,IAAAA,KAAK,CAACY,IAAN,CAAW,SAAX,EAAsBd,OAAtB,EAA+B,KAAKY,gBAApC;AACH;;AAEDV,EAAAA,KAAK,CAACY,IAAN,CAAW,UAAX,EAAuBd,OAAvB,EAAgC,KAAKO,YAArC;AACAL,EAAAA,KAAK,CAACY,IAAN,CAAW,UAAX,EAAuBd,OAAvB,EAAgC,KAAKO,YAArC;AAEAT,EAAAA,cAAc,CACV,eADU,EAEV,kBAFU,EAGVI,KAHU,EAGH,KAAKU,gBAAL,CAAsBH,CAHnB,EAGsB,KAAKG,gBAAL,CAAsBD,CAH5C,EAIVX,OAJU,CAAd;;AAOA,MAAIe,kBAAkB,GAAG,UAAUC,UAAV,EAAsB;AAC3Cd,IAAAA,KAAK,CAACY,IAAN,CAAW,gBAAX,EAA6Bd,OAA7B,EAAsCgB,UAAtC;AACAd,IAAAA,KAAK,CAACY,IAAN,CAAW,gBAAX,EAA6Bd,OAA7B,EAAsCgB,UAAtC;AACH,GAHD;;AAIA,MAAIC,kBAAkB,GAAG,UAAUD,UAAV,EAAsB;AAC3CA,IAAAA,UAAU,CAACF,IAAX,CAAgB,mBAAhB,EAAqCd,OAArC;AACAgB,IAAAA,UAAU,CAACF,IAAX,CAAgB,mBAAhB,EAAqCd,OAArC;AACH,GAHD;;AAKAF,EAAAA,cAAc,CACViB,kBADU,EAEVE,kBAFU,EAGVf,KAHU,EAGHM,KAHG,EAGIE,KAHJ,EAIVV,OAJU,CAAd;AAMH,CA5DD;;AA8DA,eAAeD,aAAf","sourcesContent":["import AreTileXYEqual from '../../utils/AreTileXYEqual.js';\r\nimport EmitChessEvent from './EmitChessEvent.js';\r\n\r\nvar OnPointerMove = function (pointer) {\r\n    if (!this.enable) {\r\n        return;\r\n    }\r\n\r\n    var board = this.board;\r\n    // Get touched tileX, tileY\r\n    var out = board.worldXYToTileXY(pointer.worldX, pointer.worldY, true);\r\n    if (AreTileXYEqual(this.tilePosition, out)) {\r\n        // Tile position dose not change\r\n        return;\r\n    }\r\n\r\n    var tileX = out.x,\r\n        tileY = out.y;\r\n    this.prevTilePosition.x = this.tilePosition.x;\r\n    this.prevTilePosition.y = this.tilePosition.y;\r\n    this.tilePosition.x = tileX;\r\n    this.tilePosition.y = tileY;\r\n    if (!board.contains(tileX, tileY)) {\r\n        // Move outside\r\n        if (this.pointer === pointer) { // Release touch pointer\r\n            this.pointer = null;\r\n        }\r\n        return;\r\n    }\r\n    if (this.pointer === null) { // Catch new touch pointer\r\n        this.pointer = pointer;\r\n    }\r\n\r\n    // prevTilePosition might be undefined at beginning\r\n    if ((this.prevTilePosition.x != null) && (this.prevTilePosition.y != null)) {\r\n        board.emit('tileout', pointer, this.prevTilePosition);\r\n    }\r\n\r\n    board.emit('tilemove', pointer, this.tilePosition);\r\n    board.emit('tileover', pointer, this.tilePosition);\r\n\r\n    EmitChessEvent(\r\n        'gameobjectout',\r\n        'board.pointerout',\r\n        board, this.prevTilePosition.x, this.prevTilePosition.y,\r\n        pointer\r\n    );\r\n\r\n    var boardEventCallback = function (gameObject) {\r\n        board.emit('gameobjectmove', pointer, gameObject);\r\n        board.emit('gameobjectover', pointer, gameObject);\r\n    }\r\n    var chessEventCallback = function (gameObject) {\r\n        gameObject.emit('board.pointermove', pointer);\r\n        gameObject.emit('board.pointerover', pointer);\r\n    }\r\n\r\n    EmitChessEvent(\r\n        boardEventCallback,\r\n        chessEventCallback,\r\n        board, tileX, tileY,\r\n        pointer\r\n    );\r\n};\r\n\r\nexport default OnPointerMove;\r\n"]},"metadata":{},"sourceType":"module"}