{"ast":null,"code":"import DeltaTileXYToDirection from './DeltaTileXYToDirection.js';\nimport GetParity from './GetParity.js';\n\nvar GetNeighborTileDirection = function (srcTileXY, neighborTileXY) {\n  var parity = GetParity(this.mode, srcTileXY.x, srcTileXY.y);\n  var deltaTileXYToDirMap = DeltaTileXYToDirection[this.mode][parity];\n  var deltaTileX = neighborTileXY.x - srcTileXY.x;\n  var deltaTileY = neighborTileXY.y - srcTileXY.y;\n\n  if (deltaTileXYToDirMap.hasOwnProperty(deltaTileX)) {\n    var xEntry = deltaTileXYToDirMap[deltaTileX];\n\n    if (xEntry.hasOwnProperty(deltaTileY)) {\n      return xEntry[deltaTileY];\n    }\n  }\n\n  return null;\n};\n\nexport default GetNeighborTileDirection;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/utils/grid/hexagon/GetNeighborTileDirection.js"],"names":["DeltaTileXYToDirection","GetParity","GetNeighborTileDirection","srcTileXY","neighborTileXY","parity","mode","x","y","deltaTileXYToDirMap","deltaTileX","deltaTileY","hasOwnProperty","xEntry"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,6BAAnC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,IAAIC,wBAAwB,GAAG,UAAUC,SAAV,EAAqBC,cAArB,EAAqC;AAChE,MAAIC,MAAM,GAAGJ,SAAS,CAAC,KAAKK,IAAN,EAAYH,SAAS,CAACI,CAAtB,EAAyBJ,SAAS,CAACK,CAAnC,CAAtB;AACA,MAAIC,mBAAmB,GAAGT,sBAAsB,CAAC,KAAKM,IAAN,CAAtB,CAAkCD,MAAlC,CAA1B;AAEA,MAAIK,UAAU,GAAGN,cAAc,CAACG,CAAf,GAAmBJ,SAAS,CAACI,CAA9C;AACA,MAAII,UAAU,GAAGP,cAAc,CAACI,CAAf,GAAmBL,SAAS,CAACK,CAA9C;;AACA,MAAIC,mBAAmB,CAACG,cAApB,CAAmCF,UAAnC,CAAJ,EAAoD;AAChD,QAAIG,MAAM,GAAGJ,mBAAmB,CAACC,UAAD,CAAhC;;AACA,QAAIG,MAAM,CAACD,cAAP,CAAsBD,UAAtB,CAAJ,EAAuC;AACnC,aAAOE,MAAM,CAACF,UAAD,CAAb;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CAbD;;AAcA,eAAeT,wBAAf","sourcesContent":["import DeltaTileXYToDirection from './DeltaTileXYToDirection.js';\r\nimport GetParity from './GetParity.js';\r\n\r\nvar GetNeighborTileDirection = function (srcTileXY, neighborTileXY) {\r\n    var parity = GetParity(this.mode, srcTileXY.x, srcTileXY.y);\r\n    var deltaTileXYToDirMap = DeltaTileXYToDirection[this.mode][parity];\r\n\r\n    var deltaTileX = neighborTileXY.x - srcTileXY.x;\r\n    var deltaTileY = neighborTileXY.y - srcTileXY.y;    \r\n    if (deltaTileXYToDirMap.hasOwnProperty(deltaTileX)) {\r\n        var xEntry = deltaTileXYToDirMap[deltaTileX]\r\n        if (xEntry.hasOwnProperty(deltaTileY)) {\r\n            return xEntry[deltaTileY];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport default GetNeighborTileDirection;"]},"metadata":{},"sourceType":"module"}