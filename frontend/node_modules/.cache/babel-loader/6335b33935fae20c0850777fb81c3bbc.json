{"ast":null,"code":"import Clear from './Clear.js';\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\n\nvar Clone = function (obj, out) {\n  var objIsArray = Array.isArray(obj);\n\n  if (out === undefined) {\n    out = objIsArray ? [] : {};\n  } else {\n    Clear(out);\n  }\n\n  if (objIsArray) {\n    out.length = obj.length;\n\n    for (var i = 0, cnt = obj.length; i < cnt; i++) {\n      out[i] = obj[i];\n    }\n  } else {\n    for (var key in obj) {\n      out[key] = obj[key];\n    }\n  }\n\n  return out;\n};\n\nexport default Clone;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js"],"names":["Clear","Clone","obj","out","objIsArray","Array","isArray","undefined","length","i","cnt","key"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA;;;;;;;AAMA,IAAIC,KAAK,GAAG,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC5B,MAAIC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAAjB;;AAEA,MAAIC,GAAG,KAAKI,SAAZ,EAAuB;AACnBJ,IAAAA,GAAG,GAAIC,UAAD,GAAe,EAAf,GAAoB,EAA1B;AACH,GAFD,MAEO;AACHJ,IAAAA,KAAK,CAACG,GAAD,CAAL;AACH;;AAED,MAAIC,UAAJ,EAAgB;AACZD,IAAAA,GAAG,CAACK,MAAJ,GAAaN,GAAG,CAACM,MAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGR,GAAG,CAACM,MAA1B,EAAkCC,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CN,MAAAA,GAAG,CAACM,CAAD,CAAH,GAASP,GAAG,CAACO,CAAD,CAAZ;AACH;AACJ,GALD,MAKO;AACH,SAAK,IAAIE,GAAT,IAAgBT,GAAhB,EAAqB;AACjBC,MAAAA,GAAG,CAACQ,GAAD,CAAH,GAAWT,GAAG,CAACS,GAAD,CAAd;AACH;AACJ;;AAED,SAAOR,GAAP;AACH,CArBD;;AAuBA,eAAeF,KAAf","sourcesContent":["import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n        for (var i = 0, cnt = obj.length; i < cnt; i++) {\r\n            out[i] = obj[i];\r\n        }\r\n    } else {\r\n        for (var key in obj) {\r\n            out[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n"]},"metadata":{},"sourceType":"module"}