{"ast":null,"code":"var SetBoardWidth = function (width) {\n  if (this.infinityMode) {\n    return this;\n  }\n\n  if (this.width === undefined || this.width <= width) {\n    this.width = width;\n    return this;\n  } // this.width > width : collapse\n\n\n  var tileX, tileY, tileZ, tileZToUIDs;\n\n  for (tileX = width; tileX < this.width; tileX++) {\n    for (tileY = 0; tileY < this.height; tileY++) {\n      tileZToUIDs = this.boardData.getUID(tileX, tileY);\n\n      for (tileZ in tileZToUIDs) {\n        this.RemoveChess(false, tileX, tileY, tileZ);\n      }\n    }\n  }\n\n  this.width = width;\n  return this;\n};\n\nexport default SetBoardWidth;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/board/boarddata/SetBoardWidth.js"],"names":["SetBoardWidth","width","infinityMode","undefined","tileX","tileY","tileZ","tileZToUIDs","height","boardData","getUID","RemoveChess"],"mappings":"AAAA,IAAIA,aAAa,GAAG,UAAUC,KAAV,EAAiB;AACjC,MAAI,KAAKC,YAAT,EAAuB;AACnB,WAAO,IAAP;AACH;;AACD,MAAK,KAAKD,KAAL,KAAeE,SAAhB,IAA+B,KAAKF,KAAL,IAAcA,KAAjD,EAAyD;AACrD,SAAKA,KAAL,GAAaA,KAAb;AACA,WAAO,IAAP;AACH,GAPgC,CASjC;;;AACA,MAAIG,KAAJ,EAAWC,KAAX,EAAkBC,KAAlB,EAAyBC,WAAzB;;AACA,OAAKH,KAAK,GAAGH,KAAb,EAAoBG,KAAK,GAAG,KAAKH,KAAjC,EAAwCG,KAAK,EAA7C,EAAiD;AAC7C,SAAKC,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAG,KAAKG,MAA7B,EAAqCH,KAAK,EAA1C,EAA8C;AAC1CE,MAAAA,WAAW,GAAG,KAAKE,SAAL,CAAeC,MAAf,CAAsBN,KAAtB,EAA6BC,KAA7B,CAAd;;AACA,WAAKC,KAAL,IAAcC,WAAd,EAA2B;AACvB,aAAKI,WAAL,CAAiB,KAAjB,EAAwBP,KAAxB,EAA+BC,KAA/B,EAAsCC,KAAtC;AACH;AACJ;AACJ;;AAED,OAAKL,KAAL,GAAaA,KAAb;AACA,SAAO,IAAP;AACH,CAtBD;;AAwBA,eAAeD,aAAf","sourcesContent":["var SetBoardWidth = function (width) {\r\n    if (this.infinityMode) {\r\n        return this;\r\n    }\r\n    if ((this.width === undefined) || (this.width <= width)) {\r\n        this.width = width;\r\n        return this;\r\n    }\r\n\r\n    // this.width > width : collapse\r\n    var tileX, tileY, tileZ, tileZToUIDs;\r\n    for (tileX = width; tileX < this.width; tileX++) {\r\n        for (tileY = 0; tileY < this.height; tileY++) {\r\n            tileZToUIDs = this.boardData.getUID(tileX, tileY);\r\n            for (tileZ in tileZToUIDs) {\r\n                this.RemoveChess(false, tileX, tileY, tileZ);\r\n            }\r\n        }\r\n    }\r\n\r\n    this.width = width;\r\n    return this;\r\n}\r\n\r\nexport default SetBoardWidth;"]},"metadata":{},"sourceType":"module"}