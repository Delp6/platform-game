{"ast":null,"code":"import { cr2cube, cube2cr } from './CubeTransfer.js';\nimport CONST from './const.js';\nconst ODD_R = CONST.ODD_R;\nconst EVEN_R = CONST.EVEN_R;\n\nvar Mirror = function (src, mode, out) {\n  if (out === undefined) {\n    out = {};\n  } else if (out === true) {\n    out = globTileXY;\n  }\n\n  var cubeXYZ = cr2cube(this.mode, src.x, src.y, true);\n  var isRMode = this.mode === ODD_R || this.mode === EVEN_R;\n  var newCubeX, newCubeY, newCubeZ;\n\n  if (mode & 1) {\n    // Mirror x\n    if (isRMode) {\n      newCubeX = cubeXYZ.y;\n      newCubeY = cubeXYZ.x;\n      newCubeZ = cubeXYZ.z;\n    } else {\n      newCubeX = -cubeXYZ.x;\n      newCubeY = -cubeXYZ.z;\n      newCubeZ = -cubeXYZ.y;\n    }\n\n    cubeXYZ.x = newCubeX;\n    cubeXYZ.y = newCubeY;\n    cubeXYZ.z = newCubeZ;\n  }\n\n  if (mode & 2) {\n    // Mirror y\n    if (isRMode) {\n      newCubeX = -cubeXYZ.y;\n      newCubeY = -cubeXYZ.x;\n      newCubeZ = -cubeXYZ.z;\n    } else {\n      newCubeX = cubeXYZ.x;\n      newCubeY = cubeXYZ.z;\n      newCubeZ = cubeXYZ.y;\n    }\n  }\n\n  cube2cr(this.mode, newCubeX, newCubeY, newCubeZ, out);\n  return out;\n};\n\nvar globTileXY = {};\nexport default Mirror;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/utils/grid/hexagon/Mirror.js"],"names":["cr2cube","cube2cr","CONST","ODD_R","EVEN_R","Mirror","src","mode","out","undefined","globTileXY","cubeXYZ","x","y","isRMode","newCubeX","newCubeY","newCubeZ","z"],"mappings":"AAAA,SACIA,OADJ,EAEIC,OAFJ,QAGO,mBAHP;AAKA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;;AAEA,IAAIC,MAAM,GAAG,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,GAArB,EAA0B;AACnC,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AACnBD,IAAAA,GAAG,GAAG,EAAN;AACH,GAFD,MAEO,IAAIA,GAAG,KAAK,IAAZ,EAAkB;AACrBA,IAAAA,GAAG,GAAGE,UAAN;AACH;;AACD,MAAIC,OAAO,GAAGX,OAAO,CAAC,KAAKO,IAAN,EAAYD,GAAG,CAACM,CAAhB,EAAmBN,GAAG,CAACO,CAAvB,EAA0B,IAA1B,CAArB;AACA,MAAIC,OAAO,GAAI,KAAKP,IAAL,KAAcJ,KAAf,IAA0B,KAAKI,IAAL,KAAcH,MAAtD;AACA,MAAIW,QAAJ,EAAcC,QAAd,EAAwBC,QAAxB;;AACA,MAAIV,IAAI,GAAG,CAAX,EAAc;AAAE;AACZ,QAAIO,OAAJ,EAAa;AACTC,MAAAA,QAAQ,GAAGJ,OAAO,CAACE,CAAnB;AACAG,MAAAA,QAAQ,GAAGL,OAAO,CAACC,CAAnB;AACAK,MAAAA,QAAQ,GAAGN,OAAO,CAACO,CAAnB;AACH,KAJD,MAIO;AACHH,MAAAA,QAAQ,GAAG,CAACJ,OAAO,CAACC,CAApB;AACAI,MAAAA,QAAQ,GAAG,CAACL,OAAO,CAACO,CAApB;AACAD,MAAAA,QAAQ,GAAG,CAACN,OAAO,CAACE,CAApB;AACH;;AACDF,IAAAA,OAAO,CAACC,CAAR,GAAYG,QAAZ;AACAJ,IAAAA,OAAO,CAACE,CAAR,GAAYG,QAAZ;AACAL,IAAAA,OAAO,CAACO,CAAR,GAAYD,QAAZ;AACH;;AACD,MAAIV,IAAI,GAAG,CAAX,EAAc;AAAE;AACZ,QAAIO,OAAJ,EAAa;AACTC,MAAAA,QAAQ,GAAG,CAACJ,OAAO,CAACE,CAApB;AACAG,MAAAA,QAAQ,GAAG,CAACL,OAAO,CAACC,CAApB;AACAK,MAAAA,QAAQ,GAAG,CAACN,OAAO,CAACO,CAApB;AACH,KAJD,MAIO;AACHH,MAAAA,QAAQ,GAAGJ,OAAO,CAACC,CAAnB;AACAI,MAAAA,QAAQ,GAAGL,OAAO,CAACO,CAAnB;AACAD,MAAAA,QAAQ,GAAGN,OAAO,CAACE,CAAnB;AACH;AACJ;;AACDZ,EAAAA,OAAO,CAAC,KAAKM,IAAN,EAAYQ,QAAZ,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CT,GAA1C,CAAP;AACA,SAAOA,GAAP;AACH,CApCD;;AAsCA,IAAIE,UAAU,GAAG,EAAjB;AACA,eAAeL,MAAf","sourcesContent":["import {\r\n    cr2cube,\r\n    cube2cr\r\n} from './CubeTransfer.js';\r\n\r\nimport CONST from './const.js';\r\n\r\nconst ODD_R = CONST.ODD_R;\r\nconst EVEN_R = CONST.EVEN_R;\r\n\r\nvar Mirror = function (src, mode, out) {\r\n    if (out === undefined) {\r\n        out = {};\r\n    } else if (out === true) {\r\n        out = globTileXY;\r\n    }\r\n    var cubeXYZ = cr2cube(this.mode, src.x, src.y, true);\r\n    var isRMode = (this.mode === ODD_R) || (this.mode === EVEN_R);\r\n    var newCubeX, newCubeY, newCubeZ;    \r\n    if (mode & 1) { // Mirror x\r\n        if (isRMode) {\r\n            newCubeX = cubeXYZ.y;\r\n            newCubeY = cubeXYZ.x;\r\n            newCubeZ = cubeXYZ.z;\r\n        } else {\r\n            newCubeX = -cubeXYZ.x;\r\n            newCubeY = -cubeXYZ.z;\r\n            newCubeZ = -cubeXYZ.y;\r\n        }\r\n        cubeXYZ.x = newCubeX;\r\n        cubeXYZ.y = newCubeY;\r\n        cubeXYZ.z = newCubeZ;\r\n    }\r\n    if (mode & 2) { // Mirror y\r\n        if (isRMode) {\r\n            newCubeX = -cubeXYZ.y;\r\n            newCubeY = -cubeXYZ.x;\r\n            newCubeZ = -cubeXYZ.z;\r\n        } else {\r\n            newCubeX = cubeXYZ.x;\r\n            newCubeY = cubeXYZ.z;\r\n            newCubeZ = cubeXYZ.y;\r\n        }\r\n    }\r\n    cube2cr(this.mode, newCubeX, newCubeY, newCubeZ, out);\r\n    return out;\r\n}\r\n\r\nvar globTileXY = {};\r\nexport default Mirror;"]},"metadata":{},"sourceType":"module"}