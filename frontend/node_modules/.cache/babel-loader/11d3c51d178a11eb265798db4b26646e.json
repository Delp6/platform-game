{"ast":null,"code":"import InitPoints from '../utils/InitPoints.js';\nimport DegToRad from '../../utils/math/DegToRad.js';\n\nvar SetPoints = function (x, y, size, type, points) {\n  if (points === undefined) {\n    points = InitPoints(6);\n  }\n\n  if (size === undefined) {} else if (typeof size === 'number') {\n    var angleOffset = type === 0 ? 0 : -30;\n    var angleDeg, angleRad;\n\n    for (var i = 0; i < 6; i++) {\n      angleDeg = 60 * i + angleOffset;\n      angleRad = DegToRad(angleDeg);\n      points[i].x = x + size * Math.cos(angleRad);\n      points[i].y = y + size * Math.sin(angleRad);\n    }\n  } else {\n    var config = size;\n    var w = config.width;\n    var h = config.height;\n    var halfW = w / 2;\n    var quarterW = w / 4;\n    var halfH = h / 2;\n    var quarterH = h / 4;\n\n    if (type === 0) {\n      points[0].x = x + halfW;\n      points[0].y = y;\n      points[1].x = x + quarterW;\n      points[1].y = y + halfH;\n      points[2].x = x - quarterW;\n      points[2].y = y + halfH;\n      points[3].x = x - halfW;\n      points[3].y = y;\n      points[4].x = x - quarterW;\n      points[4].y = y - halfH;\n      points[5].x = x + quarterW;\n      points[5].y = y - halfH;\n    } else {\n      points[0].x = x + halfW;\n      points[0].y = y - quarterH;\n      points[1].x = x + halfW;\n      points[1].y = y + quarterH;\n      points[2].x = x;\n      points[2].y = y + halfH;\n      points[3].x = x - halfW;\n      points[3].y = y + quarterH;\n      points[4].x = x - halfW;\n      points[4].y = y - quarterH;\n      points[5].x = x;\n      points[5].y = y - halfH;\n    }\n  }\n\n  return points;\n};\n\nexport default SetPoints;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/geom/hexagon/SetPoints.js"],"names":["InitPoints","DegToRad","SetPoints","x","y","size","type","points","undefined","angleOffset","angleDeg","angleRad","i","Math","cos","sin","config","w","width","h","height","halfW","quarterW","halfH","quarterH"],"mappings":"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","sourcesContent":["import InitPoints from '../utils/InitPoints.js';\r\nimport DegToRad from '../../utils/math/DegToRad.js';\r\n\r\nvar SetPoints = function (x, y, size, type, points) {\r\n    if (points === undefined) {\r\n        points = InitPoints(6);\r\n    }\r\n\r\n    if (size === undefined) {} else if (typeof (size) === 'number') {\r\n        var angleOffset = (type === 0) ? 0 : -30;\r\n        var angleDeg, angleRad;\r\n        for (var i = 0; i < 6; i++) {\r\n            angleDeg = (60 * i) + angleOffset;\r\n            angleRad = DegToRad(angleDeg);\r\n            points[i].x = x + size * Math.cos(angleRad);\r\n            points[i].y = y + size * Math.sin(angleRad);\r\n        }\r\n    } else {\r\n        var config = size;\r\n        var w = config.width;\r\n        var h = config.height;\r\n        var halfW = w / 2;\r\n        var quarterW = w / 4;\r\n        var halfH = h / 2;\r\n        var quarterH = h / 4;\r\n        if (type === 0) {\r\n            points[0].x = x + halfW;\r\n            points[0].y = y;\r\n\r\n            points[1].x = x + quarterW;\r\n            points[1].y = y + halfH;\r\n\r\n            points[2].x = x - quarterW;\r\n            points[2].y = y + halfH;\r\n\r\n            points[3].x = x - halfW;\r\n            points[3].y = y;\r\n\r\n            points[4].x = x - quarterW;\r\n            points[4].y = y - halfH;\r\n\r\n            points[5].x = x + quarterW;\r\n            points[5].y = y - halfH;\r\n        } else {\r\n            points[0].x = x + halfW;\r\n            points[0].y = y - quarterH;\r\n\r\n            points[1].x = x + halfW;\r\n            points[1].y = y + quarterH;\r\n\r\n            points[2].x = x;\r\n            points[2].y = y + halfH;\r\n\r\n            points[3].x = x - halfW;\r\n            points[3].y = y + quarterH;\r\n\r\n            points[4].x = x - halfW;\r\n            points[4].y = y - quarterH;\r\n\r\n            points[5].x = x;\r\n            points[5].y = y - halfH;\r\n        }\r\n    }\r\n    return points;\r\n}\r\n\r\nexport default SetPoints;"]},"metadata":{},"sourceType":"module"}