{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmode\\\\Documents\\\\ProjektyFullStack\\\\war-of-champions\\\\frontend\\\\src\\\\phaser\\\\PhaserMain.js\";\nimport { IonPhaser } from \"@ion-phaser/react\";\nimport React from \"react\";\nimport Phaser from \"phaser\";\nimport BoardPlugin from 'phaser3-rex-plugins/plugins/board-plugin.js';\nimport Board from \"phaser3-rex-plugins/plugins/board/board/LogicBoard\";\n\nconst PhaserMain = () => {\n  let player;\n  let cursors;\n  const gameState = {\n    initialize: true,\n    game: {\n      width: 960,\n      height: 600,\n      type: Phaser.AUTO,\n      scene: {\n        preload: preload,\n        create: create,\n        update: update\n      },\n      plugins: {\n        scene: [{\n          key: 'rexBoard',\n          plugin: BoardPlugin,\n          mapping: 'rexBoard'\n        }]\n      }\n    }\n  };\n\n  function preload() {\n    this.load.image('environment', 'assets/environment_forest.png');\n    this.load.spritesheet('knight', 'assets/knight.png', {\n      frameWidth: 75,\n      frameHeight: 54\n    });\n  }\n\n  function create() {\n    /* this.add.image(480, 220, 'environment');\r\n     let grid = this.add.grid(480, 370, 900, 400, 50, 50,  \"black\", \"0.4\");*/\n    let map = new Board();\n    player = this.add.sprite(100, 450, 'knight');\n    cursors = this.input.keyboard.createCursorKeys();\n    this.anims.create({\n      key: 'right',\n      frames: this.anims.generateFrameNumbers('knight', {\n        start: 0,\n        end: 9\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n  }\n\n  function update() {\n    if (cursors.right.isDown) {\n      player.setVelocityX(160);\n      player.anims.play('right', true);\n    }\n    /* else {\r\n         player.setVelocityX(0);\r\n       }*/\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonPhaser, {\n    game: gameState.game,\n    initialize: gameState.initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PhaserMain;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/src/phaser/PhaserMain.js"],"names":["IonPhaser","React","Phaser","BoardPlugin","Board","PhaserMain","player","cursors","gameState","initialize","game","width","height","type","AUTO","scene","preload","create","update","plugins","key","plugin","mapping","load","image","spritesheet","frameWidth","frameHeight","map","add","sprite","input","keyboard","createCursorKeys","anims","frames","generateFrameNumbers","start","end","frameRate","repeat","right","isDown","setVelocityX","play"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,KAAP,MAAkB,oDAAlB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAErB,MAAIC,MAAJ;AACA,MAAIC,OAAJ;AAEA,QAAMC,SAAS,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,GADL;AAEFC,MAAAA,MAAM,EAAE,GAFN;AAGFC,MAAAA,IAAI,EAAEX,MAAM,CAACY,IAHX;AAIFC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAEA,OADN;AAEHC,QAAAA,MAAM,EAAEA,MAFL;AAGHC,QAAAA,MAAM,EAAEA;AAHL,OAJL;AAUFC,MAAAA,OAAO,EAAE;AACLJ,QAAAA,KAAK,EAAE,CAAC;AACJK,UAAAA,GAAG,EAAE,UADD;AAEJC,UAAAA,MAAM,EAAElB,WAFJ;AAGJmB,UAAAA,OAAO,EAAE;AAHL,SAAD;AADF;AAVP;AAFQ,GAAlB;;AAuBA,WAASN,OAAT,GAAmB;AACf,SAAKO,IAAL,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,+BAA/B;AACA,SAAKD,IAAL,CAAUE,WAAV,CAAsB,QAAtB,EACI,mBADJ,EAEI;AAAEC,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,WAAW,EAAE;AAA/B,KAFJ;AAIH;;AACD,WAASV,MAAT,GAAkB;AACf;;AAEC,QAAIW,GAAG,GAAG,IAAIxB,KAAJ,EAAV;AACAE,IAAAA,MAAM,GAAG,KAAKuB,GAAL,CAASC,MAAT,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,QAA1B,CAAT;AACAvB,IAAAA,OAAO,GAAG,KAAKwB,KAAL,CAAWC,QAAX,CAAoBC,gBAApB,EAAV;AAGA,SAAKC,KAAL,CAAWjB,MAAX,CAAkB;AACdG,MAAAA,GAAG,EAAE,OADS;AAEde,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,oBAAX,CAAgC,QAAhC,EAA0C;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,GAAG,EAAE;AAAjB,OAA1C,CAFM;AAGdC,MAAAA,SAAS,EAAE,EAHG;AAIdC,MAAAA,MAAM,EAAE,CAAC;AAJK,KAAlB;AAMH;;AACD,WAAStB,MAAT,GAAkB;AACjB,QAAIX,OAAO,CAACkC,KAAR,CAAcC,MAAlB,EACG;AACIpC,MAAAA,MAAM,CAACqC,YAAP,CAAoB,GAApB;AAEArC,MAAAA,MAAM,CAAC4B,KAAP,CAAaU,IAAb,CAAkB,OAAlB,EAA2B,IAA3B;AACH;AACL;;;;AAIC;;AAEG,sBACA,uDACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEpC,SAAS,CAACE,IAA3B;AAAiC,IAAA,UAAU,EAAEF,SAAS,CAACC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAKP,CApED;;AAqEA,eAAeJ,UAAf","sourcesContent":["import {IonPhaser} from \"@ion-phaser/react\";\r\nimport React from \"react\";\r\nimport Phaser from \"phaser\";\r\nimport BoardPlugin from 'phaser3-rex-plugins/plugins/board-plugin.js';\r\nimport Board from \"phaser3-rex-plugins/plugins/board/board/LogicBoard\";\r\n\r\n\r\nconst PhaserMain = () => {\r\n\r\n    let player;\r\n    let cursors;\r\n\r\n    const gameState = {\r\n        initialize: true,\r\n        game: {\r\n            width: 960,\r\n            height: 600,\r\n            type: Phaser.AUTO,\r\n            scene: {\r\n                preload: preload,\r\n                create: create,\r\n                update: update,\r\n\r\n            },\r\n            plugins: {\r\n                scene: [{\r\n                    key: 'rexBoard',\r\n                    plugin: BoardPlugin,\r\n                    mapping: 'rexBoard'\r\n                },\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    function preload() {\r\n        this.load.image('environment', 'assets/environment_forest.png');\r\n        this.load.spritesheet('knight',\r\n            'assets/knight.png',\r\n            { frameWidth: 75, frameHeight: 54 }\r\n        );\r\n    }\r\n    function create() {\r\n       /* this.add.image(480, 220, 'environment');\r\n        let grid = this.add.grid(480, 370, 900, 400, 50, 50,  \"black\", \"0.4\");*/\r\n        let map = new Board\r\n        player = this.add.sprite(100, 450, 'knight');\r\n        cursors = this.input.keyboard.createCursorKeys();\r\n\r\n\r\n        this.anims.create({\r\n            key: 'right',\r\n            frames: this.anims.generateFrameNumbers('knight', { start: 0, end: 9 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n    }\r\n    function update() {\r\n     if (cursors.right.isDown)\r\n        {\r\n            player.setVelocityX(160);\r\n\r\n            player.anims.play('right', true);\r\n        }\r\n    /* else {\r\n         player.setVelocityX(0);\r\n\r\n     }*/\r\n    }\r\n\r\n        return (\r\n        <>\r\n            <IonPhaser game={gameState.game} initialize={gameState.initialize}/>\r\n        </>\r\n    );\r\n}\r\nexport default PhaserMain;"]},"metadata":{},"sourceType":"module"}