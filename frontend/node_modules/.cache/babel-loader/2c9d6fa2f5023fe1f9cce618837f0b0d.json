{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmode\\\\Documents\\\\ProjektyFullStack\\\\war-of-champions\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport './styles/app.scss';\nimport Phaser from 'phaser';\nimport { IonPhaser } from '@ion-phaser/react';\n\nfunction App() {\n  const gameState = {\n    initialize: true,\n    game: {\n      width: 800,\n      height: 600,\n      type: Phaser.AUTO,\n      scene: {\n        preload: preload,\n        create: create,\n        update: update\n      },\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: {\n            y: 300\n          },\n          debug: false\n        }\n      }\n    }\n  };\n\n  function preload() {\n    this.load.image('sky', 'assets/sky.png');\n    this.load.image('ground', 'assets/platform.png');\n    this.load.image('star', 'assets/star.png');\n    this.load.image('bomb', 'assets/bomb.png');\n    this.load.spritesheet('dude', 'assets/dude.png', {\n      frameWidth: 32,\n      frameHeight: 48\n    });\n  }\n\n  let cursors;\n  let player;\n  let stars;\n\n  function create() {\n    {\n      this.add.image(400, 300, 'sky');\n      let platforms = this.physics.add.staticGroup();\n      platforms.create(400, 568, 'ground').setScale(2).refreshBody();\n      platforms.create(600, 400, 'ground');\n      platforms.create(50, 250, 'ground');\n      platforms.create(750, 220, 'ground');\n      player = this.physics.add.sprite(100, 450, 'dude');\n      player.setBounce(0.2);\n      player.setCollideWorldBounds(true);\n      this.anims.create({\n        key: 'left',\n        frames: this.anims.generateFrameNumbers('dude', {\n          start: 0,\n          end: 3\n        }),\n        frameRate: 10,\n        repeat: -1\n      });\n      this.anims.create({\n        key: 'turn',\n        frames: [{\n          key: 'dude',\n          frame: 4\n        }],\n        frameRate: 20\n      });\n      this.anims.create({\n        key: 'right',\n        frames: this.anims.generateFrameNumbers('dude', {\n          start: 5,\n          end: 8\n        }),\n        frameRate: 10,\n        repeat: -1\n      });\n      this.anims.create({\n        key: 'left',\n        frames: this.anims.generateFrameNumbers('dude', {\n          start: 0,\n          end: 3\n        }),\n        frameRate: 10,\n        repeat: -1\n      });\n      player.body.setGravityY(3000);\n      this.physics.add.collider(player, platforms);\n      cursors = this.input.keyboard.createCursorKeys();\n      stars = this.physics.add.group({\n        key: 'star',\n        repeat: 11,\n        setXY: {\n          x: 12,\n          y: 0,\n          stepX: 70\n        }\n      });\n      stars.children.getArray().iterate(child => {\n        child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n      });\n      this.physics.add.collider(stars, platforms);\n    }\n  }\n\n  function update() {\n    if (cursors.left.isDown) {\n      player.setVelocityX(-160);\n      player.anims.play('left', true);\n    } else if (cursors.right.isDown) {\n      player.setVelocityX(160);\n      player.anims.play('right', true);\n    } else {\n      player.setVelocityX(0);\n      player.anims.play('turn');\n    }\n\n    if (cursors.up.isDown) {\n      player.setVelocityY(-330);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonPhaser, {\n    game: gameState.game,\n    initialize: gameState.initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/src/App.js"],"names":["React","Phaser","IonPhaser","App","gameState","initialize","game","width","height","type","AUTO","scene","preload","create","update","physics","default","arcade","gravity","y","debug","load","image","spritesheet","frameWidth","frameHeight","cursors","player","stars","add","platforms","staticGroup","setScale","refreshBody","sprite","setBounce","setCollideWorldBounds","anims","key","frames","generateFrameNumbers","start","end","frameRate","repeat","frame","body","setGravityY","collider","input","keyboard","createCursorKeys","group","setXY","x","stepX","children","getArray","iterate","child","setBounceY","Math","FloatBetween","left","isDown","setVelocityX","play","right","up","setVelocityY","minHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles/app.scss';\nimport Phaser from 'phaser';\nimport {IonPhaser} from '@ion-phaser/react';\n\nfunction App() {\n\n\n    const gameState = {\n        initialize: true,\n        game: {\n            width: 800,\n            height: 600,\n            type: Phaser.AUTO,\n            scene: {\n                preload: preload,\n                create: create,\n                update: update,\n            },\n            physics: {\n                default: 'arcade',\n                arcade: {\n                    gravity: {y: 300},\n                    debug: false\n                }\n            },\n        },\n    }\n\n    function preload() {\n        this.load.image('sky', 'assets/sky.png');\n        this.load.image('ground', 'assets/platform.png');\n        this.load.image('star', 'assets/star.png');\n        this.load.image('bomb', 'assets/bomb.png');\n        this.load.spritesheet('dude',\n            'assets/dude.png',\n            {frameWidth: 32, frameHeight: 48}\n        );\n    }\n\n    let cursors;\n    let player;\n    let stars;\n\n    function create() {\n        {\n            this.add.image(400, 300, 'sky');\n\n            let platforms = this.physics.add.staticGroup();\n            platforms.create(400, 568, 'ground').setScale(2).refreshBody();\n            platforms.create(600, 400, 'ground');\n            platforms.create(50, 250, 'ground');\n            platforms.create(750, 220, 'ground');\n\n            player = this.physics.add.sprite(100, 450, 'dude');\n            player.setBounce(0.2);\n            player.setCollideWorldBounds(true);\n\n            this.anims.create({\n                key: 'left',\n                frames: this.anims.generateFrameNumbers('dude', {start: 0, end: 3}),\n                frameRate: 10,\n                repeat: -1\n            });\n\n            this.anims.create({\n                key: 'turn',\n                frames: [{key: 'dude', frame: 4}],\n                frameRate: 20\n            });\n\n            this.anims.create({\n                key: 'right',\n                frames: this.anims.generateFrameNumbers('dude', {start: 5, end: 8}),\n                frameRate: 10,\n                repeat: -1\n            });\n            this.anims.create({\n                key: 'left',\n                frames: this.anims.generateFrameNumbers('dude', {start: 0, end: 3}),\n                frameRate: 10,\n                repeat: -1\n            });\n            player.body.setGravityY(3000)\n            this.physics.add.collider(player, platforms);\n            cursors = this.input.keyboard.createCursorKeys();\n            stars = this.physics.add.group({\n                key: 'star',\n                repeat: 11,\n                setXY: {x: 12, y: 0, stepX: 70}\n            });\n\n            stars.children.getArray().iterate( child => {\n\n                child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n\n            });\n            this.physics.add.collider(stars, platforms);\n\n\n\n        }\n\n    }\n\n    function update() {\n        if (cursors.left.isDown) {\n            player.setVelocityX(-160);\n\n            player.anims.play('left', true);\n        } else if (cursors.right.isDown) {\n            player.setVelocityX(160);\n\n            player.anims.play('right', true);\n        } else {\n            player.setVelocityX(0);\n\n            player.anims.play('turn');\n        }\n\n        if (cursors.up.isDown) {\n            player.setVelocityY(-330);\n        }\n    }\n\n    return (\n        <div style={{minHeight: \"100vh\"}}>\n            <IonPhaser game={gameState.game} initialize={gameState.initialize}/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}