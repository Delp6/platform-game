{"ast":null,"code":"var TileXYArrayToChessArray = function (tileXYArray, tileZ, out) {\n  if (Array.isArray(tileZ)) {\n    out = tileZ;\n    tileZ = undefined;\n  }\n\n  if (out === undefined) {\n    out = [];\n  }\n\n  var tileZMode = tileZ != null;\n  var tileXY;\n\n  for (var i = 0, cnt = tileXYArray.length; i < cnt; i++) {\n    tileXY = tileXYArray[i];\n\n    if (tileZMode) {\n      out.push(this.tileXYZToChess(tileXY.x, tileXY.y, tileZ));\n    } else {\n      this.tileXYToChessArray(tileXY.x, tileXY.y, out);\n    }\n  }\n\n  return out;\n};\n\nexport default TileXYArrayToChessArray;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/board/tileposition/TileXYArrayToChessArray.js"],"names":["TileXYArrayToChessArray","tileXYArray","tileZ","out","Array","isArray","undefined","tileZMode","tileXY","i","cnt","length","push","tileXYZToChess","x","y","tileXYToChessArray"],"mappings":"AAAA,IAAIA,uBAAuB,GAAG,UAAUC,WAAV,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmC;AAC7D,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACtBC,IAAAA,GAAG,GAAGD,KAAN;AACAA,IAAAA,KAAK,GAAGI,SAAR;AACH;;AACD,MAAIH,GAAG,KAAKG,SAAZ,EAAuB;AACnBH,IAAAA,GAAG,GAAG,EAAN;AACH;;AACD,MAAII,SAAS,GAAIL,KAAK,IAAI,IAA1B;AACA,MAAIM,MAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGT,WAAW,CAACU,MAAlC,EAA0CF,CAAC,GAAGC,GAA9C,EAAmDD,CAAC,EAApD,EAAwD;AACpDD,IAAAA,MAAM,GAAGP,WAAW,CAACQ,CAAD,CAApB;;AACA,QAAIF,SAAJ,EAAe;AACXJ,MAAAA,GAAG,CAACS,IAAJ,CAAS,KAAKC,cAAL,CAAoBL,MAAM,CAACM,CAA3B,EAA8BN,MAAM,CAACO,CAArC,EAAwCb,KAAxC,CAAT;AACH,KAFD,MAEO;AACH,WAAKc,kBAAL,CAAwBR,MAAM,CAACM,CAA/B,EAAkCN,MAAM,CAACO,CAAzC,EAA4CZ,GAA5C;AACH;AACJ;;AACD,SAAOA,GAAP;AACH,CAnBD;;AAoBA,eAAeH,uBAAf","sourcesContent":["var TileXYArrayToChessArray = function (tileXYArray, tileZ, out) {\r\n    if (Array.isArray(tileZ)) {\r\n        out = tileZ;\r\n        tileZ = undefined;\r\n    }\r\n    if (out === undefined) {\r\n        out = [];\r\n    }\r\n    var tileZMode = (tileZ != null);\r\n    var tileXY;\r\n    for (var i = 0, cnt = tileXYArray.length; i < cnt; i++) {\r\n        tileXY = tileXYArray[i];\r\n        if (tileZMode) {\r\n            out.push(this.tileXYZToChess(tileXY.x, tileXY.y, tileZ));\r\n        } else {\r\n            this.tileXYToChessArray(tileXY.x, tileXY.y, out);\r\n        }\r\n    }\r\n    return out;\r\n}\r\nexport default TileXYArrayToChessArray;"]},"metadata":{},"sourceType":"module"}