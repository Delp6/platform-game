{"ast":null,"code":"import Quad from '../../../utils/grid/quad/Quad.js';\nimport SaveOrigin from '../utils/SaveOrigin.js';\nimport RestoreOrigin from '../utils/RestoreOrigin.js';\nimport GetTileXYAtDirection from '../../../utils/grid/quad/GetTileXYAtDirection.js';\nimport GetNeighborTileXY from '../../../utils/grid/quad/GetNeighborTileXY.js';\nimport GetNeighborTileDirection from '../../../utils/grid/quad/GetNeighborTileDirection.js';\nimport GetOppositeDirection from '../../../utils/grid/quad/GetOppositeDirection.js';\nimport Offset from '../../../utils/grid/quad/Offset.js';\nimport Mirror from '../../../utils/grid/quad/Mirror.js';\nimport Rotate from '../../../utils/grid/quad/Rotate.js';\nimport GetDistance from '../../../utils/grid/quad/GetDistance.js';\nimport DirectionBetween from '../../../utils/grid/quad/DirectionBetween.js';\nimport DirectionNormalize from '../utils/DirectionNormalize.js';\nimport GetGridPoints from './GetGridPoints.js';\nimport RingToTileXYArray from '../../../utils/grid/quad/RingToTileXYArray.js';\n\nclass QuadGrid extends Quad {\n  constructor(config) {\n    super(config);\n    this.sides = 4;\n  } // resetFromJSON(o) {\n  //     super.resetFromJSON(o);\n  // }\n  // Direction of neighbors\n\n\n  get allDirections() {\n    return this.directions === 4 ? ALLDIR4 : ALLDIR8;\n  } // Board-match\n\n\n  get halfDirections() {\n    return this.directions === 4 ? HALFDIR4 : HALFDIR8;\n  } // setOriginPosition\n  // setCellSize\n  // setType\n  // getWorldXY\n  // getTileXY\n  // getGridPolygon        \n\n\n}\n\nconst ALLDIR4 = [0, 1, 2, 3];\nconst ALLDIR8 = [0, 1, 2, 3, 4, 5, 6, 7];\nconst HALFDIR4 = [0, 1];\nconst HALFDIR8 = [0, 1, 4, 5];\nvar methods = {\n  saveOrigin: SaveOrigin,\n  restoreOrigin: RestoreOrigin,\n  getTileXYAtDirection: GetTileXYAtDirection,\n  getNeighborTileXY: GetNeighborTileXY,\n  getNeighborTileDirection: GetNeighborTileDirection,\n  getOppositeDirection: GetOppositeDirection,\n  offset: Offset,\n  mirror: Mirror,\n  rotate: Rotate,\n  getDistance: GetDistance,\n  directionBetween: DirectionBetween,\n  directionNormalize: DirectionNormalize,\n  getGridPoints: GetGridPoints,\n  ringToTileXYArray: RingToTileXYArray\n};\nObject.assign(QuadGrid.prototype, methods);\nexport default QuadGrid;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/grid/quad/Quad.js"],"names":["Quad","SaveOrigin","RestoreOrigin","GetTileXYAtDirection","GetNeighborTileXY","GetNeighborTileDirection","GetOppositeDirection","Offset","Mirror","Rotate","GetDistance","DirectionBetween","DirectionNormalize","GetGridPoints","RingToTileXYArray","QuadGrid","constructor","config","sides","allDirections","directions","ALLDIR4","ALLDIR8","halfDirections","HALFDIR4","HALFDIR8","methods","saveOrigin","restoreOrigin","getTileXYAtDirection","getNeighborTileXY","getNeighborTileDirection","getOppositeDirection","offset","mirror","rotate","getDistance","directionBetween","directionNormalize","getGridPoints","ringToTileXYArray","Object","assign","prototype"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,kCAAjB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;AACA,OAAOC,iBAAP,MAA8B,+CAA9B;AACA,OAAOC,wBAAP,MAAqC,sDAArC;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,iBAAP,MAA8B,+CAA9B;;AAEA,MAAMC,QAAN,SAAuBf,IAAvB,CAA4B;AACxBgB,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN;AACA,SAAKC,KAAL,GAAa,CAAb;AACH,GAJuB,CAMxB;AACA;AACA;AAEA;;;AACA,MAAIC,aAAJ,GAAoB;AAChB,WAAQ,KAAKC,UAAL,KAAoB,CAArB,GAA0BC,OAA1B,GAAoCC,OAA3C;AACH,GAbuB,CAexB;;;AACA,MAAIC,cAAJ,GAAqB;AACjB,WAAQ,KAAKH,UAAL,KAAoB,CAArB,GAA0BI,QAA1B,GAAqCC,QAA5C;AACH,GAlBuB,CAoBxB;AACA;AACA;AACA;AACA;AACA;;;AAzBwB;;AA4B5B,MAAMJ,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAhB;AACA,MAAMC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAhB;AACA,MAAME,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB;AACA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAjB;AAEA,IAAIC,OAAO,GAAG;AACVC,EAAAA,UAAU,EAAE1B,UADF;AAEV2B,EAAAA,aAAa,EAAE1B,aAFL;AAGV2B,EAAAA,oBAAoB,EAAE1B,oBAHZ;AAIV2B,EAAAA,iBAAiB,EAAE1B,iBAJT;AAKV2B,EAAAA,wBAAwB,EAAE1B,wBALhB;AAMV2B,EAAAA,oBAAoB,EAAE1B,oBANZ;AAOV2B,EAAAA,MAAM,EAAE1B,MAPE;AAQV2B,EAAAA,MAAM,EAAE1B,MARE;AASV2B,EAAAA,MAAM,EAAE1B,MATE;AAUV2B,EAAAA,WAAW,EAAE1B,WAVH;AAWV2B,EAAAA,gBAAgB,EAAE1B,gBAXR;AAYV2B,EAAAA,kBAAkB,EAAE1B,kBAZV;AAaV2B,EAAAA,aAAa,EAAE1B,aAbL;AAcV2B,EAAAA,iBAAiB,EAAE1B;AAdT,CAAd;AAgBA2B,MAAM,CAACC,MAAP,CACI3B,QAAQ,CAAC4B,SADb,EAEIjB,OAFJ;AAKA,eAAeX,QAAf","sourcesContent":["import Quad from '../../../utils/grid/quad/Quad.js';\r\nimport SaveOrigin from '../utils/SaveOrigin.js';\r\nimport RestoreOrigin from '../utils/RestoreOrigin.js';\r\nimport GetTileXYAtDirection from '../../../utils/grid/quad/GetTileXYAtDirection.js';\r\nimport GetNeighborTileXY from '../../../utils/grid/quad/GetNeighborTileXY.js';\r\nimport GetNeighborTileDirection from '../../../utils/grid/quad/GetNeighborTileDirection.js';\r\nimport GetOppositeDirection from '../../../utils/grid/quad/GetOppositeDirection.js';\r\nimport Offset from '../../../utils/grid/quad/Offset.js';\r\nimport Mirror from '../../../utils/grid/quad/Mirror.js';\r\nimport Rotate from '../../../utils/grid/quad/Rotate.js';\r\nimport GetDistance from '../../../utils/grid/quad/GetDistance.js';\r\nimport DirectionBetween from '../../../utils/grid/quad/DirectionBetween.js';\r\nimport DirectionNormalize from '../utils/DirectionNormalize.js';\r\nimport GetGridPoints from './GetGridPoints.js';\r\nimport RingToTileXYArray from '../../../utils/grid/quad/RingToTileXYArray.js';\r\n\r\nclass QuadGrid extends Quad {\r\n    constructor(config) {\r\n        super(config);\r\n        this.sides = 4;\r\n    }\r\n\r\n    // resetFromJSON(o) {\r\n    //     super.resetFromJSON(o);\r\n    // }\r\n\r\n    // Direction of neighbors\r\n    get allDirections() {\r\n        return (this.directions === 4) ? ALLDIR4 : ALLDIR8;\r\n    }\r\n\r\n    // Board-match\r\n    get halfDirections() {\r\n        return (this.directions === 4) ? HALFDIR4 : HALFDIR8;\r\n    }\r\n\r\n    // setOriginPosition\r\n    // setCellSize\r\n    // setType\r\n    // getWorldXY\r\n    // getTileXY\r\n    // getGridPolygon        \r\n}\r\n\r\nconst ALLDIR4 = [0, 1, 2, 3];\r\nconst ALLDIR8 = [0, 1, 2, 3, 4, 5, 6, 7];\r\nconst HALFDIR4 = [0, 1];\r\nconst HALFDIR8 = [0, 1, 4, 5];\r\n\r\nvar methods = {\r\n    saveOrigin: SaveOrigin,\r\n    restoreOrigin: RestoreOrigin,\r\n    getTileXYAtDirection: GetTileXYAtDirection,\r\n    getNeighborTileXY: GetNeighborTileXY,\r\n    getNeighborTileDirection: GetNeighborTileDirection,\r\n    getOppositeDirection: GetOppositeDirection,\r\n    offset: Offset,\r\n    mirror: Mirror,\r\n    rotate: Rotate,\r\n    getDistance: GetDistance,\r\n    directionBetween: DirectionBetween,\r\n    directionNormalize: DirectionNormalize,\r\n    getGridPoints: GetGridPoints,\r\n    ringToTileXYArray: RingToTileXYArray,\r\n}\r\nObject.assign(\r\n    QuadGrid.prototype,\r\n    methods\r\n);\r\n\r\nexport default QuadGrid;"]},"metadata":{},"sourceType":"module"}