{"ast":null,"code":"import GetChessData from '../chess/GetChessData.js';\nimport GetChessUID from '../chess/GetChessUID.js';\nimport SetBoardWidth from './boarddata/SetBoardWidth.js';\nimport SetBoardHeight from './boarddata/SetBoardHeight.js';\nimport TileXYZToKey from '../utils/tilexyzkey/TileXYZToKey.js';\nimport TileXYToKey from '../utils/tilexyzkey/TileXYToKey.js';\nimport KeyToTileXYZ from '../utils/tilexyzkey/KeyToTileXYZ.js';\nimport TileXYToWorldX from './worldposition/TileXYToWorldX.js';\nimport TileXYToWorldY from './worldposition/TileXYToWorldY.js';\nimport TileXYToWorldXY from './worldposition/TileXYToWorldXY.js';\nimport TileXYArrayToWorldXYArray from './worldposition/TileXYArrayToWorldXYArray.js';\nimport WorldXYToTileX from './worldposition/WorldXYToTileX.js';\nimport WorldXYToTileY from './worldposition/WorldXYToTileY.js';\nimport WorldXYToTileXY from './worldposition/WorldXYToTileXY.js';\nimport WorldXYToChessArray from './worldposition/WorldXYToChessArray.js';\nimport WorldXYToChess from './worldposition/WorldXYToChess.js';\nimport WorldXYSnapToGrid from './worldposition/WorldXYSnapToGrid.js';\nimport AngleBetween from './worldposition/AngleBetween.js';\nimport IsAngleInCone from './worldposition/IsAngleInCone.js';\nimport AngleToward from './worldposition/AngleToward.js';\nimport AngleSnapToDirection from './worldposition/AngleSnapToDirection.js';\nimport IsOverlappingPoint from './worldposition/IsOverlappingPoint.js';\nimport GridAlign from './worldposition/GridAlign.js';\nimport LineToTileXYArray from './shape/LineToTileXYArray.js';\nimport CircleToTileXYArray from './shape/CircleToTileXYArray.js';\nimport EllipseToTileXYArray from './shape/EllipseToTileXYArray.js';\nimport PolygonToTileXYArray from './shape/PolygonToTileXYArray.js';\nimport RectangleToTileXYArray from './shape/RectangleToTileXYArray.js';\nimport TriangleToTileXYArray from './shape/TriangleToTileXYArray.js';\nimport ShapeToTileXYArray from './shape/ShapeToTileXYArray.js';\nimport UidToChess from './chess/UidToChess.js';\nimport AddChess from './chess/AddChess.js';\nimport RemoveChess from './chess/RemoveChess.js';\nimport RemoveAllChess from './chess/RemoveAllChess.js';\nimport SwapChess from './chess/SwapChess.js';\nimport GetAllChess from './chess/GetAllChess.js';\nimport Contains from './tileposition/Contains.js';\nimport ForEachTileXY from './tileposition/ForEachTileXY.js';\nimport GetWrapTileXY from './tileposition/GetWrapTileXY.js';\nimport TileXYZToChess from './tileposition/TileXYZToChess.js';\nimport TileXYToChessArray from './tileposition/TileXYToChessArray.js';\nimport TileZToChessArray from './tileposition/TileZToChessArray.js';\nimport TileXYArrayToChessArray from './tileposition/TileXYArrayToChessArray.js';\nimport ChessToTileXYZ from './tileposition/ChessToTileXYZ.js';\nimport GetOppositeDirection from './tileposition/GetOppositeDirection.js';\nimport GetDistance from './tileposition/GetDistance.js';\nimport DirectionBetween from './tileposition/DirectionBetween.js';\nimport IsDirectionInCone from './tileposition/IsDirectionInCone.js';\nimport Offset from './transform/Offset.js';\nimport Mirror from './transform/Mirror.js';\nimport Rotate from './transform/Rotate.js';\nimport Fit from './transform/Fit.js';\nimport GetEmptyTileXYArray from './empty/GetEmptyTileXYArray.js';\nimport GetRandomEmptyTileXY from './empty/GetRandomEmptyTileXY.js';\nimport GetTileXYAtDirection from './neighbors/GetTileXYAtDirection.js';\nimport GetNeighborTileXY from './neighbors/GetNeighborTileXY.js';\nimport GetNeighborTileXYAtAngle from './neighbors/GetNeighborTileXYAtAngle.js';\nimport GetNeighborChess from './neighbors/GetNeighborChess.js';\nimport GetNeighborTileDirection from './neighbors/GetNeighborTileDirection.js';\nimport GetNeighborChessDirection from './neighbors/GetNeighborChessDirection.js';\nimport AreNeighbors from './neighbors/AreNeighbors.js';\nimport RingToTileXYArray from './ring/RingToTileXYArray.js';\nimport FilledRingToTileXYArray from './ring/FilledRingToTileXYArray.js';\nimport HasBlocker from './blocker/HasBlocker.js';\nimport HasEdgeBlocker from './blocker/HasEdgeBlocker.js';\nimport GetGridPoints from './gridpoints/GetGridPoints.js';\nexport default {\n  getChessData: GetChessData,\n  getChessUID: GetChessUID,\n  setBoardWidth: SetBoardWidth,\n  setBoardHeight: SetBoardHeight,\n  tileXYZToKey: TileXYZToKey,\n  tileXYToKey: TileXYToKey,\n  keyToTileXYZ: KeyToTileXYZ,\n  tileXYToWorldX: TileXYToWorldX,\n  tileXYToWorldY: TileXYToWorldY,\n  tileXYToWorldXY: TileXYToWorldXY,\n  tileXYArrayToWorldXYArray: TileXYArrayToWorldXYArray,\n  worldXYToTileX: WorldXYToTileX,\n  worldXYToTileY: WorldXYToTileY,\n  worldXYToTileXY: WorldXYToTileXY,\n  worldXYToChessArray: WorldXYToChessArray,\n  worldXYToChess: WorldXYToChess,\n  worldXYSnapToGrid: WorldXYSnapToGrid,\n  angleBetween: AngleBetween,\n  isAngleInCone: IsAngleInCone,\n  angleToward: AngleToward,\n  angleSnapToDirection: AngleSnapToDirection,\n  isOverlappingPoint: IsOverlappingPoint,\n  gridAlign: GridAlign,\n  lineToTileXYArray: LineToTileXYArray,\n  circleToTileXYArray: CircleToTileXYArray,\n  ellipseToTileXYArray: EllipseToTileXYArray,\n  polygonToTileXYArray: PolygonToTileXYArray,\n  rectangleToTileXYArray: RectangleToTileXYArray,\n  triangleToTileXYArray: TriangleToTileXYArray,\n  shapeToTileXYArray: ShapeToTileXYArray,\n  uidToChess: UidToChess,\n  addChess: AddChess,\n  removeChess: RemoveChess,\n  removeAllChess: RemoveAllChess,\n  swapChess: SwapChess,\n  moveChess: AddChess,\n  getAllChess: GetAllChess,\n  contains: Contains,\n  forEachTileXY: ForEachTileXY,\n  getWrapTileXY: GetWrapTileXY,\n  tileXYZToChess: TileXYZToChess,\n  tileXYToChessArray: TileXYToChessArray,\n  tileZToChessArray: TileZToChessArray,\n  tileXYArrayToChessArray: TileXYArrayToChessArray,\n  chessToTileXYZ: ChessToTileXYZ,\n  offset: Offset,\n  mirror: Mirror,\n  rotate: Rotate,\n  getOppositeDirection: GetOppositeDirection,\n  getDistance: GetDistance,\n  directionBetween: DirectionBetween,\n  isDirectionInCone: IsDirectionInCone,\n  fit: Fit,\n  getEmptyTileXYArray: GetEmptyTileXYArray,\n  getRandomEmptyTileXY: GetRandomEmptyTileXY,\n  getTileXYAtDirection: GetTileXYAtDirection,\n  getNeighborTileXY: GetNeighborTileXY,\n  getNeighborTileXYAtAngle: GetNeighborTileXYAtAngle,\n  getNeighborChess: GetNeighborChess,\n  getNeighborTileDirection: GetNeighborTileDirection,\n  getNeighborChessDirection: GetNeighborChessDirection,\n  areNeighbors: AreNeighbors,\n  ringToTileXYArray: RingToTileXYArray,\n  filledRingToTileXYArray: FilledRingToTileXYArray,\n  hasBlocker: HasBlocker,\n  hasEdgeBlocker: HasEdgeBlocker,\n  getGridPoints: GetGridPoints\n};","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/board/LogicMethods.js"],"names":["GetChessData","GetChessUID","SetBoardWidth","SetBoardHeight","TileXYZToKey","TileXYToKey","KeyToTileXYZ","TileXYToWorldX","TileXYToWorldY","TileXYToWorldXY","TileXYArrayToWorldXYArray","WorldXYToTileX","WorldXYToTileY","WorldXYToTileXY","WorldXYToChessArray","WorldXYToChess","WorldXYSnapToGrid","AngleBetween","IsAngleInCone","AngleToward","AngleSnapToDirection","IsOverlappingPoint","GridAlign","LineToTileXYArray","CircleToTileXYArray","EllipseToTileXYArray","PolygonToTileXYArray","RectangleToTileXYArray","TriangleToTileXYArray","ShapeToTileXYArray","UidToChess","AddChess","RemoveChess","RemoveAllChess","SwapChess","GetAllChess","Contains","ForEachTileXY","GetWrapTileXY","TileXYZToChess","TileXYToChessArray","TileZToChessArray","TileXYArrayToChessArray","ChessToTileXYZ","GetOppositeDirection","GetDistance","DirectionBetween","IsDirectionInCone","Offset","Mirror","Rotate","Fit","GetEmptyTileXYArray","GetRandomEmptyTileXY","GetTileXYAtDirection","GetNeighborTileXY","GetNeighborTileXYAtAngle","GetNeighborChess","GetNeighborTileDirection","GetNeighborChessDirection","AreNeighbors","RingToTileXYArray","FilledRingToTileXYArray","HasBlocker","HasEdgeBlocker","GetGridPoints","getChessData","getChessUID","setBoardWidth","setBoardHeight","tileXYZToKey","tileXYToKey","keyToTileXYZ","tileXYToWorldX","tileXYToWorldY","tileXYToWorldXY","tileXYArrayToWorldXYArray","worldXYToTileX","worldXYToTileY","worldXYToTileXY","worldXYToChessArray","worldXYToChess","worldXYSnapToGrid","angleBetween","isAngleInCone","angleToward","angleSnapToDirection","isOverlappingPoint","gridAlign","lineToTileXYArray","circleToTileXYArray","ellipseToTileXYArray","polygonToTileXYArray","rectangleToTileXYArray","triangleToTileXYArray","shapeToTileXYArray","uidToChess","addChess","removeChess","removeAllChess","swapChess","moveChess","getAllChess","contains","forEachTileXY","getWrapTileXY","tileXYZToChess","tileXYToChessArray","tileZToChessArray","tileXYArrayToChessArray","chessToTileXYZ","offset","mirror","rotate","getOppositeDirection","getDistance","directionBetween","isDirectionInCone","fit","getEmptyTileXYArray","getRandomEmptyTileXY","getTileXYAtDirection","getNeighborTileXY","getNeighborTileXYAtAngle","getNeighborChess","getNeighborTileDirection","getNeighborChessDirection","areNeighbors","ringToTileXYArray","filledRingToTileXYArray","hasBlocker","hasEdgeBlocker","getGridPoints"],"mappings":"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","sourcesContent":["import GetChessData from '../chess/GetChessData.js';\r\nimport GetChessUID from '../chess/GetChessUID.js';\r\n\r\nimport SetBoardWidth from './boarddata/SetBoardWidth.js';\r\nimport SetBoardHeight from './boarddata/SetBoardHeight.js';\r\n\r\nimport TileXYZToKey from '../utils/tilexyzkey/TileXYZToKey.js';\r\nimport TileXYToKey from '../utils/tilexyzkey/TileXYToKey.js';\r\nimport KeyToTileXYZ from '../utils/tilexyzkey/KeyToTileXYZ.js';\r\n\r\nimport TileXYToWorldX from './worldposition/TileXYToWorldX.js';\r\nimport TileXYToWorldY from './worldposition/TileXYToWorldY.js';\r\nimport TileXYToWorldXY from './worldposition/TileXYToWorldXY.js';\r\nimport TileXYArrayToWorldXYArray from './worldposition/TileXYArrayToWorldXYArray.js';\r\nimport WorldXYToTileX from './worldposition/WorldXYToTileX.js';\r\nimport WorldXYToTileY from './worldposition/WorldXYToTileY.js';\r\nimport WorldXYToTileXY from './worldposition/WorldXYToTileXY.js';\r\nimport WorldXYToChessArray from './worldposition/WorldXYToChessArray.js';\r\nimport WorldXYToChess from './worldposition/WorldXYToChess.js';\r\nimport WorldXYSnapToGrid from './worldposition/WorldXYSnapToGrid.js';\r\nimport AngleBetween from './worldposition/AngleBetween.js';\r\nimport IsAngleInCone from './worldposition/IsAngleInCone.js';\r\nimport AngleToward from './worldposition/AngleToward.js';\r\nimport AngleSnapToDirection from './worldposition/AngleSnapToDirection.js';\r\nimport IsOverlappingPoint from './worldposition/IsOverlappingPoint.js';\r\nimport GridAlign from './worldposition/GridAlign.js';\r\n\r\nimport LineToTileXYArray from './shape/LineToTileXYArray.js';\r\nimport CircleToTileXYArray from './shape/CircleToTileXYArray.js';\r\nimport EllipseToTileXYArray from './shape/EllipseToTileXYArray.js';\r\nimport PolygonToTileXYArray from './shape/PolygonToTileXYArray.js';\r\nimport RectangleToTileXYArray from './shape/RectangleToTileXYArray.js';\r\nimport TriangleToTileXYArray from './shape/TriangleToTileXYArray.js';\r\nimport ShapeToTileXYArray from './shape/ShapeToTileXYArray.js';\r\n\r\nimport UidToChess from './chess/UidToChess.js';\r\nimport AddChess from './chess/AddChess.js';\r\nimport RemoveChess from './chess/RemoveChess.js';\r\nimport RemoveAllChess from './chess/RemoveAllChess.js';\r\nimport SwapChess from './chess/SwapChess.js';\r\nimport GetAllChess from './chess/GetAllChess.js';\r\n\r\nimport Contains from './tileposition/Contains.js';\r\nimport ForEachTileXY from './tileposition/ForEachTileXY.js';\r\nimport GetWrapTileXY from './tileposition/GetWrapTileXY.js';\r\nimport TileXYZToChess from './tileposition/TileXYZToChess.js';\r\nimport TileXYToChessArray from './tileposition/TileXYToChessArray.js';\r\nimport TileZToChessArray from './tileposition/TileZToChessArray.js';\r\nimport TileXYArrayToChessArray from './tileposition/TileXYArrayToChessArray.js';\r\nimport ChessToTileXYZ from './tileposition/ChessToTileXYZ.js';\r\nimport GetOppositeDirection from './tileposition/GetOppositeDirection.js';\r\nimport GetDistance from './tileposition/GetDistance.js';\r\nimport DirectionBetween from './tileposition/DirectionBetween.js';\r\nimport IsDirectionInCone from './tileposition/IsDirectionInCone.js';\r\n\r\nimport Offset from './transform/Offset.js';\r\nimport Mirror from './transform/Mirror.js';\r\nimport Rotate from './transform/Rotate.js';\r\nimport Fit from './transform/Fit.js';\r\n\r\nimport GetEmptyTileXYArray from './empty/GetEmptyTileXYArray.js';\r\nimport GetRandomEmptyTileXY from './empty/GetRandomEmptyTileXY.js';\r\n\r\nimport GetTileXYAtDirection from './neighbors/GetTileXYAtDirection.js';\r\nimport GetNeighborTileXY from './neighbors/GetNeighborTileXY.js';\r\nimport GetNeighborTileXYAtAngle from './neighbors/GetNeighborTileXYAtAngle.js';\r\nimport GetNeighborChess from './neighbors/GetNeighborChess.js';\r\nimport GetNeighborTileDirection from './neighbors/GetNeighborTileDirection.js';\r\nimport GetNeighborChessDirection from './neighbors/GetNeighborChessDirection.js';\r\nimport AreNeighbors from './neighbors/AreNeighbors.js';\r\n\r\nimport RingToTileXYArray from './ring/RingToTileXYArray.js';\r\nimport FilledRingToTileXYArray from './ring/FilledRingToTileXYArray.js';\r\n\r\nimport HasBlocker from './blocker/HasBlocker.js';\r\nimport HasEdgeBlocker from './blocker/HasEdgeBlocker.js';\r\n\r\nimport GetGridPoints from './gridpoints/GetGridPoints.js';\r\n\r\nexport default {\r\n    getChessData: GetChessData,\r\n    getChessUID: GetChessUID,\r\n\r\n    setBoardWidth: SetBoardWidth,\r\n    setBoardHeight: SetBoardHeight,\r\n\r\n    tileXYZToKey: TileXYZToKey,\r\n    tileXYToKey: TileXYToKey,\r\n    keyToTileXYZ: KeyToTileXYZ,\r\n\r\n    tileXYToWorldX: TileXYToWorldX,\r\n    tileXYToWorldY: TileXYToWorldY,\r\n    tileXYToWorldXY: TileXYToWorldXY,\r\n    tileXYArrayToWorldXYArray: TileXYArrayToWorldXYArray,\r\n    worldXYToTileX: WorldXYToTileX,\r\n    worldXYToTileY: WorldXYToTileY,\r\n    worldXYToTileXY: WorldXYToTileXY,\r\n    worldXYToChessArray: WorldXYToChessArray,\r\n    worldXYToChess: WorldXYToChess,\r\n    worldXYSnapToGrid: WorldXYSnapToGrid,\r\n    angleBetween: AngleBetween,\r\n    isAngleInCone: IsAngleInCone,\r\n    angleToward: AngleToward,\r\n    angleSnapToDirection: AngleSnapToDirection,\r\n    isOverlappingPoint: IsOverlappingPoint,\r\n    gridAlign: GridAlign,\r\n\r\n    lineToTileXYArray: LineToTileXYArray,\r\n    circleToTileXYArray: CircleToTileXYArray,\r\n    ellipseToTileXYArray: EllipseToTileXYArray,\r\n    polygonToTileXYArray: PolygonToTileXYArray,\r\n    rectangleToTileXYArray: RectangleToTileXYArray,\r\n    triangleToTileXYArray: TriangleToTileXYArray,\r\n    shapeToTileXYArray: ShapeToTileXYArray,\r\n\r\n    uidToChess: UidToChess,\r\n    addChess: AddChess,\r\n    removeChess: RemoveChess,\r\n    removeAllChess: RemoveAllChess,\r\n    swapChess: SwapChess,\r\n    moveChess: AddChess,\r\n    getAllChess: GetAllChess,\r\n\r\n    contains: Contains,\r\n    forEachTileXY: ForEachTileXY,\r\n    getWrapTileXY: GetWrapTileXY,\r\n    tileXYZToChess: TileXYZToChess,\r\n    tileXYToChessArray: TileXYToChessArray,\r\n    tileZToChessArray: TileZToChessArray,\r\n    tileXYArrayToChessArray: TileXYArrayToChessArray,\r\n    chessToTileXYZ: ChessToTileXYZ,\r\n    offset: Offset,\r\n    mirror: Mirror,\r\n    rotate: Rotate,\r\n    getOppositeDirection: GetOppositeDirection,\r\n    getDistance: GetDistance,\r\n    directionBetween: DirectionBetween,\r\n    isDirectionInCone: IsDirectionInCone,\r\n    fit: Fit,\r\n\r\n    getEmptyTileXYArray: GetEmptyTileXYArray,\r\n    getRandomEmptyTileXY: GetRandomEmptyTileXY,\r\n\r\n    getTileXYAtDirection: GetTileXYAtDirection,\r\n    getNeighborTileXY: GetNeighborTileXY,\r\n    getNeighborTileXYAtAngle: GetNeighborTileXYAtAngle,\r\n    getNeighborChess: GetNeighborChess,\r\n    getNeighborTileDirection: GetNeighborTileDirection,\r\n    getNeighborChessDirection: GetNeighborChessDirection,\r\n    areNeighbors: AreNeighbors,\r\n\r\n    ringToTileXYArray: RingToTileXYArray,\r\n    filledRingToTileXYArray: FilledRingToTileXYArray,\r\n\r\n    hasBlocker: HasBlocker,\r\n    hasEdgeBlocker: HasEdgeBlocker,\r\n\r\n    getGridPoints: GetGridPoints,\r\n};"]},"metadata":{},"sourceType":"module"}