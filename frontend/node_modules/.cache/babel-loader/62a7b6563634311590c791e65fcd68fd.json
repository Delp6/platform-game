{"ast":null,"code":"var Mirror = function (mode, chessTileXYZMap, out) {\n  if (mode === undefined) {\n    mode = 1;\n  } else if (typeof mode === 'string') {\n    mode = MODE[mode];\n  }\n\n  if (chessTileXYZMap === undefined) {\n    chessTileXYZMap = this.tileXYZMap; // {uid:{x,y,z}}\n  }\n\n  if (out === undefined) {\n    out = {};\n  }\n\n  var chessTileXYZ, newTileXYZ;\n\n  for (var uid in chessTileXYZMap) {\n    chessTileXYZ = chessTileXYZMap[uid];\n    newTileXYZ = this.board.mirror(chessTileXYZ, mode);\n    newTileXYZ.z = chessTileXYZ.z;\n    out[uid] = newTileXYZ;\n  }\n\n  return out; // {uid:{x,y,z}}\n};\n\nconst MODE = {\n  x: 1,\n  y: 2,\n  'x&y': 3\n};\nexport default Mirror;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/miniboard/transform/transferfunctions/Mirror.js"],"names":["Mirror","mode","chessTileXYZMap","out","undefined","MODE","tileXYZMap","chessTileXYZ","newTileXYZ","uid","board","mirror","z","x","y"],"mappings":"AAAA,IAAIA,MAAM,GAAG,UAAUC,IAAV,EAAgBC,eAAhB,EAAiCC,GAAjC,EAAsC;AAC/C,MAAIF,IAAI,KAAKG,SAAb,EAAwB;AACpBH,IAAAA,IAAI,GAAG,CAAP;AACH,GAFD,MAEO,IAAI,OAAQA,IAAR,KAAkB,QAAtB,EAAgC;AACnCA,IAAAA,IAAI,GAAGI,IAAI,CAACJ,IAAD,CAAX;AACH;;AACD,MAAIC,eAAe,KAAKE,SAAxB,EAAmC;AAC/BF,IAAAA,eAAe,GAAG,KAAKI,UAAvB,CAD+B,CACI;AACtC;;AACD,MAAIH,GAAG,KAAKC,SAAZ,EAAuB;AACnBD,IAAAA,GAAG,GAAG,EAAN;AACH;;AACD,MAAII,YAAJ,EAAkBC,UAAlB;;AACA,OAAK,IAAIC,GAAT,IAAgBP,eAAhB,EAAiC;AAC7BK,IAAAA,YAAY,GAAGL,eAAe,CAACO,GAAD,CAA9B;AACAD,IAAAA,UAAU,GAAG,KAAKE,KAAL,CAAWC,MAAX,CAAkBJ,YAAlB,EAAgCN,IAAhC,CAAb;AACAO,IAAAA,UAAU,CAACI,CAAX,GAAeL,YAAY,CAACK,CAA5B;AACAT,IAAAA,GAAG,CAACM,GAAD,CAAH,GAAWD,UAAX;AACH;;AACD,SAAOL,GAAP,CAnB+C,CAmBnC;AACf,CApBD;;AAsBA,MAAME,IAAI,GAAG;AACTQ,EAAAA,CAAC,EAAE,CADM;AAETC,EAAAA,CAAC,EAAE,CAFM;AAGT,SAAO;AAHE,CAAb;AAKA,eAAed,MAAf","sourcesContent":["var Mirror = function (mode, chessTileXYZMap, out) {\r\n    if (mode === undefined) {\r\n        mode = 1;\r\n    } else if (typeof (mode) === 'string') {\r\n        mode = MODE[mode];\r\n    }\r\n    if (chessTileXYZMap === undefined) {\r\n        chessTileXYZMap = this.tileXYZMap; // {uid:{x,y,z}}\r\n    }\r\n    if (out === undefined) {\r\n        out = {};\r\n    }\r\n    var chessTileXYZ, newTileXYZ;\r\n    for (var uid in chessTileXYZMap) {\r\n        chessTileXYZ = chessTileXYZMap[uid];\r\n        newTileXYZ = this.board.mirror(chessTileXYZ, mode);\r\n        newTileXYZ.z = chessTileXYZ.z;\r\n        out[uid] = newTileXYZ;\r\n    }\r\n    return out; // {uid:{x,y,z}}\r\n}\r\n\r\nconst MODE = {\r\n    x: 1,\r\n    y: 2,\r\n    'x&y': 3\r\n}\r\nexport default Mirror;"]},"metadata":{},"sourceType":"module"}