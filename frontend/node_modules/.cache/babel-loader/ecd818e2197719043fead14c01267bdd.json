{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmode\\\\Documents\\\\ProjektyFullStack\\\\war-of-champions\\\\frontend\\\\src\\\\phaser\\\\PhaserMain.js\";\nimport { IonPhaser } from \"@ion-phaser/react\";\nimport React from \"react\";\nimport Phaser from \"phaser\";\n\nconst PhaserMain = () => {\n  let player;\n  let cursors;\n  let coins;\n  let coinLayer;\n  let golemsLayer;\n  let golemsCollisions;\n  let golem1, golem2, golem3, golem4;\n  let golem1Velocity = 100;\n  let golem2Velocity = 100;\n  let golem3Velocity = 100;\n  let golem4Velocity = 100;\n  const gameState = {\n    initialize: true,\n    game: {\n      width: 960,\n      height: 600,\n      type: Phaser.AUTO,\n      scene: {\n        key: \"main\",\n        preload: preload,\n        create: create,\n        update: update\n      },\n      physics: {\n        default: \"arcade\",\n        arcade: {\n          gravity: {\n            y: 500\n          },\n          debug: false\n        }\n      }\n    }\n  };\n\n  function preload() {\n    this.load.image('background', 'assets/images/background.png');\n    this.load.spritesheet(\"adventurer\", \"assets/images/adventurer.png\", {\n      frameWidth: 64,\n      frameHeight: 88\n    });\n    this.load.image('tiles', 'assets/tilesets/platformPack_tilesheet.png');\n    this.load.tilemapTiledJSON('map', 'assets/tilemaps/level1.json');\n    this.load.image(\"coin\", \"assets/images/coin.png\");\n    this.load.spritesheet(\"golem\", \"assets/images/golem.png\", {\n      frameWidth: 135,\n      frameHeight: 90\n    });\n  }\n\n  function create() {\n    //background\n    const backgroundImage = this.add.image(0, 0, 'background').setOrigin(0, 0);\n    backgroundImage.setScale(20, 0.8); //map\n\n    const map = this.make.tilemap({\n      key: 'map'\n    });\n    const tileset = map.addTilesetImage(\"kenney_simple_platformer\", 'tiles');\n    const platforms = map.createStaticLayer('Platforms', tileset, 0, 200);\n    map.createStaticLayer(\"Background\", tileset, 0, 200); //coin layer\n\n    coinLayer = map.getObjectLayer('Coins')['objects'];\n    coins = this.physics.add.staticGroup();\n    coinLayer.forEach(object => {\n      const coin = coins.create(object.x, object.y + 200 - object.height, 'coin').setOrigin(0, 0);\n    }); // golemsLayer\n\n    golemsLayer = map.getObjectLayer('GolemsCollision')['objects'];\n    golemsCollisions = this.physics.add.staticGroup();\n    golemsLayer.forEach(object => {\n      const collision = golemsCollisions.create(object.x, object.y + 200 - object.height, null).setOrigin(0, 0);\n      collision.setScale(object.width / 32, object.height / 32);\n      collision.setVisible(false);\n    }); // map\n\n    platforms.setCollisionByExclusion(-1, true); //cursors\n\n    cursors = this.input.keyboard.createCursorKeys(); //player 200\n\n    player = this.physics.add.sprite(750 + 44 * 64, 300, \"adventurer\");\n    player.body.setSize(player.width - 15); //golems\n\n    golem1 = this.physics.add.sprite(750, 480, \"golem\");\n    golem1.body.setSize(player.width - 15, player.height - 10);\n    golem2 = this.physics.add.sprite(750 + 17 * 64, 300, \"golem\");\n    golem2.body.setSize(player.width - 15, player.height - 10);\n    golem3 = this.physics.add.sprite(750 + 24 * 64, 500, \"golem\");\n    golem3.body.setSize(player.width - 15, player.height - 10);\n    golem4 = this.physics.add.sprite(750 + 44 * 64, 480, \"golem\");\n    golem4.body.setSize(player.width - 15, player.height - 10); //physics\n\n    this.physics.add.collider(player, platforms);\n    this.physics.add.collider(golem1, platforms);\n    this.physics.add.collider(golem2, platforms);\n    this.physics.add.collider(golem3, platforms); //this.physics.add.collider(golem4, platforms);\n\n    this.physics.add.overlap(player, coins, collectCoin, null, this);\n    this.physics.add.collider(golem1, golemsCollisions);\n    this.physics.add.collider(golem1, golemsCollisions);\n    this.physics.add.collider(golem2, golemsCollisions);\n    this.physics.add.collider(golem3, golemsCollisions); //this.physics.add.collider(golem4, golemsCollisions);\n    //camera\n\n    this.cameras.main.setBounds(0, 0, backgroundImage.displayWidth, backgroundImage.displayHeight);\n    this.cameras.main.startFollow(player); // golems initial velocity\n\n    golem1.setVelocityX(golem1Velocity);\n    golem2.setVelocityX(golem2Velocity);\n    golem3.setVelocityX(golem3Velocity); //animations\n\n    this.anims.create({\n      key: 'left',\n      frames: this.anims.generateFrameNumbers('adventurer', {\n        start: 7,\n        end: 8\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'stand',\n      frames: [{\n        key: 'adventurer',\n        frame: 6\n      }],\n      frameRate: 20\n    });\n    this.anims.create({\n      key: 'right',\n      frames: this.anims.generateFrameNumbers('adventurer', {\n        start: 9,\n        end: 10\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'jump-right',\n      frames: [{\n        key: 'adventurer',\n        frame: 3\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'jump-left',\n      frames: [{\n        key: 'adventurer',\n        frame: 2\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'attack-right',\n      frames: [{\n        key: 'adventurer',\n        frame: 1\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'attack-left',\n      frames: [{\n        key: 'adventurer',\n        frame: 0\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n  }\n\n  function update() {\n    /*move*/\n    if (cursors.left.isDown && !cursors.space.isDown) {\n      player.setVelocityX(-160);\n\n      if (player.body.onFloor()) {\n        player.anims.play('left', true);\n      }\n    } else if (cursors.right.isDown && !cursors.space.isDown) {\n      player.setVelocityX(160);\n\n      if (player.body.onFloor()) {\n        player.anims.play('right', true);\n      }\n    } else {\n      player.setVelocityX(0);\n      player.anims.play('stand');\n    }\n    /*jump*/\n\n\n    if (cursors.up.isDown && player.body.onFloor()) {\n      player.setVelocityY(-330);\n      player.anims.play('jump-right', true);\n    } else if (!player.body.onFloor()) {\n      if (cursors.left.isDown) {\n        player.anims.play('jump-left', true);\n      } else {\n        player.anims.play('jump-right', true);\n      }\n    }\n    /*action*/\n\n\n    if (cursors.space.isDown && cursors.left.isDown && player.body.onFloor()) {\n      player.anims.play('attack-left', true);\n    } else if (cursors.space.isDown && player.body.onFloor()) {\n      player.anims.play('attack-right', true);\n    }\n    /*golem movement*/\n\n\n    if (golem1.body.blocked.right) {\n      golem1Velocity = -golem1Velocity;\n      golem1.setVelocityX(golem1Velocity);\n    }\n\n    if (golem1.body.blocked.left) {\n      golem1Velocity = -golem1Velocity;\n      golem1.setVelocityX(golem1Velocity);\n    }\n\n    if (golem2.body.blocked.right) {\n      golem2Velocity = -golem2Velocity;\n      golem2.setVelocityX(golem2Velocity);\n    }\n\n    if (golem2.body.blocked.left) {\n      golem2Velocity = -golem2Velocity;\n      golem2.setVelocityX(golem2Velocity);\n    }\n\n    if (golem3.body.blocked.right) {\n      golem3Velocity = -golem3Velocity;\n      golem3.setVelocityX(golem3Velocity);\n    }\n\n    if (golem3.body.blocked.left) {\n      golem3Velocity = -golem3Velocity;\n      golem3.setVelocityX(golem3Velocity);\n    }\n  }\n\n  function collectCoin(player, coin) {\n    coin.destroy(coin.x, coin.y);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonPhaser, {\n    game: gameState.game,\n    initialize: gameState.initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PhaserMain;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/src/phaser/PhaserMain.js"],"names":["IonPhaser","React","Phaser","PhaserMain","player","cursors","coins","coinLayer","golemsLayer","golemsCollisions","golem1","golem2","golem3","golem4","golem1Velocity","golem2Velocity","golem3Velocity","golem4Velocity","gameState","initialize","game","width","height","type","AUTO","scene","key","preload","create","update","physics","default","arcade","gravity","y","debug","load","image","spritesheet","frameWidth","frameHeight","tilemapTiledJSON","backgroundImage","add","setOrigin","setScale","map","make","tilemap","tileset","addTilesetImage","platforms","createStaticLayer","getObjectLayer","staticGroup","forEach","object","coin","x","collision","setVisible","setCollisionByExclusion","input","keyboard","createCursorKeys","sprite","body","setSize","collider","overlap","collectCoin","cameras","main","setBounds","displayWidth","displayHeight","startFollow","setVelocityX","anims","frames","generateFrameNumbers","start","end","frameRate","repeat","frame","left","isDown","space","onFloor","play","right","up","setVelocityY","blocked","destroy"],"mappings":"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","sourcesContent":["import {IonPhaser} from \"@ion-phaser/react\";\r\nimport React from \"react\";\r\nimport Phaser from \"phaser\";\r\n\r\n\r\nconst PhaserMain = () => {\r\n\r\n    let player;\r\n    let cursors;\r\n    let coins;\r\n    let coinLayer;\r\n    let golemsLayer;\r\n    let golemsCollisions;\r\n    let golem1, golem2, golem3, golem4;\r\n    let golem1Velocity = 100;\r\n    let golem2Velocity = 100;\r\n    let golem3Velocity = 100;\r\n    let golem4Velocity = 100;\r\n\r\n    const gameState = {\r\n        initialize: true,\r\n        game: {\r\n            width: 960,\r\n            height: 600,\r\n            type: Phaser.AUTO,\r\n            scene: {\r\n                key: \"main\",\r\n                preload: preload,\r\n                create: create,\r\n                update: update,\r\n            },\r\n            physics: {\r\n                default: \"arcade\",\r\n                arcade: {\r\n                    gravity: {y: 500},\r\n                    debug: false\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    function preload() {\r\n        this.load.image('background', 'assets/images/background.png');\r\n        this.load.spritesheet(\"adventurer\",\r\n            \"assets/images/adventurer.png\",\r\n            {frameWidth: 64, frameHeight: 88}\r\n        );\r\n        this.load.image('tiles', 'assets/tilesets/platformPack_tilesheet.png');\r\n        this.load.tilemapTiledJSON('map', 'assets/tilemaps/level1.json');\r\n        this.load.image(\"coin\", \"assets/images/coin.png\");\r\n        this.load.spritesheet(\"golem\",\r\n            \"assets/images/golem.png\",\r\n            {frameWidth: 135, frameHeight: 90}\r\n        );\r\n\r\n    }\r\n\r\n    function create() {\r\n        //background\r\n        const backgroundImage = this.add.image(0, 0, 'background').setOrigin(0, 0);\r\n        backgroundImage.setScale(20, 0.8);\r\n        //map\r\n        const map = this.make.tilemap({key: 'map'});\r\n        const tileset = map.addTilesetImage(\"kenney_simple_platformer\", 'tiles');\r\n        const platforms = map.createStaticLayer('Platforms', tileset, 0, 200);\r\n        map.createStaticLayer(\"Background\", tileset, 0, 200)\r\n        //coin layer\r\n        coinLayer = map.getObjectLayer('Coins')['objects'];\r\n        coins = this.physics.add.staticGroup()\r\n        coinLayer.forEach(object => {\r\n            const coin = coins.create(object.x, object.y + 200 - object.height, 'coin').setOrigin(0, 0);\r\n        });\r\n        // golemsLayer\r\n        golemsLayer = map.getObjectLayer('GolemsCollision')['objects']\r\n        golemsCollisions = this.physics.add.staticGroup()\r\n        golemsLayer.forEach(object => {\r\n            const collision = golemsCollisions.create(object.x, object.y + 200 - object.height, null).setOrigin(0, 0);\r\n            collision.setScale(object.width/32, object.height/32)\r\n            collision.setVisible(false)\r\n        });\r\n        // map\r\n        platforms.setCollisionByExclusion(-1, true);\r\n        //cursors\r\n        cursors = this.input.keyboard.createCursorKeys();\r\n        //player 200\r\n        player = this.physics.add.sprite(750 + 44 *64, 300, \"adventurer\");\r\n        player.body.setSize(player.width - 15)\r\n        //golems\r\n        golem1 = this.physics.add.sprite(750, 480, \"golem\");\r\n        golem1.body.setSize(player.width - 15, player.height - 10)\r\n        golem2 = this.physics.add.sprite(750 + 17 *64, 300, \"golem\");\r\n        golem2.body.setSize(player.width - 15, player.height - 10)\r\n        golem3 = this.physics.add.sprite(750 + 24 *64, 500, \"golem\");\r\n        golem3.body.setSize(player.width - 15, player.height - 10)\r\n        golem4 = this.physics.add.sprite(750 + 44 *64, 480, \"golem\");\r\n        golem4.body.setSize(player.width - 15, player.height - 10)\r\n        //physics\r\n        this.physics.add.collider(player, platforms);\r\n        this.physics.add.collider(golem1, platforms);\r\n        this.physics.add.collider(golem2, platforms);\r\n        this.physics.add.collider(golem3, platforms);\r\n        //this.physics.add.collider(golem4, platforms);\r\n        this.physics.add.overlap(player, coins, collectCoin, null, this);\r\n        this.physics.add.collider(golem1, golemsCollisions);\r\n        this.physics.add.collider(golem1, golemsCollisions);\r\n        this.physics.add.collider(golem2, golemsCollisions);\r\n        this.physics.add.collider(golem3, golemsCollisions);\r\n        //this.physics.add.collider(golem4, golemsCollisions);\r\n\r\n        //camera\r\n        this.cameras.main.setBounds(0, 0, backgroundImage.displayWidth, backgroundImage.displayHeight);\r\n        this.cameras.main.startFollow(player);\r\n\r\n        // golems initial velocity\r\n        golem1.setVelocityX(golem1Velocity);\r\n        golem2.setVelocityX(golem2Velocity);\r\n        golem3.setVelocityX(golem3Velocity);\r\n        //animations\r\n        this.anims.create({\r\n            key: 'left',\r\n            frames: this.anims.generateFrameNumbers('adventurer', {start: 7, end: 8}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'stand',\r\n            frames: [{key: 'adventurer', frame: 6}],\r\n            frameRate: 20\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'right',\r\n            frames: this.anims.generateFrameNumbers('adventurer', {start: 9, end: 10}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'jump-right',\r\n            frames: [{key: 'adventurer', frame: 3}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'jump-left',\r\n            frames: [{key: 'adventurer', frame: 2}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'attack-right',\r\n            frames: [{key: 'adventurer', frame: 1}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'attack-left',\r\n            frames: [{key: 'adventurer', frame: 0}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n    }\r\n\r\n    function update() {\r\n\r\n        /*move*/\r\n        if (cursors.left.isDown && !cursors.space.isDown) {\r\n            player.setVelocityX(-160);\r\n            if (player.body.onFloor()) {\r\n                player.anims.play('left', true);\r\n            }\r\n        } else if (cursors.right.isDown && !cursors.space.isDown) {\r\n            player.setVelocityX(160);\r\n            if (player.body.onFloor()) {\r\n                player.anims.play('right', true);\r\n            }\r\n        } else {\r\n            player.setVelocityX(0);\r\n            player.anims.play('stand');\r\n        }\r\n        /*jump*/\r\n        if (cursors.up.isDown && player.body.onFloor()) {\r\n            player.setVelocityY(-330);\r\n            player.anims.play('jump-right', true);\r\n        } else if (!player.body.onFloor()) {\r\n            if (cursors.left.isDown) {\r\n                player.anims.play('jump-left', true);\r\n            } else {\r\n                player.anims.play('jump-right', true);\r\n            }\r\n        }\r\n        /*action*/\r\n        if (cursors.space.isDown && cursors.left.isDown && player.body.onFloor()) {\r\n            player.anims.play('attack-left', true);\r\n        } else if (cursors.space.isDown && player.body.onFloor()) {\r\n            player.anims.play('attack-right', true);\r\n        }\r\n        /*golem movement*/\r\n        if(golem1.body.blocked.right) {\r\n            golem1Velocity = -golem1Velocity;\r\n            golem1.setVelocityX(golem1Velocity);\r\n        }\r\n        if(golem1.body.blocked.left) {\r\n            golem1Velocity = -golem1Velocity;\r\n            golem1.setVelocityX(golem1Velocity);\r\n        }\r\n        if(golem2.body.blocked.right) {\r\n            golem2Velocity = -golem2Velocity;\r\n            golem2.setVelocityX(golem2Velocity);\r\n        }\r\n        if(golem2.body.blocked.left) {\r\n            golem2Velocity = -golem2Velocity;\r\n            golem2.setVelocityX(golem2Velocity);\r\n        }\r\n        if(golem3.body.blocked.right) {\r\n            golem3Velocity = -golem3Velocity;\r\n            golem3.setVelocityX(golem3Velocity);\r\n        }\r\n        if(golem3.body.blocked.left) {\r\n            golem3Velocity = -golem3Velocity;\r\n            golem3.setVelocityX(golem3Velocity);\r\n        }\r\n\r\n    }\r\n\r\n    function collectCoin(player, coin) {\r\n        coin.destroy(coin.x, coin.y);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <IonPhaser game={gameState.game} initialize={gameState.initialize}/>\r\n        </>\r\n    );\r\n}\r\nexport default PhaserMain;"]},"metadata":{},"sourceType":"module"}