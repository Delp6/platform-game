{"ast":null,"code":"// Not included in Base Gird object.\n// Delta tileXY to direction\nimport { OrthogonalMap } from './DistanceToDeltaTileXY.js';\n\nvar ReverseDirMap = function (dirMap) {\n  var out = {},\n      entry,\n      x,\n      y;\n\n  for (var dir in dirMap) {\n    entry = dirMap[dir]; // [x, y]\n\n    x = entry[0];\n    y = entry[1];\n\n    if (!out.hasOwnProperty(x)) {\n      out[x] = {};\n    }\n\n    out[x][y] = parseInt(dir);\n  }\n\n  return out;\n};\n\nconst OrthogonalMapOut = ReverseDirMap(OrthogonalMap);\nconst IsometricMapOut = OrthogonalMapOut;\nexport { OrthogonalMapOut as OrthogonalMap, IsometricMapOut as IsometricMap };","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/utils/grid/quad/DeltaTileXYToDirection.js"],"names":["OrthogonalMap","ReverseDirMap","dirMap","out","entry","x","y","dir","hasOwnProperty","parseInt","OrthogonalMapOut","IsometricMapOut","IsometricMap"],"mappings":"AAAA;AACA;AAEA,SACIA,aADJ,QAEO,4BAFP;;AAIA,IAAIC,aAAa,GAAG,UAAUC,MAAV,EAAkB;AAClC,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,KADJ;AAAA,MACWC,CADX;AAAA,MACcC,CADd;;AAEA,OAAK,IAAIC,GAAT,IAAgBL,MAAhB,EAAwB;AACpBE,IAAAA,KAAK,GAAGF,MAAM,CAACK,GAAD,CAAd,CADoB,CACC;;AACrBF,IAAAA,CAAC,GAAGD,KAAK,CAAC,CAAD,CAAT;AACAE,IAAAA,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAT;;AACA,QAAI,CAACD,GAAG,CAACK,cAAJ,CAAmBH,CAAnB,CAAL,EAA4B;AACxBF,MAAAA,GAAG,CAACE,CAAD,CAAH,GAAS,EAAT;AACH;;AACDF,IAAAA,GAAG,CAACE,CAAD,CAAH,CAAOC,CAAP,IAAYG,QAAQ,CAACF,GAAD,CAApB;AACH;;AACD,SAAOJ,GAAP;AACH,CAbD;;AAeA,MAAMO,gBAAgB,GAAGT,aAAa,CAACD,aAAD,CAAtC;AACA,MAAMW,eAAe,GAAGD,gBAAxB;AAEA,SACIA,gBAAgB,IAAIV,aADxB,EAEIW,eAAe,IAAIC,YAFvB","sourcesContent":["// Not included in Base Gird object.\r\n// Delta tileXY to direction\r\n\r\nimport {\r\n    OrthogonalMap\r\n} from './DistanceToDeltaTileXY.js';\r\n\r\nvar ReverseDirMap = function (dirMap) {\r\n    var out = {},\r\n        entry, x, y;\r\n    for (var dir in dirMap) {\r\n        entry = dirMap[dir]; // [x, y]\r\n        x = entry[0];\r\n        y = entry[1];\r\n        if (!out.hasOwnProperty(x)) {\r\n            out[x] = {}\r\n        }\r\n        out[x][y] = parseInt(dir);\r\n    }\r\n    return out;\r\n}\r\n\r\nconst OrthogonalMapOut = ReverseDirMap(OrthogonalMap);\r\nconst IsometricMapOut = OrthogonalMapOut;\r\n\r\nexport {\r\n    OrthogonalMapOut as OrthogonalMap,\r\n    IsometricMapOut as IsometricMap\r\n};"]},"metadata":{},"sourceType":"module"}