{"ast":null,"code":"import { OrthogonalMap, IsometricMap } from './DeltaTileXYToDirection.js';\n\nvar GetNeighborTileDirection = function (srcTileXY, neighborTileXY) {\n  var deltaTileXYToDirMap;\n\n  switch (this.mode) {\n    case 0:\n      // orthogonal\n      deltaTileXYToDirMap = OrthogonalMap;\n      break;\n\n    case 1:\n      // isometric\n      deltaTileXYToDirMap = IsometricMap;\n      break;\n\n    case 2:\n      // staggered\n      break;\n  }\n\n  var deltaTileX = neighborTileXY.x - srcTileXY.x;\n  var deltaTileY = neighborTileXY.y - srcTileXY.y;\n\n  if (deltaTileXYToDirMap.hasOwnProperty(deltaTileX)) {\n    var xEntry = deltaTileXYToDirMap[deltaTileX];\n\n    if (xEntry.hasOwnProperty(deltaTileY)) {\n      return xEntry[deltaTileY];\n    }\n  }\n\n  return null;\n};\n\nexport default GetNeighborTileDirection;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/utils/grid/quad/GetNeighborTileDirection.js"],"names":["OrthogonalMap","IsometricMap","GetNeighborTileDirection","srcTileXY","neighborTileXY","deltaTileXYToDirMap","mode","deltaTileX","x","deltaTileY","y","hasOwnProperty","xEntry"],"mappings":"AAAA,SACIA,aADJ,EAEIC,YAFJ,QAGO,6BAHP;;AAKA,IAAIC,wBAAwB,GAAG,UAAUC,SAAV,EAAqBC,cAArB,EAAqC;AAChE,MAAIC,mBAAJ;;AACA,UAAQ,KAAKC,IAAb;AACI,SAAK,CAAL;AAAQ;AACJD,MAAAA,mBAAmB,GAAGL,aAAtB;AACA;;AACJ,SAAK,CAAL;AAAQ;AACJK,MAAAA,mBAAmB,GAAGJ,YAAtB;AACA;;AACJ,SAAK,CAAL;AAAQ;AACJ;AARR;;AAWA,MAAIM,UAAU,GAAGH,cAAc,CAACI,CAAf,GAAmBL,SAAS,CAACK,CAA9C;AACA,MAAIC,UAAU,GAAGL,cAAc,CAACM,CAAf,GAAmBP,SAAS,CAACO,CAA9C;;AACA,MAAIL,mBAAmB,CAACM,cAApB,CAAmCJ,UAAnC,CAAJ,EAAoD;AAChD,QAAIK,MAAM,GAAGP,mBAAmB,CAACE,UAAD,CAAhC;;AACA,QAAIK,MAAM,CAACD,cAAP,CAAsBF,UAAtB,CAAJ,EAAuC;AACnC,aAAOG,MAAM,CAACH,UAAD,CAAb;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CAtBD;;AAuBA,eAAeP,wBAAf","sourcesContent":["import {\r\n    OrthogonalMap,\r\n    IsometricMap\r\n} from './DeltaTileXYToDirection.js';\r\n\r\nvar GetNeighborTileDirection = function (srcTileXY, neighborTileXY) {\r\n    var deltaTileXYToDirMap\r\n    switch (this.mode) {\r\n        case 0: // orthogonal\r\n            deltaTileXYToDirMap = OrthogonalMap;\r\n            break;\r\n        case 1: // isometric\r\n            deltaTileXYToDirMap = IsometricMap;\r\n            break;\r\n        case 2: // staggered\r\n            break;\r\n    }\r\n\r\n    var deltaTileX = neighborTileXY.x - srcTileXY.x;\r\n    var deltaTileY = neighborTileXY.y - srcTileXY.y;    \r\n    if (deltaTileXYToDirMap.hasOwnProperty(deltaTileX)) {\r\n        var xEntry = deltaTileXYToDirMap[deltaTileX]\r\n        if (xEntry.hasOwnProperty(deltaTileY)) {\r\n            return xEntry[deltaTileY];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport default GetNeighborTileDirection;"]},"metadata":{},"sourceType":"module"}