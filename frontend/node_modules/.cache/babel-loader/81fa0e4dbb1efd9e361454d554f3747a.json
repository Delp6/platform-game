{"ast":null,"code":"import OnDragEnd from './DragEnd.js';\n\nvar OnPointerUp = function (pointer) {\n  if (!this.input.enable) {\n    return;\n  }\n\n  OnTouchTileEnd.call(this, pointer);\n  OnDragEnd.call(this, pointer);\n\n  if (this.input.pointer === pointer) {\n    // Release touch pointer\n    this.input.pointer = null;\n  }\n};\n\nvar OnTouchTileEnd = function (pointer) {\n  // Get touched tileX, tileY\n  var gird = this.grid;\n  gird.saveOrigin();\n  gird.setOriginPosition(this.x, this.y);\n  var out = this.board.worldXYToTileXY(pointer.x, pointer.y, true);\n  var tileX = out.x,\n      tileY = out.y;\n  gird.restoreOrigin();\n  this.input.tilePosition.x = tileX;\n  this.input.tilePosition.y = tileY; // Get touched chess\n\n  var gameObjects = this.board.tileXYToChessArray(tileX, tileY, globChessArray);\n  var hitChess = gameObjects.length > 0;\n\n  if (hitChess) {\n    // Fire events\n    var gameObject;\n\n    for (var i = 0, cnt = gameObjects.length; i < cnt; i++) {\n      gameObject = gameObjects[i];\n\n      if (gameObject.emit) {\n        gameObject.emit('miniboard.pointerup', pointer);\n      }\n\n      this.emit('gameobjectup', pointer, gameObject);\n    }\n\n    this.emit('pointerup', pointer, this);\n  }\n\n  globChessArray.length = 0;\n  return hitChess;\n};\n\nvar globChessArray = [];\nexport default OnPointerUp;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/miniboard/input/OnPointerUp.js"],"names":["OnDragEnd","OnPointerUp","pointer","input","enable","OnTouchTileEnd","call","gird","grid","saveOrigin","setOriginPosition","x","y","out","board","worldXYToTileXY","tileX","tileY","restoreOrigin","tilePosition","gameObjects","tileXYToChessArray","globChessArray","hitChess","length","gameObject","i","cnt","emit"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;;AAEA,IAAIC,WAAW,GAAG,UAAUC,OAAV,EAAmB;AACjC,MAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACpB;AACH;;AAEDC,EAAAA,cAAc,CAACC,IAAf,CAAoB,IAApB,EAA0BJ,OAA1B;AACAF,EAAAA,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqBJ,OAArB;;AAEA,MAAI,KAAKC,KAAL,CAAWD,OAAX,KAAuBA,OAA3B,EAAoC;AAAE;AAClC,SAAKC,KAAL,CAAWD,OAAX,GAAqB,IAArB;AACH;AACJ,CAXD;;AAaA,IAAIG,cAAc,GAAG,UAAUH,OAAV,EAAmB;AACpC;AACA,MAAIK,IAAI,GAAG,KAAKC,IAAhB;AACAD,EAAAA,IAAI,CAACE,UAAL;AACAF,EAAAA,IAAI,CAACG,iBAAL,CAAuB,KAAKC,CAA5B,EAA+B,KAAKC,CAApC;AACA,MAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2Bb,OAAO,CAACS,CAAnC,EAAsCT,OAAO,CAACU,CAA9C,EAAiD,IAAjD,CAAV;AACA,MAAII,KAAK,GAAGH,GAAG,CAACF,CAAhB;AAAA,MACIM,KAAK,GAAGJ,GAAG,CAACD,CADhB;AAEAL,EAAAA,IAAI,CAACW,aAAL;AACA,OAAKf,KAAL,CAAWgB,YAAX,CAAwBR,CAAxB,GAA4BK,KAA5B;AACA,OAAKb,KAAL,CAAWgB,YAAX,CAAwBP,CAAxB,GAA4BK,KAA5B,CAVoC,CAYpC;;AACA,MAAIG,WAAW,GAAG,KAAKN,KAAL,CAAWO,kBAAX,CAA8BL,KAA9B,EAAqCC,KAArC,EAA4CK,cAA5C,CAAlB;AACA,MAAIC,QAAQ,GAAIH,WAAW,CAACI,MAAZ,GAAqB,CAArC;;AACA,MAAID,QAAJ,EAAc;AACV;AACA,QAAIE,UAAJ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGP,WAAW,CAACI,MAAlC,EAA0CE,CAAC,GAAGC,GAA9C,EAAmDD,CAAC,EAApD,EAAwD;AACpDD,MAAAA,UAAU,GAAGL,WAAW,CAACM,CAAD,CAAxB;;AACA,UAAID,UAAU,CAACG,IAAf,EAAqB;AACjBH,QAAAA,UAAU,CAACG,IAAX,CAAgB,qBAAhB,EAAuC1B,OAAvC;AACH;;AACD,WAAK0B,IAAL,CAAU,cAAV,EAA0B1B,OAA1B,EAAmCuB,UAAnC;AACH;;AACD,SAAKG,IAAL,CAAU,WAAV,EAAuB1B,OAAvB,EAAgC,IAAhC;AACH;;AACDoB,EAAAA,cAAc,CAACE,MAAf,GAAwB,CAAxB;AACA,SAAOD,QAAP;AACH,CA7BD;;AA+BA,IAAID,cAAc,GAAG,EAArB;AAEA,eAAerB,WAAf","sourcesContent":["import OnDragEnd from './DragEnd.js';\r\n\r\nvar OnPointerUp = function (pointer) {\r\n    if (!this.input.enable) {\r\n        return;\r\n    }\r\n\r\n    OnTouchTileEnd.call(this, pointer);\r\n    OnDragEnd.call(this, pointer);\r\n\r\n    if (this.input.pointer === pointer) { // Release touch pointer\r\n        this.input.pointer = null;\r\n    }\r\n}\r\n\r\nvar OnTouchTileEnd = function (pointer) {\r\n    // Get touched tileX, tileY\r\n    var gird = this.grid;\r\n    gird.saveOrigin();\r\n    gird.setOriginPosition(this.x, this.y);\r\n    var out = this.board.worldXYToTileXY(pointer.x, pointer.y, true);\r\n    var tileX = out.x,\r\n        tileY = out.y;\r\n    gird.restoreOrigin();\r\n    this.input.tilePosition.x = tileX;\r\n    this.input.tilePosition.y = tileY;\r\n\r\n    // Get touched chess\r\n    var gameObjects = this.board.tileXYToChessArray(tileX, tileY, globChessArray);\r\n    var hitChess = (gameObjects.length > 0);\r\n    if (hitChess) {\r\n        // Fire events\r\n        var gameObject;\r\n        for (var i = 0, cnt = gameObjects.length; i < cnt; i++) {\r\n            gameObject = gameObjects[i];\r\n            if (gameObject.emit) {\r\n                gameObject.emit('miniboard.pointerup', pointer);\r\n            }\r\n            this.emit('gameobjectup', pointer, gameObject);\r\n        }\r\n        this.emit('pointerup', pointer, this);\r\n    }\r\n    globChessArray.length = 0;\r\n    return hitChess;\r\n}\r\n\r\nvar globChessArray = [];\r\n\r\nexport default OnPointerUp;"]},"metadata":{},"sourceType":"module"}