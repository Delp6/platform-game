{"ast":null,"code":"import GetMinMaxTileXY from '../utils/GetMinMaxTileXY.js';\nimport Linear from '../../../utils/math/Linear.js';\nimport OffsetTransfer from './transferfunctions/Offset.js';\nimport ResetChessTileXYZ from './ResetChessTileXYZ.js';\n\nvar SetOrigin = function (originX, originY) {\n  switch (originX) {\n    case 'center':\n      originX = 0.5;\n      originY = 0.5;\n      break;\n\n    case 'top-left':\n    case 'left-top':\n      originX = 0;\n      originY = 0;\n      break;\n  }\n\n  if (originX === undefined) {\n    originX = 0.5;\n  }\n\n  if (originY === undefined) {\n    originY = originX;\n  }\n\n  var minMaxTileXY = GetMinMaxTileXY.call(this, undefined, true);\n  var offsetX = -Math.floor(Linear(minMaxTileXY.minX, minMaxTileXY.maxX, originX));\n  var offsetY = -Math.floor(Linear(minMaxTileXY.minY, minMaxTileXY.maxY, originY));\n\n  if (offsetX !== 0 || offsetY !== 0) {\n    var newTileXYZMap = OffsetTransfer.call(this, offsetX, offsetY);\n    ResetChessTileXYZ.call(this, newTileXYZMap);\n    var worldOffsetXY = this.board.tileXYToWorldXY(offsetX, offsetY);\n    var world0 = this.board.tileXYToWorldXY(0, 0);\n    this.setPosition(this.x + (world0.x - worldOffsetXY.x), this.y + (world0.y - worldOffsetXY.y));\n  }\n\n  return this;\n};\n\nexport default SetOrigin;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/miniboard/transform/SetOrigin.js"],"names":["GetMinMaxTileXY","Linear","OffsetTransfer","ResetChessTileXYZ","SetOrigin","originX","originY","undefined","minMaxTileXY","call","offsetX","Math","floor","minX","maxX","offsetY","minY","maxY","newTileXYZMap","worldOffsetXY","board","tileXYToWorldXY","world0","setPosition","x","y"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,6BAA5B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;;AAEA,IAAIC,SAAS,GAAG,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACxC,UAAQD,OAAR;AACI,SAAK,QAAL;AACIA,MAAAA,OAAO,GAAG,GAAV;AACAC,MAAAA,OAAO,GAAG,GAAV;AACA;;AACJ,SAAK,UAAL;AACA,SAAK,UAAL;AACID,MAAAA,OAAO,GAAG,CAAV;AACAC,MAAAA,OAAO,GAAG,CAAV;AACA;AATR;;AAWA,MAAID,OAAO,KAAKE,SAAhB,EAA2B;AACvBF,IAAAA,OAAO,GAAG,GAAV;AACH;;AACD,MAAIC,OAAO,KAAKC,SAAhB,EAA2B;AACvBD,IAAAA,OAAO,GAAGD,OAAV;AACH;;AACD,MAAIG,YAAY,GAAGR,eAAe,CAACS,IAAhB,CAAqB,IAArB,EAA2BF,SAA3B,EAAsC,IAAtC,CAAnB;AACA,MAAIG,OAAO,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWX,MAAM,CAACO,YAAY,CAACK,IAAd,EAAoBL,YAAY,CAACM,IAAjC,EAAuCT,OAAvC,CAAjB,CAAf;AACA,MAAIU,OAAO,GAAG,CAACJ,IAAI,CAACC,KAAL,CAAWX,MAAM,CAACO,YAAY,CAACQ,IAAd,EAAoBR,YAAY,CAACS,IAAjC,EAAuCX,OAAvC,CAAjB,CAAf;;AAEA,MAAKI,OAAO,KAAK,CAAb,IAAoBK,OAAO,KAAK,CAApC,EAAwC;AACpC,QAAIG,aAAa,GAAGhB,cAAc,CAACO,IAAf,CAAoB,IAApB,EAA0BC,OAA1B,EAAmCK,OAAnC,CAApB;AACAZ,IAAAA,iBAAiB,CAACM,IAAlB,CAAuB,IAAvB,EAA6BS,aAA7B;AACA,QAAIC,aAAa,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BX,OAA3B,EAAoCK,OAApC,CAApB;AACA,QAAIO,MAAM,GAAG,KAAKF,KAAL,CAAWC,eAAX,CAA2B,CAA3B,EAA8B,CAA9B,CAAb;AACA,SAAKE,WAAL,CACK,KAAKC,CAAL,IAAUF,MAAM,CAACE,CAAP,GAAWL,aAAa,CAACK,CAAnC,CADL,EAEK,KAAKC,CAAL,IAAUH,MAAM,CAACG,CAAP,GAAWN,aAAa,CAACM,CAAnC,CAFL;AAIH;;AACD,SAAO,IAAP;AACH,CAjCD;;AAmCA,eAAerB,SAAf","sourcesContent":["import GetMinMaxTileXY from '../utils/GetMinMaxTileXY.js';\r\nimport Linear from '../../../utils/math/Linear.js';\r\nimport OffsetTransfer from './transferfunctions/Offset.js';\r\nimport ResetChessTileXYZ from './ResetChessTileXYZ.js';\r\n\r\nvar SetOrigin = function (originX, originY) {\r\n    switch (originX) {\r\n        case 'center':\r\n            originX = 0.5;\r\n            originY = 0.5;\r\n            break;\r\n        case 'top-left':\r\n        case 'left-top':\r\n            originX = 0;\r\n            originY = 0;\r\n            break;\r\n    }\r\n    if (originX === undefined) {\r\n        originX = 0.5;\r\n    }\r\n    if (originY === undefined) {\r\n        originY = originX;\r\n    }\r\n    var minMaxTileXY = GetMinMaxTileXY.call(this, undefined, true);\r\n    var offsetX = -Math.floor(Linear(minMaxTileXY.minX, minMaxTileXY.maxX, originX));\r\n    var offsetY = -Math.floor(Linear(minMaxTileXY.minY, minMaxTileXY.maxY, originY));\r\n\r\n    if ((offsetX !== 0) || (offsetY !== 0)) {\r\n        var newTileXYZMap = OffsetTransfer.call(this, offsetX, offsetY);\r\n        ResetChessTileXYZ.call(this, newTileXYZMap);\r\n        var worldOffsetXY = this.board.tileXYToWorldXY(offsetX, offsetY);\r\n        var world0 = this.board.tileXYToWorldXY(0, 0);\r\n        this.setPosition(\r\n            (this.x + (world0.x - worldOffsetXY.x)),\r\n            (this.y + (world0.y - worldOffsetXY.y))\r\n        );\r\n    }\r\n    return this;\r\n}\r\n\r\nexport default SetOrigin;"]},"metadata":{},"sourceType":"module"}