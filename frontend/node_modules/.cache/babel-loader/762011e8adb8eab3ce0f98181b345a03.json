{"ast":null,"code":"import Clamp from '../../../utils/math/Clamp.js';\n\nvar ShapeToTileXYArray = function (shape, containsCallback, out) {\n  if (out === undefined) {\n    out = [];\n  }\n\n  globLeftToptileXY = this.worldXYToTileXY(shape.left, shape.top, globLeftToptileXY);\n  globRightBottomTileXY = this.worldXYToTileXY(shape.right, shape.bottom, globRightBottomTileXY);\n  var left = globLeftToptileXY.x - 1,\n      top = globLeftToptileXY.y - 1,\n      right = globRightBottomTileXY.x + 1,\n      bottom = globRightBottomTileXY.y + 1;\n\n  if (!this.infinityMode) {\n    left = Clamp(left, 0, this.width - 1);\n    top = Clamp(top, 0, this.height - 1);\n    right = Clamp(right, 0, this.width - 1);\n    bottom = Clamp(bottom, 0, this.height - 1);\n  }\n\n  var targetWorldXY;\n\n  for (var x = left; x <= right; x++) {\n    for (var y = top; y <= bottom; y++) {\n      targetWorldXY = this.tileXYToWorldXY(x, y, true);\n\n      if (containsCallback(shape, targetWorldXY.x, targetWorldXY.y)) {\n        out.push({\n          x: x,\n          y: y\n        });\n      }\n    }\n  }\n\n  return out;\n};\n\nvar globLeftToptileXY, globRightBottomTileXY;\nexport default ShapeToTileXYArray;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/board/shape/ShapeToTileXYArray.js"],"names":["Clamp","ShapeToTileXYArray","shape","containsCallback","out","undefined","globLeftToptileXY","worldXYToTileXY","left","top","globRightBottomTileXY","right","bottom","x","y","infinityMode","width","height","targetWorldXY","tileXYToWorldXY","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,8BAAlB;;AAEA,IAAIC,kBAAkB,GAAG,UAAUC,KAAV,EAAiBC,gBAAjB,EAAmCC,GAAnC,EAAwC;AAC7D,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AACnBD,IAAAA,GAAG,GAAG,EAAN;AACH;;AAEDE,EAAAA,iBAAiB,GAAG,KAAKC,eAAL,CAAqBL,KAAK,CAACM,IAA3B,EAAiCN,KAAK,CAACO,GAAvC,EAA4CH,iBAA5C,CAApB;AACAI,EAAAA,qBAAqB,GAAG,KAAKH,eAAL,CAAqBL,KAAK,CAACS,KAA3B,EAAkCT,KAAK,CAACU,MAAxC,EAAgDF,qBAAhD,CAAxB;AACA,MAAIF,IAAI,GAAGF,iBAAiB,CAACO,CAAlB,GAAsB,CAAjC;AAAA,MACIJ,GAAG,GAAGH,iBAAiB,CAACQ,CAAlB,GAAsB,CADhC;AAAA,MAEIH,KAAK,GAAGD,qBAAqB,CAACG,CAAtB,GAA0B,CAFtC;AAAA,MAGID,MAAM,GAAGF,qBAAqB,CAACI,CAAtB,GAA0B,CAHvC;;AAIA,MAAI,CAAC,KAAKC,YAAV,EAAwB;AACpBP,IAAAA,IAAI,GAAGR,KAAK,CAACQ,IAAD,EAAO,CAAP,EAAU,KAAKQ,KAAL,GAAa,CAAvB,CAAZ;AACAP,IAAAA,GAAG,GAAGT,KAAK,CAACS,GAAD,EAAM,CAAN,EAAS,KAAKQ,MAAL,GAAc,CAAvB,CAAX;AACAN,IAAAA,KAAK,GAAGX,KAAK,CAACW,KAAD,EAAQ,CAAR,EAAW,KAAKK,KAAL,GAAa,CAAxB,CAAb;AACAJ,IAAAA,MAAM,GAAGZ,KAAK,CAACY,MAAD,EAAS,CAAT,EAAY,KAAKK,MAAL,GAAc,CAA1B,CAAd;AACH;;AAED,MAAIC,aAAJ;;AACA,OAAK,IAAIL,CAAC,GAAGL,IAAb,EAAmBK,CAAC,IAAIF,KAAxB,EAA+BE,CAAC,EAAhC,EAAoC;AAChC,SAAK,IAAIC,CAAC,GAAGL,GAAb,EAAkBK,CAAC,IAAIF,MAAvB,EAA+BE,CAAC,EAAhC,EAAoC;AAChCI,MAAAA,aAAa,GAAG,KAAKC,eAAL,CAAqBN,CAArB,EAAwBC,CAAxB,EAA2B,IAA3B,CAAhB;;AACA,UAAIX,gBAAgB,CAACD,KAAD,EAAQgB,aAAa,CAACL,CAAtB,EAAyBK,aAAa,CAACJ,CAAvC,CAApB,EAA+D;AAC3DV,QAAAA,GAAG,CAACgB,IAAJ,CAAS;AAAEP,UAAAA,CAAC,EAAEA,CAAL;AAAQC,UAAAA,CAAC,EAAEA;AAAX,SAAT;AACH;AACJ;AACJ;;AAED,SAAOV,GAAP;AACH,CA7BD;;AA+BA,IAAIE,iBAAJ,EAAuBI,qBAAvB;AAEA,eAAeT,kBAAf","sourcesContent":["import Clamp from '../../../utils/math/Clamp.js';\r\n\r\nvar ShapeToTileXYArray = function (shape, containsCallback, out) {\r\n    if (out === undefined) {\r\n        out = [];\r\n    }\r\n\r\n    globLeftToptileXY = this.worldXYToTileXY(shape.left, shape.top, globLeftToptileXY);\r\n    globRightBottomTileXY = this.worldXYToTileXY(shape.right, shape.bottom, globRightBottomTileXY);\r\n    var left = globLeftToptileXY.x - 1,\r\n        top = globLeftToptileXY.y - 1,\r\n        right = globRightBottomTileXY.x + 1,\r\n        bottom = globRightBottomTileXY.y + 1;\r\n    if (!this.infinityMode) {\r\n        left = Clamp(left, 0, this.width - 1);\r\n        top = Clamp(top, 0, this.height - 1);\r\n        right = Clamp(right, 0, this.width - 1);\r\n        bottom = Clamp(bottom, 0, this.height - 1);\r\n    }\r\n\r\n    var targetWorldXY;\r\n    for (var x = left; x <= right; x++) {\r\n        for (var y = top; y <= bottom; y++) {\r\n            targetWorldXY = this.tileXYToWorldXY(x, y, true);\r\n            if (containsCallback(shape, targetWorldXY.x, targetWorldXY.y)) {\r\n                out.push({ x: x, y: y });\r\n            }\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar globLeftToptileXY, globRightBottomTileXY;\r\n\r\nexport default ShapeToTileXYArray;"]},"metadata":{},"sourceType":"module"}