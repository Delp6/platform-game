{"ast":null,"code":"import { cr2cube } from './CubeTransfer.js';\n\nvar DirectionBetween = function (tileA, tileB, round) {\n  if (round === undefined) {\n    round = true;\n  }\n\n  var direction;\n  cr2cube(this.mode, tileA.x, tileA.y, globCubeA);\n  cr2cube(this.mode, tileB.x, tileB.y, globCubeB);\n  var dx = globCubeB.x - globCubeA.x;\n  var dy = globCubeB.y - globCubeA.y;\n  var dz = globCubeB.z - globCubeA.z;\n\n  if (dz === 0) {\n    direction = dx > 0 ? 0 : 3;\n  } else if (dx === 0) {\n    direction = dz > 0 ? 1 : 4;\n  } else if (dy === 0) {\n    direction = dz > 0 ? 2 : 5;\n  } else if (dx > 0 && dy < 0 && dz > 0) {\n    // 0~1\n    direction = 0 + dz / -dy;\n  } else if (dx < 0 && dy < 0 && dz > 0) {\n    // 1~2\n    direction = 1 + -dy / dz;\n  } else if (dx < 0 && dy > 0 && dz > 0) {\n    // 2~3\n    direction = 2 + dy / -dx;\n  } else if (dx < 0 && dy > 0 && dz < 0) {\n    // 3~4\n    direction = 3 + -dz / dy;\n  } else if (dx > 0 && dy > 0 && dz < 0) {\n    // 4~5\n    direction = 4 + dx / -dz;\n  } else {\n    // ((dx > 0) && (dy < 0) && (dz < 0)) // 5~0\n    direction = 5 + -dy / dx;\n  }\n\n  if (round) {\n    direction = Math.round(direction);\n  }\n\n  return direction;\n};\n\nvar globCubeA = {};\nvar globCubeB = {};\nexport default DirectionBetween;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/utils/grid/hexagon/DirectionBetween.js"],"names":["cr2cube","DirectionBetween","tileA","tileB","round","undefined","direction","mode","x","y","globCubeA","globCubeB","dx","dy","dz","z","Math"],"mappings":"AAAA,SACIA,OADJ,QAEO,mBAFP;;AAIA,IAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAClD,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AACrBD,IAAAA,KAAK,GAAG,IAAR;AACH;;AAED,MAAIE,SAAJ;AACAN,EAAAA,OAAO,CAAC,KAAKO,IAAN,EAAYL,KAAK,CAACM,CAAlB,EAAqBN,KAAK,CAACO,CAA3B,EAA8BC,SAA9B,CAAP;AACAV,EAAAA,OAAO,CAAC,KAAKO,IAAN,EAAYJ,KAAK,CAACK,CAAlB,EAAqBL,KAAK,CAACM,CAA3B,EAA8BE,SAA9B,CAAP;AACA,MAAIC,EAAE,GAAGD,SAAS,CAACH,CAAV,GAAcE,SAAS,CAACF,CAAjC;AACA,MAAIK,EAAE,GAAGF,SAAS,CAACF,CAAV,GAAcC,SAAS,CAACD,CAAjC;AACA,MAAIK,EAAE,GAAGH,SAAS,CAACI,CAAV,GAAcL,SAAS,CAACK,CAAjC;;AACA,MAAID,EAAE,KAAK,CAAX,EAAc;AACVR,IAAAA,SAAS,GAAIM,EAAE,GAAG,CAAN,GAAW,CAAX,GAAe,CAA3B;AACH,GAFD,MAEO,IAAIA,EAAE,KAAK,CAAX,EAAc;AACjBN,IAAAA,SAAS,GAAIQ,EAAE,GAAG,CAAN,GAAW,CAAX,GAAe,CAA3B;AACH,GAFM,MAEA,IAAID,EAAE,KAAK,CAAX,EAAc;AACjBP,IAAAA,SAAS,GAAIQ,EAAE,GAAG,CAAN,GAAW,CAAX,GAAe,CAA3B;AACH,GAFM,MAEA,IAAKF,EAAE,GAAG,CAAN,IAAaC,EAAE,GAAG,CAAlB,IAAyBC,EAAE,GAAG,CAAlC,EAAsC;AAAE;AAC3CR,IAAAA,SAAS,GAAG,IAAKQ,EAAE,GAAI,CAACD,EAAxB;AACH,GAFM,MAEA,IAAKD,EAAE,GAAG,CAAN,IAAaC,EAAE,GAAG,CAAlB,IAAyBC,EAAE,GAAG,CAAlC,EAAsC;AAAE;AAC3CR,IAAAA,SAAS,GAAG,IAAM,CAACO,EAAF,GAAQC,EAAzB;AACH,GAFM,MAEA,IAAKF,EAAE,GAAG,CAAN,IAAaC,EAAE,GAAG,CAAlB,IAAyBC,EAAE,GAAG,CAAlC,EAAsC;AAAE;AAC3CR,IAAAA,SAAS,GAAG,IAAKO,EAAE,GAAI,CAACD,EAAxB;AACH,GAFM,MAEA,IAAKA,EAAE,GAAG,CAAN,IAAaC,EAAE,GAAG,CAAlB,IAAyBC,EAAE,GAAG,CAAlC,EAAsC;AAAE;AAC3CR,IAAAA,SAAS,GAAG,IAAM,CAACQ,EAAF,GAAQD,EAAzB;AACH,GAFM,MAEA,IAAKD,EAAE,GAAG,CAAN,IAAaC,EAAE,GAAG,CAAlB,IAAyBC,EAAE,GAAG,CAAlC,EAAsC;AAAE;AAC3CR,IAAAA,SAAS,GAAG,IAAKM,EAAE,GAAI,CAACE,EAAxB;AACH,GAFM,MAEA;AAAE;AACLR,IAAAA,SAAS,GAAG,IAAM,CAACO,EAAF,GAAQD,EAAzB;AACH;;AAED,MAAIR,KAAJ,EAAW;AACPE,IAAAA,SAAS,GAAGU,IAAI,CAACZ,KAAL,CAAWE,SAAX,CAAZ;AACH;;AACD,SAAOA,SAAP;AACH,CAnCD;;AAqCA,IAAII,SAAS,GAAG,EAAhB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,eAAeV,gBAAf","sourcesContent":["import {\r\n    cr2cube\r\n} from './CubeTransfer.js';\r\n\r\nvar DirectionBetween = function (tileA, tileB, round) {\r\n    if (round === undefined) {\r\n        round = true;\r\n    }\r\n\r\n    var direction;\r\n    cr2cube(this.mode, tileA.x, tileA.y, globCubeA);\r\n    cr2cube(this.mode, tileB.x, tileB.y, globCubeB);\r\n    var dx = globCubeB.x - globCubeA.x;\r\n    var dy = globCubeB.y - globCubeA.y;\r\n    var dz = globCubeB.z - globCubeA.z;\r\n    if (dz === 0) {\r\n        direction = (dx > 0) ? 0 : 3;\r\n    } else if (dx === 0) {\r\n        direction = (dz > 0) ? 1 : 4;\r\n    } else if (dy === 0) {\r\n        direction = (dz > 0) ? 2 : 5;\r\n    } else if ((dx > 0) && (dy < 0) && (dz > 0)) { // 0~1\r\n        direction = 0 + (dz / (-dy));\r\n    } else if ((dx < 0) && (dy < 0) && (dz > 0)) { // 1~2\r\n        direction = 1 + ((-dy) / dz);\r\n    } else if ((dx < 0) && (dy > 0) && (dz > 0)) { // 2~3\r\n        direction = 2 + (dy / (-dx));\r\n    } else if ((dx < 0) && (dy > 0) && (dz < 0)) { // 3~4\r\n        direction = 3 + ((-dz) / dy);\r\n    } else if ((dx > 0) && (dy > 0) && (dz < 0)) { // 4~5\r\n        direction = 4 + (dx / (-dz));\r\n    } else { // ((dx > 0) && (dy < 0) && (dz < 0)) // 5~0\r\n        direction = 5 + ((-dy) / dx);\r\n    }\r\n\r\n    if (round) {\r\n        direction = Math.round(direction);\r\n    }\r\n    return direction;\r\n}\r\n\r\nvar globCubeA = {};\r\nvar globCubeB = {};\r\nexport default DirectionBetween;"]},"metadata":{},"sourceType":"module"}