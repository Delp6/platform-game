{"ast":null,"code":"import CONST from './const.js';\nconst PATH_MODE = CONST.PATH_MODE;\nconst INFINITY = CONST.INFINITY; // undefined\n\nvar FindPath = function (endTileXY, movingPoints, isClosest, out) {\n  if (isClosest === undefined) {\n    isClosest = true;\n  }\n\n  if (out === undefined) {\n    out = [];\n  }\n\n  if (this.board === null) {\n    // chess is not in board\n    return out;\n  }\n\n  if (movingPoints !== INFINITY && movingPoints <= 0) {\n    return out;\n  }\n\n  var startTileXYZ = this.chessData.tileXYZ;\n  this.aStarSearch(startTileXYZ, endTileXY, movingPoints, PATH_MODE);\n  var nodeManager = this.nodeManager;\n  var endNode = isClosest ? nodeManager.closestNode : nodeManager.getNode(endTileXY);\n\n  if (endNode === null) {\n    return out;\n  }\n\n  return this.getPath(endNode, out);\n};\n\nexport default FindPath;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/pathfinder/FindPath.js"],"names":["CONST","PATH_MODE","INFINITY","FindPath","endTileXY","movingPoints","isClosest","out","undefined","board","startTileXYZ","chessData","tileXYZ","aStarSearch","nodeManager","endNode","closestNode","getNode","getPath"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAvB,C,CAAkC;;AAElC,IAAIC,QAAQ,GAAG,UAAUC,SAAV,EAAqBC,YAArB,EAAmCC,SAAnC,EAA8CC,GAA9C,EAAmD;AAC9D,MAAID,SAAS,KAAKE,SAAlB,EAA6B;AACzBF,IAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,MAAIC,GAAG,KAAKC,SAAZ,EAAuB;AACnBD,IAAAA,GAAG,GAAG,EAAN;AACH;;AACD,MAAI,KAAKE,KAAL,KAAe,IAAnB,EAAyB;AAAE;AACvB,WAAOF,GAAP;AACH;;AACD,MAAKF,YAAY,KAAKH,QAAlB,IAAgCG,YAAY,IAAI,CAApD,EAAwD;AACpD,WAAOE,GAAP;AACH;;AAED,MAAIG,YAAY,GAAG,KAAKC,SAAL,CAAeC,OAAlC;AACA,OAAKC,WAAL,CAAiBH,YAAjB,EAA+BN,SAA/B,EAA0CC,YAA1C,EAAwDJ,SAAxD;AACA,MAAIa,WAAW,GAAG,KAAKA,WAAvB;AACA,MAAIC,OAAO,GAAIT,SAAD,GAAcQ,WAAW,CAACE,WAA1B,GAAwCF,WAAW,CAACG,OAAZ,CAAoBb,SAApB,CAAtD;;AACA,MAAIW,OAAO,KAAK,IAAhB,EAAsB;AAClB,WAAOR,GAAP;AACH;;AACD,SAAO,KAAKW,OAAL,CAAaH,OAAb,EAAsBR,GAAtB,CAAP;AACH,CAtBD;;AAuBA,eAAeJ,QAAf","sourcesContent":["import CONST from './const.js';\r\n\r\nconst PATH_MODE = CONST.PATH_MODE;\r\nconst INFINITY = CONST.INFINITY;  // undefined\r\n\r\nvar FindPath = function (endTileXY, movingPoints, isClosest, out) {\r\n    if (isClosest === undefined) {\r\n        isClosest = true;\r\n    }\r\n    if (out === undefined) {\r\n        out = [];\r\n    }\r\n    if (this.board === null) { // chess is not in board\r\n        return out;\r\n    }\r\n    if ((movingPoints !== INFINITY) && (movingPoints <= 0)) {\r\n        return out;\r\n    }\r\n\r\n    var startTileXYZ = this.chessData.tileXYZ;\r\n    this.aStarSearch(startTileXYZ, endTileXY, movingPoints, PATH_MODE);\r\n    var nodeManager = this.nodeManager;\r\n    var endNode = (isClosest) ? nodeManager.closestNode : nodeManager.getNode(endTileXY);\r\n    if (endNode === null) {\r\n        return out;\r\n    }\r\n    return this.getPath(endNode, out);\r\n}\r\nexport default FindPath;"]},"metadata":{},"sourceType":"module"}