{"ast":null,"code":"var CanPutOnMainBoard = function (mainBoard, tileX, tileY, chessTileXYMap) {\n  if (!mainBoard) {\n    return false;\n  }\n\n  if (chessTileXYMap === undefined) {\n    chessTileXYMap = this.tileXYZMap; // {uid:{x,y,z}}\n  }\n\n  var chessTileXYZ, mappedTileXY, isOccupied;\n\n  for (var uid in chessTileXYMap) {\n    chessTileXYZ = chessTileXYMap[uid];\n    mappedTileXY = mainBoard.offset(chessTileXYZ, tileX, tileY, true);\n\n    if (!mainBoard.contains(mappedTileXY.x, mappedTileXY.y)) {\n      return false;\n    }\n\n    if (this.putTestCallback) {\n      // Custom test function\n      if (this.putTestCallbackScpe) {\n        isOccupied = this.putTestCallback.call(this.putTestCallbackScpe, mappedTileXY.x, mappedTileXY.y, chessTileXYZ.z, mainBoard);\n      } else {\n        isOccupied = this.putTestCallback(mappedTileXY.x, mappedTileXY.y, chessTileXYZ.z, mainBoard);\n      }\n    } else {\n      // Default test function\n      isOccupied = mainBoard.contains(mappedTileXY.x, mappedTileXY.y, chessTileXYZ.z);\n    }\n\n    if (isOccupied) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport default CanPutOnMainBoard;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/miniboard/mainboard/CanPutOnMainBoard.js"],"names":["CanPutOnMainBoard","mainBoard","tileX","tileY","chessTileXYMap","undefined","tileXYZMap","chessTileXYZ","mappedTileXY","isOccupied","uid","offset","contains","x","y","putTestCallback","putTestCallbackScpe","call","z"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG,UAAUC,SAAV,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,cAAnC,EAAmD;AACvE,MAAI,CAACH,SAAL,EAAgB;AACZ,WAAO,KAAP;AACH;;AACD,MAAIG,cAAc,KAAKC,SAAvB,EAAkC;AAC9BD,IAAAA,cAAc,GAAG,KAAKE,UAAtB,CAD8B,CACI;AACrC;;AAED,MAAIC,YAAJ,EAAkBC,YAAlB,EAAgCC,UAAhC;;AACA,OAAK,IAAIC,GAAT,IAAgBN,cAAhB,EAAgC;AAC5BG,IAAAA,YAAY,GAAGH,cAAc,CAACM,GAAD,CAA7B;AACAF,IAAAA,YAAY,GAAGP,SAAS,CAACU,MAAV,CAAiBJ,YAAjB,EAA+BL,KAA/B,EAAsCC,KAAtC,EAA6C,IAA7C,CAAf;;AACA,QAAI,CAACF,SAAS,CAACW,QAAV,CAAmBJ,YAAY,CAACK,CAAhC,EAAmCL,YAAY,CAACM,CAAhD,CAAL,EAAyD;AACrD,aAAO,KAAP;AACH;;AAED,QAAI,KAAKC,eAAT,EAA0B;AACtB;AACA,UAAI,KAAKC,mBAAT,EAA8B;AAC1BP,QAAAA,UAAU,GAAG,KAAKM,eAAL,CAAqBE,IAArB,CAA0B,KAAKD,mBAA/B,EAAoDR,YAAY,CAACK,CAAjE,EAAoEL,YAAY,CAACM,CAAjF,EAAoFP,YAAY,CAACW,CAAjG,EAAoGjB,SAApG,CAAb;AACH,OAFD,MAEO;AACHQ,QAAAA,UAAU,GAAG,KAAKM,eAAL,CAAqBP,YAAY,CAACK,CAAlC,EAAqCL,YAAY,CAACM,CAAlD,EAAqDP,YAAY,CAACW,CAAlE,EAAqEjB,SAArE,CAAb;AACH;AACJ,KAPD,MAOO;AACH;AACAQ,MAAAA,UAAU,GAAGR,SAAS,CAACW,QAAV,CAAmBJ,YAAY,CAACK,CAAhC,EAAmCL,YAAY,CAACM,CAAhD,EAAmDP,YAAY,CAACW,CAAhE,CAAb;AACH;;AACD,QAAIT,UAAJ,EAAgB;AACZ,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CAhCD;;AAkCA,eAAeT,iBAAf","sourcesContent":["var CanPutOnMainBoard = function (mainBoard, tileX, tileY, chessTileXYMap) {\r\n    if (!mainBoard) {\r\n        return false;\r\n    }\r\n    if (chessTileXYMap === undefined) {\r\n        chessTileXYMap = this.tileXYZMap; // {uid:{x,y,z}}\r\n    }\r\n\r\n    var chessTileXYZ, mappedTileXY, isOccupied;\r\n    for (var uid in chessTileXYMap) {\r\n        chessTileXYZ = chessTileXYMap[uid];\r\n        mappedTileXY = mainBoard.offset(chessTileXYZ, tileX, tileY, true);\r\n        if (!mainBoard.contains(mappedTileXY.x, mappedTileXY.y)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.putTestCallback) {\r\n            // Custom test function\r\n            if (this.putTestCallbackScpe) {\r\n                isOccupied = this.putTestCallback.call(this.putTestCallbackScpe, mappedTileXY.x, mappedTileXY.y, chessTileXYZ.z, mainBoard);\r\n            } else {\r\n                isOccupied = this.putTestCallback(mappedTileXY.x, mappedTileXY.y, chessTileXYZ.z, mainBoard);\r\n            }\r\n        } else {\r\n            // Default test function\r\n            isOccupied = mainBoard.contains(mappedTileXY.x, mappedTileXY.y, chessTileXYZ.z);\r\n        }\r\n        if (isOccupied) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default CanPutOnMainBoard;"]},"metadata":{},"sourceType":"module"}