{"ast":null,"code":"import { CreateTileData } from './TileData.js';\nimport AreTileXYEqual from '../utils/AreTileXYEqual.js';\nimport GetRandom from '../../utils/array/GetRandom.js';\n\nvar GetNextTile = function (curTileData, preTileData) {\n  var board = this.board;\n  var directions = board.grid.allDirections;\n  var forwardTileData = null,\n      backwardTileData = null;\n  var neighborTileXArray = []; // forward and other neighbors, exclude backward\n\n  var neighborTileXY,\n      neighborTileData = null;\n\n  for (var i = 0, cnt = directions.length; i < cnt; i++) {\n    neighborTileXY = board.getNeighborTileXY(curTileData, directions[i], true);\n\n    if (neighborTileXY === null) {\n      continue;\n    }\n\n    if (!board.contains(neighborTileXY.x, neighborTileXY.y, this.pathTileZ)) {\n      continue;\n    }\n\n    neighborTileData = CreateTileData(neighborTileXY.x, neighborTileXY.y, directions[i]);\n\n    if (directions[i] === curTileData.direction) {\n      forwardTileData = neighborTileData;\n    }\n\n    if (preTileData !== undefined && AreTileXYEqual(neighborTileXY, preTileData)) {\n      backwardTileData = neighborTileData;\n    } else {\n      neighborTileXArray.push(neighborTileData);\n    }\n  }\n\n  var nextTileData;\n\n  if (backwardTileData === null && neighborTileXArray.length === 0) {\n    // no valid neighbor\n    nextTileData = null;\n  } else if (backwardTileData === null && neighborTileXArray.length === 1) {\n    // 1 neighbor\n    nextTileData = neighborTileXArray[0];\n  } else if (backwardTileData !== null && neighborTileXArray.length === 0) {\n    // 1 backward neighbor\n    nextTileData = backwardTileData;\n  } else {\n    // 2 or more neighobrs\n    switch (this.pickMode) {\n      case 1:\n        // random all\n        if (backwardTileData !== null) {\n          neighborTileXArray.push(backwardTileData);\n        }\n\n        nextTileData = GetRandom(neighborTileXArray);\n        break;\n\n      default:\n        // case 0: forward first\n        if (forwardTileData !== null) {\n          nextTileData = forwardTileData;\n        } else {\n          nextTileData = GetRandom(neighborTileXArray);\n        }\n\n        break;\n    }\n  }\n\n  return nextTileData;\n};\n\nexport default GetNextTile;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/monopoly/GetNextTile.js"],"names":["CreateTileData","AreTileXYEqual","GetRandom","GetNextTile","curTileData","preTileData","board","directions","grid","allDirections","forwardTileData","backwardTileData","neighborTileXArray","neighborTileXY","neighborTileData","i","cnt","length","getNeighborTileXY","contains","x","y","pathTileZ","direction","undefined","push","nextTileData","pickMode"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;;AAEA,IAAIC,WAAW,GAAG,UAAUC,WAAV,EAAuBC,WAAvB,EAAoC;AAClD,MAAIC,KAAK,GAAG,KAAKA,KAAjB;AACA,MAAIC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWC,aAA5B;AACA,MAAIC,eAAe,GAAG,IAAtB;AAAA,MACIC,gBAAgB,GAAG,IADvB;AAEA,MAAIC,kBAAkB,GAAG,EAAzB,CALkD,CAKrB;;AAC7B,MAAIC,cAAJ;AAAA,MAAoBC,gBAAgB,GAAG,IAAvC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGT,UAAU,CAACU,MAAjC,EAAyCF,CAAC,GAAGC,GAA7C,EAAkDD,CAAC,EAAnD,EAAuD;AACnDF,IAAAA,cAAc,GAAGP,KAAK,CAACY,iBAAN,CAAwBd,WAAxB,EAAqCG,UAAU,CAACQ,CAAD,CAA/C,EAAoD,IAApD,CAAjB;;AACA,QAAIF,cAAc,KAAK,IAAvB,EAA6B;AACzB;AACH;;AACD,QAAI,CAACP,KAAK,CAACa,QAAN,CAAeN,cAAc,CAACO,CAA9B,EAAiCP,cAAc,CAACQ,CAAhD,EAAmD,KAAKC,SAAxD,CAAL,EAAyE;AACrE;AACH;;AACDR,IAAAA,gBAAgB,GAAGd,cAAc,CAACa,cAAc,CAACO,CAAhB,EAAmBP,cAAc,CAACQ,CAAlC,EAAqCd,UAAU,CAACQ,CAAD,CAA/C,CAAjC;;AAEA,QAAIR,UAAU,CAACQ,CAAD,CAAV,KAAkBX,WAAW,CAACmB,SAAlC,EAA6C;AACzCb,MAAAA,eAAe,GAAGI,gBAAlB;AACH;;AACD,QAAKT,WAAW,KAAKmB,SAAjB,IAAgCvB,cAAc,CAACY,cAAD,EAAiBR,WAAjB,CAAlD,EAAkF;AAC9EM,MAAAA,gBAAgB,GAAGG,gBAAnB;AACH,KAFD,MAEO;AACHF,MAAAA,kBAAkB,CAACa,IAAnB,CAAwBX,gBAAxB;AACH;AACJ;;AAED,MAAIY,YAAJ;;AACA,MAAKf,gBAAgB,KAAK,IAAtB,IAAgCC,kBAAkB,CAACK,MAAnB,KAA8B,CAAlE,EAAsE;AAClE;AACAS,IAAAA,YAAY,GAAG,IAAf;AACH,GAHD,MAGO,IAAKf,gBAAgB,KAAK,IAAtB,IAAgCC,kBAAkB,CAACK,MAAnB,KAA8B,CAAlE,EAAsE;AACzE;AACAS,IAAAA,YAAY,GAAGd,kBAAkB,CAAC,CAAD,CAAjC;AACH,GAHM,MAGA,IAAKD,gBAAgB,KAAK,IAAtB,IAAgCC,kBAAkB,CAACK,MAAnB,KAA8B,CAAlE,EAAsE;AACzE;AACAS,IAAAA,YAAY,GAAGf,gBAAf;AACH,GAHM,MAGA;AACH;AACA,YAAQ,KAAKgB,QAAb;AACI,WAAK,CAAL;AAAQ;AACJ,YAAIhB,gBAAgB,KAAK,IAAzB,EAA+B;AAC3BC,UAAAA,kBAAkB,CAACa,IAAnB,CAAwBd,gBAAxB;AACH;;AACDe,QAAAA,YAAY,GAAGxB,SAAS,CAACU,kBAAD,CAAxB;AACA;;AAEJ;AAAS;AACL,YAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC1BgB,UAAAA,YAAY,GAAGhB,eAAf;AACH,SAFD,MAEO;AACHgB,UAAAA,YAAY,GAAGxB,SAAS,CAACU,kBAAD,CAAxB;AACH;;AACD;AAdR;AAgBH;;AAED,SAAOc,YAAP;AACH,CA1DD;;AA4DA,eAAevB,WAAf","sourcesContent":["import { CreateTileData } from './TileData.js';\r\nimport AreTileXYEqual from '../utils/AreTileXYEqual.js';\r\n\r\nimport GetRandom from '../../utils/array/GetRandom.js';\r\n\r\nvar GetNextTile = function (curTileData, preTileData) {\r\n    var board = this.board;\r\n    var directions = board.grid.allDirections;\r\n    var forwardTileData = null,\r\n        backwardTileData = null;\r\n    var neighborTileXArray = []; // forward and other neighbors, exclude backward\r\n    var neighborTileXY, neighborTileData = null;\r\n    for (var i = 0, cnt = directions.length; i < cnt; i++) {\r\n        neighborTileXY = board.getNeighborTileXY(curTileData, directions[i], true);\r\n        if (neighborTileXY === null) {\r\n            continue;\r\n        }\r\n        if (!board.contains(neighborTileXY.x, neighborTileXY.y, this.pathTileZ)) {\r\n            continue;\r\n        }\r\n        neighborTileData = CreateTileData(neighborTileXY.x, neighborTileXY.y, directions[i]);\r\n\r\n        if (directions[i] === curTileData.direction) {\r\n            forwardTileData = neighborTileData;\r\n        }\r\n        if ((preTileData !== undefined) && (AreTileXYEqual(neighborTileXY, preTileData))) {\r\n            backwardTileData = neighborTileData;\r\n        } else {\r\n            neighborTileXArray.push(neighborTileData);\r\n        }\r\n    }\r\n\r\n    var nextTileData;\r\n    if ((backwardTileData === null) && (neighborTileXArray.length === 0)) {\r\n        // no valid neighbor\r\n        nextTileData = null;\r\n    } else if ((backwardTileData === null) && (neighborTileXArray.length === 1)) {\r\n        // 1 neighbor\r\n        nextTileData = neighborTileXArray[0];\r\n    } else if ((backwardTileData !== null) && (neighborTileXArray.length === 0)) {\r\n        // 1 backward neighbor\r\n        nextTileData = backwardTileData;\r\n    } else {\r\n        // 2 or more neighobrs\r\n        switch (this.pickMode) {\r\n            case 1: // random all\r\n                if (backwardTileData !== null) {\r\n                    neighborTileXArray.push(backwardTileData);\r\n                }\r\n                nextTileData = GetRandom(neighborTileXArray);\r\n                break;\r\n\r\n            default: // case 0: forward first\r\n                if (forwardTileData !== null) {\r\n                    nextTileData = forwardTileData;\r\n                } else {\r\n                    nextTileData = GetRandom(neighborTileXArray);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    return nextTileData;\r\n}\r\n\r\nexport default GetNextTile;"]},"metadata":{},"sourceType":"module"}