{"ast":null,"code":"import Clear from '../../utils/object/Clear.js';\nimport IsPlainObject from '../../utils/object/IsPlainObject.js';\nimport IsArray from '../../utils/object/IsArray.js';\n\nvar Group = function (startTileX, startTileY, out) {\n  if (out === undefined) {\n    out = [];\n  }\n\n  var board = this.board;\n  var wildcard = this.wildcard;\n  var targetSymbol = this.getSymbol(startTileX, startTileY);\n\n  if (targetSymbol == null || targetSymbol === wildcard) {\n    return out;\n  }\n\n  if (globalQueue === undefined) {\n    globalQueue = new Queue();\n  }\n\n  var curTileXY, symbol;\n  globalQueue.push(startTileX, startTileY);\n\n  while (globalQueue.length) {\n    curTileXY = globalQueue.pop();\n    symbol = this.getSymbol(curTileXY.x, curTileXY.y);\n\n    if (symbol === targetSymbol || symbol === wildcard) {\n      out.push(curTileXY);\n      globalQueue.push(board.getNeighborTileXY(curTileXY));\n    }\n  }\n\n  globalQueue.clear();\n  return out;\n};\n\nclass Queue {\n  constructor() {\n    this.data = [];\n    this.visited = {};\n  }\n\n  push(x, y) {\n    if (IsArray(x)) {\n      var xyArray = x;\n\n      for (var i = 0, cnt = xyArray.length; i < cnt; i++) {\n        this.push(xyArray[i]);\n      }\n\n      return this;\n    }\n\n    if (IsPlainObject(x)) {\n      var xy = x;\n      x = xy.x;\n      y = xy.y;\n    }\n\n    var key = `${x},${y}`;\n\n    if (this.visited.hasOwnProperty(key)) {\n      return this;\n    }\n\n    this.data.push({\n      x: x,\n      y: y\n    });\n    this.visited[key] = true;\n    return this;\n  }\n\n  pop() {\n    return this.data.pop();\n  }\n\n  get length() {\n    return this.data.length;\n  }\n\n  clear() {\n    Clear(this.data);\n    Clear(this.visited);\n    return this;\n  }\n\n}\n\nvar globalQueue;\nexport default Group;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/match/Group.js"],"names":["Clear","IsPlainObject","IsArray","Group","startTileX","startTileY","out","undefined","board","wildcard","targetSymbol","getSymbol","globalQueue","Queue","curTileXY","symbol","push","length","pop","x","y","getNeighborTileXY","clear","constructor","data","visited","xyArray","i","cnt","xy","key","hasOwnProperty"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,6BAAlB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,IAAIC,KAAK,GAAG,UAAUC,UAAV,EAAsBC,UAAtB,EAAkCC,GAAlC,EAAuC;AAC/C,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AACnBD,IAAAA,GAAG,GAAG,EAAN;AACH;;AAED,MAAIE,KAAK,GAAG,KAAKA,KAAjB;AACA,MAAIC,QAAQ,GAAG,KAAKA,QAApB;AACA,MAAIC,YAAY,GAAG,KAAKC,SAAL,CAAeP,UAAf,EAA2BC,UAA3B,CAAnB;;AACA,MAAKK,YAAY,IAAI,IAAjB,IAA2BA,YAAY,KAAKD,QAAhD,EAA2D;AACvD,WAAOH,GAAP;AACH;;AAED,MAAIM,WAAW,KAAKL,SAApB,EAA+B;AAC3BK,IAAAA,WAAW,GAAG,IAAIC,KAAJ,EAAd;AACH;;AAED,MAAIC,SAAJ,EAAeC,MAAf;AACAH,EAAAA,WAAW,CAACI,IAAZ,CAAiBZ,UAAjB,EAA6BC,UAA7B;;AACA,SAAOO,WAAW,CAACK,MAAnB,EAA2B;AACvBH,IAAAA,SAAS,GAAGF,WAAW,CAACM,GAAZ,EAAZ;AACAH,IAAAA,MAAM,GAAG,KAAKJ,SAAL,CAAeG,SAAS,CAACK,CAAzB,EAA4BL,SAAS,CAACM,CAAtC,CAAT;;AACA,QAAKL,MAAM,KAAKL,YAAZ,IAA8BK,MAAM,KAAKN,QAA7C,EAAwD;AACpDH,MAAAA,GAAG,CAACU,IAAJ,CAASF,SAAT;AACAF,MAAAA,WAAW,CAACI,IAAZ,CAAiBR,KAAK,CAACa,iBAAN,CAAwBP,SAAxB,CAAjB;AACH;AACJ;;AAEDF,EAAAA,WAAW,CAACU,KAAZ;AACA,SAAOhB,GAAP;AACH,CA7BD;;AA+BA,MAAMO,KAAN,CAAY;AACRU,EAAAA,WAAW,GAAG;AACV,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,OAAL,GAAe,EAAf;AACH;;AAEDT,EAAAA,IAAI,CAACG,CAAD,EAAIC,CAAJ,EAAO;AACP,QAAIlB,OAAO,CAACiB,CAAD,CAAX,EAAgB;AACZ,UAAIO,OAAO,GAAGP,CAAd;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGF,OAAO,CAACT,MAA9B,EAAsCU,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,aAAKX,IAAL,CAAUU,OAAO,CAACC,CAAD,CAAjB;AACH;;AACD,aAAO,IAAP;AACH;;AAED,QAAI1B,aAAa,CAACkB,CAAD,CAAjB,EAAsB;AAClB,UAAIU,EAAE,GAAGV,CAAT;AACAA,MAAAA,CAAC,GAAGU,EAAE,CAACV,CAAP;AACAC,MAAAA,CAAC,GAAGS,EAAE,CAACT,CAAP;AACH;;AACD,QAAIU,GAAG,GAAI,GAAEX,CAAE,IAAGC,CAAE,EAApB;;AACA,QAAI,KAAKK,OAAL,CAAaM,cAAb,CAA4BD,GAA5B,CAAJ,EAAsC;AAClC,aAAO,IAAP;AACH;;AAED,SAAKN,IAAL,CAAUR,IAAV,CAAe;AAAEG,MAAAA,CAAC,EAAEA,CAAL;AAAQC,MAAAA,CAAC,EAAEA;AAAX,KAAf;AACA,SAAKK,OAAL,CAAaK,GAAb,IAAoB,IAApB;AACA,WAAO,IAAP;AACH;;AAEDZ,EAAAA,GAAG,GAAG;AACF,WAAO,KAAKM,IAAL,CAAUN,GAAV,EAAP;AACH;;AAED,MAAID,MAAJ,GAAa;AACT,WAAO,KAAKO,IAAL,CAAUP,MAAjB;AACH;;AAEDK,EAAAA,KAAK,GAAG;AACJtB,IAAAA,KAAK,CAAC,KAAKwB,IAAN,CAAL;AACAxB,IAAAA,KAAK,CAAC,KAAKyB,OAAN,CAAL;AACA,WAAO,IAAP;AACH;;AA1CO;;AA6CZ,IAAIb,WAAJ;AAEA,eAAeT,KAAf","sourcesContent":["import Clear from '../../utils/object/Clear.js';\r\nimport IsPlainObject from '../../utils/object/IsPlainObject.js';\r\nimport IsArray from '../../utils/object/IsArray.js';\r\n\r\nvar Group = function (startTileX, startTileY, out) {\r\n    if (out === undefined) {\r\n        out = [];\r\n    }\r\n\r\n    var board = this.board;\r\n    var wildcard = this.wildcard;\r\n    var targetSymbol = this.getSymbol(startTileX, startTileY);\r\n    if ((targetSymbol == null) || (targetSymbol === wildcard)) {\r\n        return out;\r\n    }\r\n\r\n    if (globalQueue === undefined) {\r\n        globalQueue = new Queue();\r\n    }\r\n\r\n    var curTileXY, symbol;\r\n    globalQueue.push(startTileX, startTileY);\r\n    while (globalQueue.length) {\r\n        curTileXY = globalQueue.pop();\r\n        symbol = this.getSymbol(curTileXY.x, curTileXY.y);\r\n        if ((symbol === targetSymbol) || (symbol === wildcard)) {\r\n            out.push(curTileXY);\r\n            globalQueue.push(board.getNeighborTileXY(curTileXY));\r\n        }\r\n    }\r\n\r\n    globalQueue.clear();\r\n    return out;\r\n}\r\n\r\nclass Queue {\r\n    constructor() {\r\n        this.data = [];\r\n        this.visited = {};\r\n    }\r\n\r\n    push(x, y) {\r\n        if (IsArray(x)) {\r\n            var xyArray = x;\r\n            for (var i = 0, cnt = xyArray.length; i < cnt; i++) {\r\n                this.push(xyArray[i]);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        if (IsPlainObject(x)) {\r\n            var xy = x;\r\n            x = xy.x;\r\n            y = xy.y;\r\n        }\r\n        var key = `${x},${y}`;\r\n        if (this.visited.hasOwnProperty(key)) {\r\n            return this;\r\n        }\r\n\r\n        this.data.push({ x: x, y: y });\r\n        this.visited[key] = true;\r\n        return this;\r\n    }\r\n\r\n    pop() {\r\n        return this.data.pop();\r\n    }\r\n\r\n    get length() {\r\n        return this.data.length;\r\n    }\r\n\r\n    clear() {\r\n        Clear(this.data);\r\n        Clear(this.visited);\r\n        return this;\r\n    }\r\n}\r\n\r\nvar globalQueue;\r\n\r\nexport default Group;"]},"metadata":{},"sourceType":"module"}