{"ast":null,"code":"import GetSneakTileZ from './GetSneakTileZ.js';\n\nvar CanMoveToTile = function (tileX, tileY, direction) {\n  var board = this.chessData.board; // Chess is not in a board\n\n  if (board == null) {\n    return false;\n  }\n\n  var myTileXYZ = this.chessData.tileXYZ;\n  var myTileX = myTileXYZ.x,\n      myTileY = myTileXYZ.y,\n      myTileZ = myTileXYZ.z; // Move to current position\n\n  if (tileX === myTileX && tileY === myTileY) {\n    return true;\n  } // Target position is not in board\n\n\n  if (!board.contains(tileX, tileY)) {\n    return false;\n  }\n\n  if (direction === undefined) {\n    direction = this.chessData.getTileDirection(tileX, tileY);\n  }\n\n  if (this.sneakMode) {\n    if (this.tileZSave === undefined) {\n      if (board.contains(tileX, tileY, myTileZ)) {\n        // Sneak\n        this.tileZSave = myTileZ;\n        var sneakTileZ = GetSneakTileZ.call(this, this.tileZSave);\n        board.moveChess(this.gameObject, tileX, tileY, sneakTileZ, false);\n        myTileZ = sneakTileZ;\n      }\n    } else {\n      if (board.contains(tileX, tileY, this.tileZSave)) {\n        // Sneak\n        var sneakTileZ = GetSneakTileZ.call(this, this.tileZSave);\n        board.moveChess(this.gameObject, tileX, tileY, sneakTileZ, false);\n        myTileZ = sneakTileZ;\n      } else {\n        // Go back\n        board.moveChess(this.gameObject, tileX, tileY, this.tileZSave, false);\n        myTileZ = this.tileZSave;\n        this.tileZSave = undefined;\n      }\n    }\n  } // Occupied test\n\n\n  if (this.occupiedTest && !this.sneakMode) {\n    var occupiedChess = board.tileXYZToChess(tileX, tileY, myTileZ);\n\n    if (occupiedChess) {\n      this.emit('occupy', occupiedChess, this.parent, this); // Try to move occupiedChess away in this event\n      // Still ooccupied?\n\n      if (board.contains(tileX, tileY, myTileZ)) {\n        return false;\n      }\n    }\n  } // Blocker test\n\n\n  if (this.blockerTest) {\n    if (board.hasBlocker(tileX, tileY)) {\n      return false;\n    }\n  } // Edge-blocker test\n\n\n  if (this.edgeBlockerTest) {\n    var chess = this.TileXYToChessArray(myTileX, myTileY, globChessArray);\n\n    if (chess.length > 1) {\n      for (var i = 0, cnt = chess.length; i < cnt; i++) {\n        if (chess[i] === this.gameObject) {\n          continue;\n        }\n\n        if (board.hasEdgeBlocker(myTileX, myTileY, this.chessToTileXYZ(chess[i]).z, direction)) {\n          globChessArray.length = 0;\n          return false;\n        }\n      }\n    }\n\n    globChessArray.length = 0; // TODO\n  } // Custom moveable test\n\n\n  if (this.moveableTestCallback) {\n    globTileXYZ.x = tileX;\n    globTileXYZ.y = tileY;\n    globTileXYZ.direction = direction;\n\n    if (this.moveableTestScope) {\n      var moveable = this.moveableTestCallback.call(this.moveableTestScope, myTileXYZ, globTileXYZ, board);\n    } else {\n      var moveable = this.moveableTestCallback(myTileXYZ, globTileXYZ, board);\n    }\n\n    if (!moveable) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar globTileXYZ = {\n  x: 0,\n  y: 0,\n  direction: null\n};\nvar globChessArray = [];\nexport default CanMoveToTile;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/moveto/CanMoveToTile.js"],"names":["GetSneakTileZ","CanMoveToTile","tileX","tileY","direction","board","chessData","myTileXYZ","tileXYZ","myTileX","x","myTileY","y","myTileZ","z","contains","undefined","getTileDirection","sneakMode","tileZSave","sneakTileZ","call","moveChess","gameObject","occupiedTest","occupiedChess","tileXYZToChess","emit","parent","blockerTest","hasBlocker","edgeBlockerTest","chess","TileXYToChessArray","globChessArray","length","i","cnt","hasEdgeBlocker","chessToTileXYZ","moveableTestCallback","globTileXYZ","moveableTestScope","moveable"],"mappings":"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","sourcesContent":["import GetSneakTileZ from './GetSneakTileZ.js';\r\n\r\nvar CanMoveToTile = function (tileX, tileY, direction) {\r\n    var board = this.chessData.board;\r\n    // Chess is not in a board\r\n    if (board == null) {\r\n        return false;\r\n    }\r\n    var myTileXYZ = this.chessData.tileXYZ;\r\n    var myTileX = myTileXYZ.x,\r\n        myTileY = myTileXYZ.y,\r\n        myTileZ = myTileXYZ.z;\r\n    // Move to current position\r\n    if ((tileX === myTileX) && (tileY === myTileY)) {\r\n        return true;\r\n    }\r\n    // Target position is not in board\r\n    if (!board.contains(tileX, tileY)) {\r\n        return false;\r\n    }\r\n\r\n    if (direction === undefined) {\r\n        direction = this.chessData.getTileDirection(tileX, tileY);\r\n    }\r\n\r\n    if (this.sneakMode) {\r\n        if (this.tileZSave === undefined) {\r\n            if (board.contains(tileX, tileY, myTileZ)) {\r\n                // Sneak\r\n                this.tileZSave = myTileZ;\r\n                var sneakTileZ = GetSneakTileZ.call(this, this.tileZSave);\r\n                board.moveChess(this.gameObject, tileX, tileY, sneakTileZ, false);\r\n                myTileZ = sneakTileZ;\r\n            }\r\n        } else {\r\n            if (board.contains(tileX, tileY, this.tileZSave)) {\r\n                // Sneak\r\n                var sneakTileZ = GetSneakTileZ.call(this, this.tileZSave);\r\n                board.moveChess(this.gameObject, tileX, tileY, sneakTileZ, false);\r\n                myTileZ = sneakTileZ;\r\n            } else {\r\n                // Go back\r\n                board.moveChess(this.gameObject, tileX, tileY, this.tileZSave, false);\r\n                myTileZ = this.tileZSave;\r\n                this.tileZSave = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Occupied test\r\n    if (this.occupiedTest && !this.sneakMode) {\r\n        var occupiedChess = board.tileXYZToChess(tileX, tileY, myTileZ);\r\n        if (occupiedChess) {            \r\n            this.emit('occupy', occupiedChess, this.parent, this);\r\n            // Try to move occupiedChess away in this event\r\n            // Still ooccupied?\r\n            if (board.contains(tileX, tileY, myTileZ)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Blocker test\r\n    if (this.blockerTest) {\r\n        if (board.hasBlocker(tileX, tileY)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Edge-blocker test\r\n    if (this.edgeBlockerTest) {\r\n        var chess = this.TileXYToChessArray(myTileX, myTileY, globChessArray);\r\n        if (chess.length > 1) {\r\n            for (var i = 0, cnt = chess.length; i < cnt; i++) {\r\n                if (chess[i] === this.gameObject) {\r\n                    continue;\r\n                }\r\n                if (board.hasEdgeBlocker(myTileX, myTileY, this.chessToTileXYZ(chess[i]).z, direction)) {\r\n                    globChessArray.length = 0;\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        globChessArray.length = 0;\r\n\r\n        // TODO\r\n    }\r\n\r\n    // Custom moveable test\r\n    if (this.moveableTestCallback) {\r\n        globTileXYZ.x = tileX;\r\n        globTileXYZ.y = tileY;\r\n        globTileXYZ.direction = direction;\r\n        if (this.moveableTestScope) {\r\n            var moveable = this.moveableTestCallback.call(this.moveableTestScope, myTileXYZ, globTileXYZ, board);\r\n        } else {\r\n            var moveable = this.moveableTestCallback(myTileXYZ, globTileXYZ, board);\r\n        }\r\n        if (!moveable) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nvar globTileXYZ = {\r\n    x: 0,\r\n    y: 0,\r\n    direction: null\r\n};\r\n\r\nvar globChessArray = [];\r\n\r\nexport default CanMoveToTile;"]},"metadata":{},"sourceType":"module"}