{"ast":null,"code":"import { CreateTileData } from './TileData.js';\nimport CONST from './const.js';\nconst STOP = CONST.STOP;\n\nvar GetPath = function (movingPoints, out) {\n  if (out === undefined) {\n    out = [];\n  }\n\n  if (this.board === null) {\n    // chess is not in board\n    return out;\n  }\n\n  var curTileXYZ = this.chessData.tileXYZ,\n      curTileData = CreateTileData(curTileXYZ.x, curTileXYZ.y, this.face),\n      nextTileData;\n  var cost;\n\n  while (movingPoints > 0) {\n    nextTileData = this.getNextTile(curTileData, this.preTileXY);\n\n    if (nextTileData === null) {\n      break;\n    }\n\n    cost = this.getCost(nextTileData, curTileData);\n\n    if (cost === STOP) {\n      cost = movingPoints;\n    }\n\n    nextTileData.cost = cost;\n\n    if (movingPoints >= cost) {\n      out.push(nextTileData);\n    }\n\n    movingPoints -= cost;\n    this.preTileXY = curTileData;\n    curTileData = nextTileData;\n  } // remove cost = 0 at tail\n\n\n  for (var i = out.length - 1; i >= 0; i--) {\n    if (out[i].cost === 0) {\n      out.length = i;\n    } else {\n      break;\n    }\n  }\n\n  return out;\n};\n\nexport default GetPath;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/monopoly/GetPath.js"],"names":["CreateTileData","CONST","STOP","GetPath","movingPoints","out","undefined","board","curTileXYZ","chessData","tileXYZ","curTileData","x","y","face","nextTileData","cost","getNextTile","preTileXY","getCost","push","i","length"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;;AAEA,IAAIC,OAAO,GAAG,UAAUC,YAAV,EAAwBC,GAAxB,EAA6B;AACvC,MAAIA,GAAG,KAAKC,SAAZ,EAAuB;AACnBD,IAAAA,GAAG,GAAG,EAAN;AACH;;AACD,MAAI,KAAKE,KAAL,KAAe,IAAnB,EAAyB;AAAE;AACvB,WAAOF,GAAP;AACH;;AACD,MAAIG,UAAU,GAAG,KAAKC,SAAL,CAAeC,OAAhC;AAAA,MACIC,WAAW,GAAGX,cAAc,CAACQ,UAAU,CAACI,CAAZ,EAAeJ,UAAU,CAACK,CAA1B,EAA6B,KAAKC,IAAlC,CADhC;AAAA,MAEIC,YAFJ;AAGA,MAAIC,IAAJ;;AACA,SAAOZ,YAAY,GAAG,CAAtB,EAAyB;AACrBW,IAAAA,YAAY,GAAG,KAAKE,WAAL,CAAiBN,WAAjB,EAA8B,KAAKO,SAAnC,CAAf;;AACA,QAAIH,YAAY,KAAK,IAArB,EAA2B;AACvB;AACH;;AACDC,IAAAA,IAAI,GAAG,KAAKG,OAAL,CAAaJ,YAAb,EAA2BJ,WAA3B,CAAP;;AACA,QAAIK,IAAI,KAAKd,IAAb,EAAmB;AACfc,MAAAA,IAAI,GAAGZ,YAAP;AACH;;AACDW,IAAAA,YAAY,CAACC,IAAb,GAAoBA,IAApB;;AACA,QAAIZ,YAAY,IAAIY,IAApB,EAA0B;AACtBX,MAAAA,GAAG,CAACe,IAAJ,CAASL,YAAT;AACH;;AACDX,IAAAA,YAAY,IAAIY,IAAhB;AAEA,SAAKE,SAAL,GAAiBP,WAAjB;AACAA,IAAAA,WAAW,GAAGI,YAAd;AACH,GA5BsC,CA8BvC;;;AACA,OAAK,IAAIM,CAAC,GAAGhB,GAAG,CAACiB,MAAJ,GAAa,CAA1B,EAA6BD,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACtC,QAAIhB,GAAG,CAACgB,CAAD,CAAH,CAAOL,IAAP,KAAgB,CAApB,EAAuB;AACnBX,MAAAA,GAAG,CAACiB,MAAJ,GAAaD,CAAb;AACH,KAFD,MAEO;AACH;AACH;AACJ;;AACD,SAAOhB,GAAP;AACH,CAvCD;;AAyCA,eAAeF,OAAf","sourcesContent":["import { CreateTileData } from './TileData.js';\r\nimport CONST from './const.js';\r\n\r\nconst STOP = CONST.STOP;\r\n\r\nvar GetPath = function (movingPoints, out) {\r\n    if (out === undefined) {\r\n        out = [];\r\n    }\r\n    if (this.board === null) { // chess is not in board\r\n        return out;\r\n    }\r\n    var curTileXYZ = this.chessData.tileXYZ,\r\n        curTileData = CreateTileData(curTileXYZ.x, curTileXYZ.y, this.face),\r\n        nextTileData;\r\n    var cost;\r\n    while (movingPoints > 0) {\r\n        nextTileData = this.getNextTile(curTileData, this.preTileXY);\r\n        if (nextTileData === null) {\r\n            break;\r\n        }\r\n        cost = this.getCost(nextTileData, curTileData);\r\n        if (cost === STOP) {\r\n            cost = movingPoints;\r\n        }\r\n        nextTileData.cost = cost;\r\n        if (movingPoints >= cost) {\r\n            out.push(nextTileData);\r\n        }\r\n        movingPoints -= cost;\r\n\r\n        this.preTileXY = curTileData;\r\n        curTileData = nextTileData;\r\n    }\r\n\r\n    // remove cost = 0 at tail\r\n    for (var i = out.length - 1; i >= 0; i--) {\r\n        if (out[i].cost === 0) {\r\n            out.length = i;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return out;\r\n}\r\n\r\nexport default GetPath;"]},"metadata":{},"sourceType":"module"}