{"ast":null,"code":"const Zone = Phaser.GameObjects.Zone;\nconst AddItem = Phaser.Utils.Array.Add;\nconst RemoveItem = Phaser.Utils.Array.Remove;\n\nclass Base extends Zone {\n  constructor(scene, x, y, width, height) {\n    if (width === undefined) {\n      width = 1;\n    }\n\n    if (height === undefined) {\n      height = 1;\n    }\n\n    super(scene, x, y, width, height);\n    this.children = [];\n  }\n\n  destroy(fromScene) {\n    //  This Game Object has already been destroyed\n    if (!this.scene) {\n      return;\n    }\n\n    this.clear(!fromScene);\n    super.destroy(fromScene);\n  }\n\n  contains(gameObject) {\n    return this.children.indexOf(gameObject) !== -1;\n  }\n\n  add(gameObjects) {\n    AddItem(this.children, gameObjects, 0, // Callback of item added\n    function (gameObject) {\n      gameObject.on('destroy', this.remove, this);\n    }, this);\n    return this;\n  }\n\n  remove(gameObjects, destroyChild) {\n    RemoveItem(this.children, gameObjects, // Callback of item removed\n    function (gameObject) {\n      gameObject.off('destroy', this.remove, this);\n\n      if (destroyChild) {\n        gameObject.destroy();\n      }\n    });\n    return this;\n  }\n\n  clear(destroyChild) {\n    var gameObject;\n\n    for (var i = 0, cnt = this.children.length; i < cnt; i++) {\n      gameObject = this.children[i];\n      gameObject.off('destroy', this.remove, this);\n\n      if (destroyChild) {\n        gameObject.destroy();\n      }\n    }\n\n    this.children.length = 0;\n    return this;\n  }\n\n}\n\nconst Components = Phaser.GameObjects.Components;\nPhaser.Class.mixin(Base, [Components.Alpha, Components.Flip]);\nexport default Base;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/gameobjects/containerlite/Base.js"],"names":["Zone","Phaser","GameObjects","AddItem","Utils","Array","Add","RemoveItem","Remove","Base","constructor","scene","x","y","width","height","undefined","children","destroy","fromScene","clear","contains","gameObject","indexOf","add","gameObjects","on","remove","destroyChild","off","i","cnt","length","Components","Class","mixin","Alpha","Flip"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,MAAM,CAACC,WAAP,CAAmBF,IAAhC;AACA,MAAMG,OAAO,GAAGF,MAAM,CAACG,KAAP,CAAaC,KAAb,CAAmBC,GAAnC;AACA,MAAMC,UAAU,GAAGN,MAAM,CAACG,KAAP,CAAaC,KAAb,CAAmBG,MAAtC;;AAEA,MAAMC,IAAN,SAAmBT,IAAnB,CAAwB;AACpBU,EAAAA,WAAW,CAACC,KAAD,EAAQC,CAAR,EAAWC,CAAX,EAAcC,KAAd,EAAqBC,MAArB,EAA6B;AACpC,QAAID,KAAK,KAAKE,SAAd,EAAyB;AACrBF,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,QAAIC,MAAM,KAAKC,SAAf,EAA0B;AACtBD,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,UAAMJ,KAAN,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,KAAnB,EAA0BC,MAA1B;AACA,SAAKE,QAAL,GAAgB,EAAhB;AACH;;AAEDC,EAAAA,OAAO,CAACC,SAAD,EAAY;AACf;AACA,QAAI,CAAC,KAAKR,KAAV,EAAiB;AACb;AACH;;AAED,SAAKS,KAAL,CAAW,CAACD,SAAZ;AACA,UAAMD,OAAN,CAAcC,SAAd;AACH;;AAEDE,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACjB,WAAQ,KAAKL,QAAL,CAAcM,OAAd,CAAsBD,UAAtB,MAAsC,CAAC,CAA/C;AACH;;AAEDE,EAAAA,GAAG,CAACC,WAAD,EAAc;AACbtB,IAAAA,OAAO,CAAC,KAAKc,QAAN,EAAgBQ,WAAhB,EAA6B,CAA7B,EACH;AACA,cAAUH,UAAV,EAAsB;AAClBA,MAAAA,UAAU,CAACI,EAAX,CAAc,SAAd,EAAyB,KAAKC,MAA9B,EAAsC,IAAtC;AACH,KAJE,EAIA,IAJA,CAAP;AAKA,WAAO,IAAP;AACH;;AAEDA,EAAAA,MAAM,CAACF,WAAD,EAAcG,YAAd,EAA4B;AAC9BrB,IAAAA,UAAU,CAAC,KAAKU,QAAN,EAAgBQ,WAAhB,EACN;AACA,cAAUH,UAAV,EAAsB;AAClBA,MAAAA,UAAU,CAACO,GAAX,CAAe,SAAf,EAA0B,KAAKF,MAA/B,EAAuC,IAAvC;;AACA,UAAIC,YAAJ,EAAkB;AACdN,QAAAA,UAAU,CAACJ,OAAX;AACH;AACJ,KAPK,CAAV;AASA,WAAO,IAAP;AACH;;AAEDE,EAAAA,KAAK,CAACQ,YAAD,EAAe;AAChB,QAAIN,UAAJ;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAKd,QAAL,CAAce,MAApC,EAA4CF,CAAC,GAAGC,GAAhD,EAAqDD,CAAC,EAAtD,EAA0D;AACtDR,MAAAA,UAAU,GAAG,KAAKL,QAAL,CAAca,CAAd,CAAb;AACAR,MAAAA,UAAU,CAACO,GAAX,CAAe,SAAf,EAA0B,KAAKF,MAA/B,EAAuC,IAAvC;;AACA,UAAIC,YAAJ,EAAkB;AACdN,QAAAA,UAAU,CAACJ,OAAX;AACH;AACJ;;AACD,SAAKD,QAAL,CAAce,MAAd,GAAuB,CAAvB;AACA,WAAO,IAAP;AACH;;AA3DmB;;AA8DxB,MAAMC,UAAU,GAAGhC,MAAM,CAACC,WAAP,CAAmB+B,UAAtC;AACAhC,MAAM,CAACiC,KAAP,CAAaC,KAAb,CAAmB1B,IAAnB,EACI,CACIwB,UAAU,CAACG,KADf,EAEIH,UAAU,CAACI,IAFf,CADJ;AAOA,eAAe5B,IAAf","sourcesContent":["const Zone = Phaser.GameObjects.Zone;\r\nconst AddItem = Phaser.Utils.Array.Add;\r\nconst RemoveItem = Phaser.Utils.Array.Remove;\r\n\r\nclass Base extends Zone {\r\n    constructor(scene, x, y, width, height) {\r\n        if (width === undefined) {\r\n            width = 1;\r\n        }\r\n        if (height === undefined) {\r\n            height = 1;\r\n        }\r\n        super(scene, x, y, width, height);\r\n        this.children = [];\r\n    }\r\n\r\n    destroy(fromScene) {\r\n        //  This Game Object has already been destroyed\r\n        if (!this.scene) {\r\n            return;\r\n        }\r\n\r\n        this.clear(!fromScene);\r\n        super.destroy(fromScene);\r\n    }\r\n\r\n    contains(gameObject) {\r\n        return (this.children.indexOf(gameObject) !== -1);\r\n    }\r\n\r\n    add(gameObjects) {\r\n        AddItem(this.children, gameObjects, 0,\r\n            // Callback of item added\r\n            function (gameObject) {\r\n                gameObject.on('destroy', this.remove, this);\r\n            }, this);\r\n        return this;\r\n    }\r\n\r\n    remove(gameObjects, destroyChild) {\r\n        RemoveItem(this.children, gameObjects,\r\n            // Callback of item removed\r\n            function (gameObject) {\r\n                gameObject.off('destroy', this.remove, this);\r\n                if (destroyChild) {\r\n                    gameObject.destroy();\r\n                }\r\n            }\r\n        );\r\n        return this;\r\n    }\r\n\r\n    clear(destroyChild) {\r\n        var gameObject;\r\n        for (var i = 0, cnt = this.children.length; i < cnt; i++) {\r\n            gameObject = this.children[i];\r\n            gameObject.off('destroy', this.remove, this);\r\n            if (destroyChild) {\r\n                gameObject.destroy();\r\n            }\r\n        }\r\n        this.children.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Base,\r\n    [\r\n        Components.Alpha,\r\n        Components.Flip\r\n    ]\r\n);\r\n\r\nexport default Base;"]},"metadata":{},"sourceType":"module"}