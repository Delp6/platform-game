{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmode\\\\Documents\\\\ProjektyFullStack\\\\war-of-champions\\\\frontend\\\\src\\\\phaser\\\\PhaserMain.js\";\nimport { IonPhaser } from \"@ion-phaser/react\";\nimport React from \"react\";\nimport Phaser from \"phaser\";\n\nconst PhaserMain = () => {\n  let player;\n  let playerPlatformsCollider;\n  let cursors;\n  let coins;\n  let score = 0;\n  let scoreText;\n  let coinLayer;\n  let golemsLayer;\n  let golemsCollisions;\n  let doorLayer;\n  let doorCollision;\n  let golem1, golem2, golem3, golem4;\n  let golem1Velocity = 100;\n  let golem2Velocity = 100;\n  let golem3Velocity = 100;\n  let golem4Velocity = 100;\n  let golem1PlatformsCollider;\n  let golem2PlatformsCollider;\n  let golem3PlatformsCollider;\n  let golem4PlatformsCollider;\n  let playerGolem1Collider;\n  let playerGolem2Collider;\n  let playerGolem3Collider;\n  let playerGolem4Collider;\n  let battleLost = false;\n  let lost = false;\n  let win = false;\n  let resetKey;\n  let addScoreKey;\n  const gameState = {\n    initialize: true,\n    game: {\n      width: 960,\n      height: 600,\n      type: Phaser.AUTO,\n      scene: {\n        key: \"main\",\n        preload: preload,\n        create: create,\n        update: update\n      },\n      physics: {\n        default: \"arcade\",\n        arcade: {\n          gravity: {\n            y: 500\n          },\n          debug: false\n        }\n      }\n    }\n  };\n\n  function preload() {\n    this.load.image('background', 'assets/images/background.png');\n    this.load.spritesheet(\"adventurer\", \"assets/images/adventurer.png\", {\n      frameWidth: 64,\n      frameHeight: 88\n    });\n    this.load.image('tiles', 'assets/tilesets/platformPack_tilesheet.png');\n    this.load.tilemapTiledJSON('map', 'assets/tilemaps/level1.json');\n    this.load.image(\"coin\", \"assets/images/coin.png\");\n    this.load.spritesheet(\"golem\", \"assets/images/golem.png\", {\n      frameWidth: 135,\n      frameHeight: 90\n    });\n  }\n\n  function create() {\n    resetKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.R, false);\n    addScoreKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.P, false); //background\n\n    const backgroundImage = this.add.image(0, 0, 'background').setOrigin(0, 0);\n    backgroundImage.setScale(20, 0.8); //map\n\n    const map = this.make.tilemap({\n      key: 'map'\n    });\n    const tileset = map.addTilesetImage(\"kenney_simple_platformer\", 'tiles');\n    const platforms = map.createStaticLayer('Platforms', tileset, 0, 200);\n    map.createStaticLayer(\"Background\", tileset, 0, 200); //coin layer\n\n    coinLayer = map.getObjectLayer('Coins')['objects'];\n    coins = this.physics.add.staticGroup();\n    coinLayer.forEach(object => {\n      const coin = coins.create(object.x, object.y + 200 - object.height, 'coin').setOrigin(0, 0);\n    }); // golems layer\n\n    golemsLayer = map.getObjectLayer('GolemsCollision')['objects'];\n    golemsCollisions = this.physics.add.staticGroup();\n    golemsLayer.forEach(object => {\n      const collision = golemsCollisions.create(object.x, object.y + 200 - object.height, null).setOrigin(0, 0);\n      collision.setScale(object.width / 32, object.height / 32);\n      collision.setVisible(false);\n    }); //door collision\n\n    doorLayer = map.getObjectLayer('DoorCollision')[\"objects\"];\n    doorCollision = this.physics.add.staticGroup();\n    doorLayer.forEach(object => {\n      const collision = doorCollision.create(object.x, object.y + 200 - object.height, null).setOrigin(0, 0);\n      collision.setScale(object.width / 32, object.height / 32);\n      collision.setVisible(false);\n    }); // map\n\n    platforms.setCollisionByExclusion(-1, true); //cursors\n\n    cursors = this.input.keyboard.createCursorKeys(); //player\n\n    player = this.physics.add.sprite(200, 300, \"adventurer\");\n    player.body.setSize(player.width - 15); //golems\n\n    golem1 = this.physics.add.sprite(750, 480, \"golem\");\n    golem1.body.setSize(player.width - 15, player.height - 10);\n    golem2 = this.physics.add.sprite(750 + 17 * 64, 300, \"golem\");\n    golem2.body.setSize(player.width - 15, player.height - 10);\n    golem3 = this.physics.add.sprite(750 + 24 * 64, 500, \"golem\");\n    golem3.body.setSize(player.width - 15, player.height - 10);\n    golem4 = this.physics.add.sprite(750 + 85 * 64, 500, \"golem\");\n    golem4.body.setSize(player.width - 15, player.height - 10); //score text\n\n    scoreText = this.add.text(16, 16, \"Score: 0\", {\n      fontSize: '32px',\n      color: 'black'\n    });\n    scoreText.setScrollFactor(0, 0); // restart text\n\n    this.add.text(580, 16, \"To restart press: R\", {\n      fontSize: '32px',\n      color: 'black'\n    }).setScrollFactor(0, 0); // controls\n\n    this.add.text(16, 600, \"arrows - move\", {\n      fontSize: '32px',\n      color: 'black'\n    });\n    this.add.text(16, 632, \"space - attack\", {\n      fontSize: '32px',\n      color: 'black'\n    }); //physics\n\n    playerPlatformsCollider = this.physics.add.collider(player, platforms);\n    golem1PlatformsCollider = this.physics.add.collider(golem1, platforms);\n    golem2PlatformsCollider = this.physics.add.collider(golem2, platforms);\n    golem3PlatformsCollider = this.physics.add.collider(golem3, platforms);\n    golem4PlatformsCollider = this.physics.add.collider(golem4, platforms);\n    this.physics.add.overlap(player, coins, collectCoin, null, this);\n    this.physics.add.overlap(player, doorCollision, winFunction, null, this);\n    this.physics.add.collider(golem1, golemsCollisions);\n    this.physics.add.collider(golem2, golemsCollisions);\n    this.physics.add.collider(golem3, golemsCollisions);\n    this.physics.add.collider(golem4, golemsCollisions);\n    playerGolem1Collider = this.physics.add.overlap(player, golem1, fight1, null, this);\n    playerGolem2Collider = this.physics.add.overlap(player, golem2, fight2, null, this);\n    playerGolem3Collider = this.physics.add.overlap(player, golem3, fight3, null, this);\n    playerGolem4Collider = this.physics.add.overlap(player, golem4, fight4, null, this);\n    this.physics.add.collider(player, doorLayer); //camera\n\n    this.cameras.main.setBounds(0, 0, backgroundImage.displayWidth, backgroundImage.displayHeight);\n    this.cameras.main.startFollow(player); //animations\n\n    this.anims.create({\n      key: 'left',\n      frames: this.anims.generateFrameNumbers('adventurer', {\n        start: 7,\n        end: 8\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'stand',\n      frames: [{\n        key: 'adventurer',\n        frame: 6\n      }],\n      frameRate: 20\n    });\n    this.anims.create({\n      key: 'right',\n      frames: this.anims.generateFrameNumbers('adventurer', {\n        start: 9,\n        end: 10\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'jump-right',\n      frames: [{\n        key: 'adventurer',\n        frame: 3\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'jump-left',\n      frames: [{\n        key: 'adventurer',\n        frame: 2\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'attack-right',\n      frames: [{\n        key: 'adventurer',\n        frame: 1\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'attack-left',\n      frames: [{\n        key: 'adventurer',\n        frame: 0\n      }],\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'golem-walk-left',\n      frames: this.anims.generateFrameNumbers('golem', {\n        start: 5,\n        end: 16\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'golem-walk-right',\n      frames: this.anims.generateFrameNumbers('golem', {\n        start: 17,\n        end: 33\n      }),\n      frameRate: 10,\n      repeat: -1\n    }); // golems initial velocity\n\n    golem1.setVelocityX(golem1Velocity);\n    golem2.setVelocityX(golem2Velocity);\n    golem3.setVelocityX(golem3Velocity);\n    golem4.setVelocityX(golem4Velocity);\n  }\n\n  function update() {\n    if (win) {\n      scoreText = this.add.text(400, 150, \"You win!\", {\n        fontSize: '72px',\n        color: 'black'\n      }).setScrollFactor(0, 0);\n      scoreText = this.add.text(360, 220, \"Press: P to add your score to board.\", {\n        fontSize: '20px',\n        color: 'black'\n      }).setScrollFactor(0, 0);\n    }\n\n    if (lost && !win) {\n      scoreText = this.add.text(400, 150, \"You lost!\", {\n        fontSize: '72px',\n        color: 'black'\n      }).setScrollFactor(0, 0);\n    }\n    /*golems move*/\n\n\n    if (golem1.body.velocity.x < 0) {\n      golem1.anims.play(\"golem-walk-left\", true);\n    } else if (golem1.body.velocity.x > 0) {\n      golem1.anims.play(\"golem-walk-right\", true);\n    }\n\n    if (golem2.body.velocity.x < 0) {\n      golem2.anims.play(\"golem-walk-left\", true);\n    } else if (golem2.body.velocity.x > 0) {\n      golem2.anims.play(\"golem-walk-right\", true);\n    }\n\n    if (golem3.body.velocity.x < 0) {\n      golem3.anims.play(\"golem-walk-left\", true);\n    } else if (golem3.body.velocity.x > 0) {\n      golem3.anims.play(\"golem-walk-right\", true);\n    }\n\n    if (golem4.body.velocity.x < 0) {\n      golem4.anims.play(\"golem-walk-left\", true);\n    } else if (golem4.body.velocity.x > 0) {\n      golem4.anims.play(\"golem-walk-right\", true);\n    }\n    /*move*/\n\n\n    if (cursors.left.isDown && !cursors.space.isDown) {\n      player.setVelocityX(-160);\n\n      if (player.body.onFloor()) {\n        player.anims.play('left', true);\n      }\n    } else if (cursors.right.isDown && !cursors.space.isDown) {\n      player.setVelocityX(160);\n\n      if (player.body.onFloor()) {\n        player.anims.play('right', true);\n      }\n    } else {\n      player.setVelocityX(0);\n      player.anims.play('stand');\n    }\n    /*jump*/\n\n\n    if (cursors.up.isDown && player.body.onFloor()) {\n      player.setVelocityY(-330);\n      player.anims.play('jump-right', true);\n    } else if (!player.body.onFloor()) {\n      if (cursors.left.isDown) {\n        player.anims.play('jump-left', true);\n      } else {\n        player.anims.play('jump-right', true);\n      }\n    }\n    /*restart*/\n\n\n    if (resetKey.isDown) {\n      this.scene.restart();\n      battleLost = false;\n      lost = false;\n      win = false;\n    }\n    /*add score*/\n\n\n    if (addScoreKey.isDown) {\n      /*TODO MOVE TO ADDING SCORE PAGE*/\n    }\n    /*action*/\n\n\n    if (cursors.space.isDown && cursors.left.isDown && player.body.onFloor()) {\n      player.anims.play('attack-left', true);\n    } else if (cursors.space.isDown && player.body.onFloor()) {\n      player.anims.play('attack-right', true);\n    }\n    /*golem movement*/\n\n\n    if (golem1.body.blocked.right) {\n      golem1Velocity = -golem1Velocity;\n      golem1.setVelocityX(golem1Velocity);\n    }\n\n    if (golem1.body.blocked.left) {\n      golem1Velocity = -golem1Velocity;\n      golem1.setVelocityX(golem1Velocity);\n    }\n\n    if (golem2.body.blocked.right) {\n      golem2Velocity = -golem2Velocity;\n      golem2.setVelocityX(golem2Velocity);\n    }\n\n    if (golem2.body.blocked.left) {\n      golem2Velocity = -golem2Velocity;\n      golem2.setVelocityX(golem2Velocity);\n    }\n\n    if (golem3.body.blocked.right) {\n      golem3Velocity = -golem3Velocity;\n      golem3.setVelocityX(golem3Velocity);\n    }\n\n    if (golem3.body.blocked.left) {\n      golem3Velocity = -golem3Velocity;\n      golem3.setVelocityX(golem3Velocity);\n    }\n\n    if (golem4.body.blocked.right) {\n      golem4Velocity = -golem4Velocity;\n      golem4.setVelocityX(golem4Velocity);\n    }\n\n    if (golem4.body.blocked.left) {\n      golem4Velocity = -golem4Velocity;\n      golem4.setVelocityX(golem4Velocity);\n    }\n    /*player dieing*/\n\n\n    if (player.y > 900) {\n      this.physics.pause();\n      player.setVelocityX(0);\n      golem1.setVelocityX(0);\n      golem2.setVelocityX(0);\n      golem3.setVelocityX(0);\n      golem4.setVelocityX(0);\n      lost = true;\n    }\n\n    if (battleLost) {\n      this.physics.world.removeCollider(playerPlatformsCollider);\n    }\n  }\n\n  function collectCoin(player, coin) {\n    coin.destroy(coin.x, coin.y);\n    score = score + 1;\n    scoreText.setText(\"Score: \" + score);\n  }\n\n  function winFunction(player) {\n    player.setVisible(false);\n    this.physics.pause();\n    player.setVelocityX(0);\n    golem1.setVelocityX(0);\n    golem2.setVelocityX(0);\n    golem3.setVelocityX(0);\n    golem4.setVelocityX(0);\n    win = true;\n  }\n\n  function fight1() {\n    let timer = setTimeout(function () {\n      battleLost = true;\n    }, 300);\n\n    if (cursors.space.isDown && player.body.onFloor()) {\n      clearTimeout(timer);\n      this.physics.world.removeCollider(golem1PlatformsCollider);\n      this.physics.world.removeCollider(playerGolem1Collider);\n      score = score + 1;\n      scoreText.setText(\"Score: \" + score);\n    }\n  }\n\n  function fight2() {\n    let timer = setTimeout(function () {\n      battleLost = true;\n    }, 300);\n\n    if (cursors.space.isDown && player.body.onFloor()) {\n      clearTimeout(timer);\n      this.physics.world.removeCollider(golem2PlatformsCollider);\n      this.physics.world.removeCollider(playerGolem2Collider);\n      score = score + 1;\n      scoreText.setText(\"Score: \" + score);\n    }\n  }\n\n  function fight3() {\n    let timer = setTimeout(function () {\n      battleLost = true;\n    }, 300);\n\n    if (cursors.space.isDown && player.body.onFloor()) {\n      clearTimeout(timer);\n      this.physics.world.removeCollider(golem3PlatformsCollider);\n      this.physics.world.removeCollider(playerGolem3Collider);\n      score = score + 1;\n      scoreText.setText(\"Score: \" + score);\n    }\n  }\n\n  function fight4() {\n    let timer = setTimeout(function () {\n      battleLost = true;\n    }, 300);\n\n    if (cursors.space.isDown && player.body.onFloor()) {\n      clearTimeout(timer);\n      this.physics.world.removeCollider(golem4PlatformsCollider);\n      this.physics.world.removeCollider(playerGolem4Collider);\n      score = score + 1;\n      scoreText.setText(\"Score: \" + score);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonPhaser, {\n    game: gameState.game,\n    initialize: gameState.initialize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PhaserMain;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/src/phaser/PhaserMain.js"],"names":["IonPhaser","React","Phaser","PhaserMain","player","playerPlatformsCollider","cursors","coins","score","scoreText","coinLayer","golemsLayer","golemsCollisions","doorLayer","doorCollision","golem1","golem2","golem3","golem4","golem1Velocity","golem2Velocity","golem3Velocity","golem4Velocity","golem1PlatformsCollider","golem2PlatformsCollider","golem3PlatformsCollider","golem4PlatformsCollider","playerGolem1Collider","playerGolem2Collider","playerGolem3Collider","playerGolem4Collider","battleLost","lost","win","resetKey","addScoreKey","gameState","initialize","game","width","height","type","AUTO","scene","key","preload","create","update","physics","default","arcade","gravity","y","debug","load","image","spritesheet","frameWidth","frameHeight","tilemapTiledJSON","input","keyboard","addKey","Input","Keyboard","KeyCodes","R","P","backgroundImage","add","setOrigin","setScale","map","make","tilemap","tileset","addTilesetImage","platforms","createStaticLayer","getObjectLayer","staticGroup","forEach","object","coin","x","collision","setVisible","setCollisionByExclusion","createCursorKeys","sprite","body","setSize","text","fontSize","color","setScrollFactor","collider","overlap","collectCoin","winFunction","fight1","fight2","fight3","fight4","cameras","main","setBounds","displayWidth","displayHeight","startFollow","anims","frames","generateFrameNumbers","start","end","frameRate","repeat","frame","setVelocityX","velocity","play","left","isDown","space","onFloor","right","up","setVelocityY","restart","blocked","pause","world","removeCollider","destroy","setText","timer","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import {IonPhaser} from \"@ion-phaser/react\";\r\nimport React from \"react\";\r\nimport Phaser from \"phaser\";\r\n\r\n\r\nconst PhaserMain = () => {\r\n\r\n    let player;\r\n    let playerPlatformsCollider;\r\n    let cursors;\r\n    let coins;\r\n    let score = 0;\r\n    let scoreText;\r\n    let coinLayer;\r\n    let golemsLayer;\r\n    let golemsCollisions;\r\n    let doorLayer;\r\n    let doorCollision;\r\n    let golem1, golem2, golem3, golem4;\r\n    let golem1Velocity = 100;\r\n    let golem2Velocity = 100;\r\n    let golem3Velocity = 100;\r\n    let golem4Velocity = 100;\r\n    let golem1PlatformsCollider;\r\n    let golem2PlatformsCollider;\r\n    let golem3PlatformsCollider;\r\n    let golem4PlatformsCollider;\r\n    let playerGolem1Collider;\r\n    let playerGolem2Collider;\r\n    let playerGolem3Collider;\r\n    let playerGolem4Collider;\r\n    let battleLost = false;\r\n    let lost = false;\r\n    let win = false;\r\n    let resetKey;\r\n    let addScoreKey;\r\n\r\n\r\n    const gameState = {\r\n        initialize: true,\r\n        game: {\r\n            width: 960,\r\n            height: 600,\r\n            type: Phaser.AUTO,\r\n            scene: {\r\n                key: \"main\",\r\n                preload: preload,\r\n                create: create,\r\n                update: update,\r\n            },\r\n            physics: {\r\n                default: \"arcade\",\r\n                arcade: {\r\n                    gravity: {y: 500},\r\n                    debug: false\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    function preload() {\r\n        this.load.image('background', 'assets/images/background.png');\r\n        this.load.spritesheet(\"adventurer\",\r\n            \"assets/images/adventurer.png\",\r\n            {frameWidth: 64, frameHeight: 88}\r\n        );\r\n        this.load.image('tiles', 'assets/tilesets/platformPack_tilesheet.png');\r\n        this.load.tilemapTiledJSON('map', 'assets/tilemaps/level1.json');\r\n        this.load.image(\"coin\", \"assets/images/coin.png\");\r\n        this.load.spritesheet(\"golem\",\r\n            \"assets/images/golem.png\",\r\n            {frameWidth: 135, frameHeight: 90}\r\n        );\r\n\r\n    }\r\n\r\n    function create() {\r\n        resetKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.R, false);\r\n        addScoreKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.P, false);\r\n        //background\r\n        const backgroundImage = this.add.image(0, 0, 'background').setOrigin(0, 0);\r\n        backgroundImage.setScale(20, 0.8);\r\n        //map\r\n        const map = this.make.tilemap({key: 'map'});\r\n        const tileset = map.addTilesetImage(\"kenney_simple_platformer\", 'tiles');\r\n        const platforms = map.createStaticLayer('Platforms', tileset, 0, 200);\r\n        map.createStaticLayer(\"Background\", tileset, 0, 200)\r\n        //coin layer\r\n        coinLayer = map.getObjectLayer('Coins')['objects'];\r\n        coins = this.physics.add.staticGroup()\r\n        coinLayer.forEach(object => {\r\n            const coin = coins.create(object.x, object.y + 200 - object.height, 'coin').setOrigin(0, 0);\r\n        });\r\n        // golems layer\r\n        golemsLayer = map.getObjectLayer('GolemsCollision')['objects']\r\n        golemsCollisions = this.physics.add.staticGroup()\r\n        golemsLayer.forEach(object => {\r\n            const collision = golemsCollisions.create(object.x, object.y + 200 - object.height, null).setOrigin(0, 0);\r\n            collision.setScale(object.width / 32, object.height / 32)\r\n            collision.setVisible(false)\r\n        });\r\n        //door collision\r\n        doorLayer = map.getObjectLayer('DoorCollision')[\"objects\"];\r\n        doorCollision = this.physics.add.staticGroup();\r\n        doorLayer.forEach(object => {\r\n            const collision = doorCollision.create(object.x, object.y + 200 - object.height, null).setOrigin(0, 0);\r\n            collision.setScale(object.width / 32, object.height / 32)\r\n            collision.setVisible(false)\r\n        })\r\n        // map\r\n        platforms.setCollisionByExclusion(-1, true);\r\n        //cursors\r\n        cursors = this.input.keyboard.createCursorKeys();\r\n        //player\r\n        player = this.physics.add.sprite(200, 300, \"adventurer\");\r\n        player.body.setSize(player.width - 15)\r\n        //golems\r\n        golem1 = this.physics.add.sprite(750, 480, \"golem\");\r\n        golem1.body.setSize(player.width - 15, player.height - 10)\r\n        golem2 = this.physics.add.sprite(750 + 17 * 64, 300, \"golem\");\r\n        golem2.body.setSize(player.width - 15, player.height - 10)\r\n        golem3 = this.physics.add.sprite(750 + 24 * 64, 500, \"golem\");\r\n        golem3.body.setSize(player.width - 15, player.height - 10)\r\n        golem4 = this.physics.add.sprite(750 + 85 * 64, 500, \"golem\");\r\n        golem4.body.setSize(player.width - 15, player.height - 10)\r\n        //score text\r\n        scoreText = this.add.text(16, 16, \"Score: 0\", {fontSize: '32px', color: 'black'});\r\n        scoreText.setScrollFactor(0, 0)\r\n        // restart text\r\n        this.add.text(580, 16, \"To restart press: R\", {fontSize: '32px', color: 'black'}).setScrollFactor(0, 0)\r\n        // controls\r\n        this.add.text(16, 600, \"arrows - move\", {fontSize: '32px', color: 'black'})\r\n        this.add.text(16, 632, \"space - attack\", {fontSize: '32px', color: 'black'})\r\n        //physics\r\n        playerPlatformsCollider = this.physics.add.collider(player, platforms);\r\n        golem1PlatformsCollider = this.physics.add.collider(golem1, platforms);\r\n        golem2PlatformsCollider = this.physics.add.collider(golem2, platforms);\r\n        golem3PlatformsCollider = this.physics.add.collider(golem3, platforms);\r\n        golem4PlatformsCollider = this.physics.add.collider(golem4, platforms);\r\n        this.physics.add.overlap(player, coins, collectCoin, null, this);\r\n        this.physics.add.overlap(player, doorCollision, winFunction, null, this);\r\n        this.physics.add.collider(golem1, golemsCollisions);\r\n        this.physics.add.collider(golem2, golemsCollisions);\r\n        this.physics.add.collider(golem3, golemsCollisions);\r\n        this.physics.add.collider(golem4, golemsCollisions);\r\n        playerGolem1Collider = this.physics.add.overlap(player, golem1, fight1, null, this);\r\n        playerGolem2Collider = this.physics.add.overlap(player, golem2, fight2, null, this);\r\n        playerGolem3Collider = this.physics.add.overlap(player, golem3, fight3, null, this);\r\n        playerGolem4Collider = this.physics.add.overlap(player, golem4, fight4, null, this);\r\n        this.physics.add.collider(player, doorLayer);\r\n\r\n\r\n        //camera\r\n        this.cameras.main.setBounds(0, 0, backgroundImage.displayWidth, backgroundImage.displayHeight);\r\n        this.cameras.main.startFollow(player);\r\n\r\n        //animations\r\n        this.anims.create({\r\n            key: 'left',\r\n            frames: this.anims.generateFrameNumbers('adventurer', {start: 7, end: 8}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'stand',\r\n            frames: [{key: 'adventurer', frame: 6}],\r\n            frameRate: 20\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'right',\r\n            frames: this.anims.generateFrameNumbers('adventurer', {start: 9, end: 10}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'jump-right',\r\n            frames: [{key: 'adventurer', frame: 3}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'jump-left',\r\n            frames: [{key: 'adventurer', frame: 2}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'attack-right',\r\n            frames: [{key: 'adventurer', frame: 1}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'attack-left',\r\n            frames: [{key: 'adventurer', frame: 0}],\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'golem-walk-left',\r\n            frames: this.anims.generateFrameNumbers('golem', {start: 5, end: 16}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'golem-walk-right',\r\n            frames: this.anims.generateFrameNumbers('golem', {start: 17, end: 33}),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n        // golems initial velocity\r\n        golem1.setVelocityX(golem1Velocity);\r\n        golem2.setVelocityX(golem2Velocity);\r\n        golem3.setVelocityX(golem3Velocity);\r\n        golem4.setVelocityX(golem4Velocity);\r\n    }\r\n\r\n    function update() {\r\n\r\n        if (win) {\r\n            scoreText = this.add.text(400, 150, \"You win!\", {fontSize: '72px', color: 'black'}).setScrollFactor(0, 0);\r\n            scoreText = this.add.text(360, 220, \"Press: P to add your score to board.\", {\r\n                fontSize: '20px',\r\n                color: 'black'\r\n            }).setScrollFactor(0, 0);\r\n\r\n        }\r\n        if (lost && !win) {\r\n            scoreText = this.add.text(400, 150, \"You lost!\", {fontSize: '72px', color: 'black'}).setScrollFactor(0, 0);\r\n\r\n        }\r\n        /*golems move*/\r\n        if (golem1.body.velocity.x < 0) {\r\n            golem1.anims.play(\"golem-walk-left\", true);\r\n        } else if (golem1.body.velocity.x > 0) {\r\n            golem1.anims.play(\"golem-walk-right\", true);\r\n        }\r\n        if (golem2.body.velocity.x < 0) {\r\n            golem2.anims.play(\"golem-walk-left\", true);\r\n        } else if (golem2.body.velocity.x > 0) {\r\n            golem2.anims.play(\"golem-walk-right\", true);\r\n        }\r\n        if (golem3.body.velocity.x < 0) {\r\n            golem3.anims.play(\"golem-walk-left\", true);\r\n        } else if (golem3.body.velocity.x > 0) {\r\n            golem3.anims.play(\"golem-walk-right\", true);\r\n        }\r\n        if (golem4.body.velocity.x < 0) {\r\n            golem4.anims.play(\"golem-walk-left\", true);\r\n        } else if (golem4.body.velocity.x > 0) {\r\n            golem4.anims.play(\"golem-walk-right\", true);\r\n        }\r\n\r\n        /*move*/\r\n        if (cursors.left.isDown && !cursors.space.isDown) {\r\n            player.setVelocityX(-160);\r\n            if (player.body.onFloor()) {\r\n                player.anims.play('left', true);\r\n            }\r\n        } else if (cursors.right.isDown && !cursors.space.isDown) {\r\n            player.setVelocityX(160);\r\n            if (player.body.onFloor()) {\r\n                player.anims.play('right', true);\r\n            }\r\n        } else {\r\n            player.setVelocityX(0);\r\n            player.anims.play('stand');\r\n        }\r\n        /*jump*/\r\n        if (cursors.up.isDown && player.body.onFloor()) {\r\n            player.setVelocityY(-330);\r\n            player.anims.play('jump-right', true);\r\n        } else if (!player.body.onFloor()) {\r\n            if (cursors.left.isDown) {\r\n                player.anims.play('jump-left', true);\r\n            } else {\r\n                player.anims.play('jump-right', true);\r\n            }\r\n        }\r\n        /*restart*/\r\n        if (resetKey.isDown) {\r\n            this.scene.restart();\r\n            battleLost = false;\r\n            lost = false;\r\n            win = false;\r\n        }\r\n        /*add score*/\r\n        if (addScoreKey.isDown) {\r\n            /*TODO MOVE TO ADDING SCORE PAGE*/\r\n        }\r\n        /*action*/\r\n        if (cursors.space.isDown && cursors.left.isDown && player.body.onFloor()) {\r\n            player.anims.play('attack-left', true);\r\n        } else if (cursors.space.isDown && player.body.onFloor()) {\r\n            player.anims.play('attack-right', true);\r\n        }\r\n        /*golem movement*/\r\n        if (golem1.body.blocked.right) {\r\n            golem1Velocity = -golem1Velocity;\r\n            golem1.setVelocityX(golem1Velocity);\r\n        }\r\n        if (golem1.body.blocked.left) {\r\n            golem1Velocity = -golem1Velocity;\r\n            golem1.setVelocityX(golem1Velocity);\r\n        }\r\n        if (golem2.body.blocked.right) {\r\n            golem2Velocity = -golem2Velocity;\r\n            golem2.setVelocityX(golem2Velocity);\r\n        }\r\n        if (golem2.body.blocked.left) {\r\n            golem2Velocity = -golem2Velocity;\r\n            golem2.setVelocityX(golem2Velocity);\r\n        }\r\n        if (golem3.body.blocked.right) {\r\n            golem3Velocity = -golem3Velocity;\r\n            golem3.setVelocityX(golem3Velocity);\r\n        }\r\n        if (golem3.body.blocked.left) {\r\n            golem3Velocity = -golem3Velocity;\r\n            golem3.setVelocityX(golem3Velocity);\r\n        }\r\n        if (golem4.body.blocked.right) {\r\n            golem4Velocity = -golem4Velocity;\r\n            golem4.setVelocityX(golem4Velocity);\r\n        }\r\n        if (golem4.body.blocked.left) {\r\n            golem4Velocity = -golem4Velocity;\r\n            golem4.setVelocityX(golem4Velocity);\r\n        }\r\n        /*player dieing*/\r\n        if (player.y > 900) {\r\n            this.physics.pause();\r\n            player.setVelocityX(0);\r\n            golem1.setVelocityX(0);\r\n            golem2.setVelocityX(0);\r\n            golem3.setVelocityX(0);\r\n            golem4.setVelocityX(0);\r\n            lost = true;\r\n        }\r\n        if (battleLost) {\r\n            this.physics.world.removeCollider(playerPlatformsCollider);\r\n        }\r\n    }\r\n\r\n    function collectCoin(player, coin) {\r\n        coin.destroy(coin.x, coin.y);\r\n        score = score + 1;\r\n        scoreText.setText(\"Score: \" + score);\r\n    }\r\n\r\n    function winFunction(player) {\r\n        player.setVisible(false);\r\n        this.physics.pause();\r\n        player.setVelocityX(0);\r\n        golem1.setVelocityX(0);\r\n        golem2.setVelocityX(0);\r\n        golem3.setVelocityX(0);\r\n        golem4.setVelocityX(0);\r\n        win = true;\r\n    }\r\n\r\n    function fight1() {\r\n        let timer = setTimeout(function () {\r\n            battleLost = true;\r\n        }, 300)\r\n        if (cursors.space.isDown && player.body.onFloor()) {\r\n            clearTimeout(timer);\r\n            this.physics.world.removeCollider(golem1PlatformsCollider)\r\n            this.physics.world.removeCollider(playerGolem1Collider)\r\n            score = score + 1;\r\n            scoreText.setText(\"Score: \" + score);\r\n        }\r\n    }\r\n\r\n    function fight2() {\r\n        let timer = setTimeout(function () {\r\n            battleLost = true;\r\n        }, 300)\r\n        if (cursors.space.isDown && player.body.onFloor()) {\r\n            clearTimeout(timer);\r\n            this.physics.world.removeCollider(golem2PlatformsCollider)\r\n            this.physics.world.removeCollider(playerGolem2Collider)\r\n            score = score + 1;\r\n            scoreText.setText(\"Score: \" + score);\r\n        }\r\n    }\r\n\r\n    function fight3() {\r\n        let timer = setTimeout(function () {\r\n            battleLost = true;\r\n        }, 300)\r\n        if (cursors.space.isDown && player.body.onFloor()) {\r\n            clearTimeout(timer);\r\n            this.physics.world.removeCollider(golem3PlatformsCollider)\r\n            this.physics.world.removeCollider(playerGolem3Collider)\r\n            score = score + 1;\r\n            scoreText.setText(\"Score: \" + score);\r\n        }\r\n    }\r\n\r\n    function fight4() {\r\n        let timer = setTimeout(function () {\r\n            battleLost = true;\r\n        }, 300)\r\n        if (cursors.space.isDown && player.body.onFloor()) {\r\n            clearTimeout(timer);\r\n            this.physics.world.removeCollider(golem4PlatformsCollider)\r\n            this.physics.world.removeCollider(playerGolem4Collider)\r\n            score = score + 1;\r\n            scoreText.setText(\"Score: \" + score);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IonPhaser game={gameState.game} initialize={gameState.initialize}/>\r\n        </>\r\n    );\r\n}\r\nexport default PhaserMain;"]},"metadata":{},"sourceType":"module"}