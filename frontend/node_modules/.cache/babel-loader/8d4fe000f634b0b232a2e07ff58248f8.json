{"ast":null,"code":"import IsArray from '../../utils/object/IsArray.js';\nimport IsPlainObject from '../../utils/object/IsPlainObject.js';\n\nvar FindFOV = function (visiblePoints, originTileXY, out) {\n  if (IsPlainObject(visiblePoints)) {\n    out = originTileXY;\n    originTileXY = visiblePoints;\n    visiblePoints = undefined;\n  } else if (IsArray(visiblePoints)) {\n    out = visiblePoints;\n    originTileXY = undefined;\n    visiblePoints = undefined;\n  }\n\n  if (IsArray(originTileXY)) {\n    out = originTileXY;\n    originTileXY = undefined;\n  }\n\n  if (out === undefined) {\n    out = [];\n  }\n\n  var board = this.board;\n  var myTileXYZ = this.chessData.tileXYZ;\n  var isAnyVisible,\n      radius = 1,\n      targetTileXY;\n\n  do {\n    isAnyVisible = false;\n    board.ringToTileXYArray(myTileXYZ, radius, globRing);\n\n    for (var i = 0, cnt = globRing.length; i < cnt; i++) {\n      targetTileXY = globRing[i];\n\n      if (this.isInLOS(targetTileXY, visiblePoints, originTileXY)) {\n        isAnyVisible = true;\n        out.push(targetTileXY);\n      }\n    }\n\n    radius++;\n    globRing.length = 0;\n  } while (isAnyVisible);\n\n  return out;\n};\n\nvar globRing = [];\nexport default FindFOV;","map":{"version":3,"sources":["C:/Users/kmode/Documents/ProjektyFullStack/war-of-champions/frontend/node_modules/phaser3-rex-plugins/plugins/board/fieldofview/FindFOV.js"],"names":["IsArray","IsPlainObject","FindFOV","visiblePoints","originTileXY","out","undefined","board","myTileXYZ","chessData","tileXYZ","isAnyVisible","radius","targetTileXY","ringToTileXYArray","globRing","i","cnt","length","isInLOS","push"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,+BAApB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,IAAIC,OAAO,GAAG,UAAUC,aAAV,EAAyBC,YAAzB,EAAuCC,GAAvC,EAA4C;AACtD,MAAIJ,aAAa,CAACE,aAAD,CAAjB,EAAkC;AAC9BE,IAAAA,GAAG,GAAGD,YAAN;AACAA,IAAAA,YAAY,GAAGD,aAAf;AACAA,IAAAA,aAAa,GAAGG,SAAhB;AACH,GAJD,MAIO,IAAIN,OAAO,CAACG,aAAD,CAAX,EAA4B;AAC/BE,IAAAA,GAAG,GAAGF,aAAN;AACAC,IAAAA,YAAY,GAAGE,SAAf;AACAH,IAAAA,aAAa,GAAGG,SAAhB;AACH;;AACD,MAAIN,OAAO,CAACI,YAAD,CAAX,EAA2B;AACvBC,IAAAA,GAAG,GAAGD,YAAN;AACAA,IAAAA,YAAY,GAAGE,SAAf;AACH;;AAED,MAAID,GAAG,KAAKC,SAAZ,EAAuB;AACnBD,IAAAA,GAAG,GAAG,EAAN;AACH;;AAED,MAAIE,KAAK,GAAG,KAAKA,KAAjB;AACA,MAAIC,SAAS,GAAG,KAAKC,SAAL,CAAeC,OAA/B;AACA,MAAIC,YAAJ;AAAA,MAAkBC,MAAM,GAAG,CAA3B;AAAA,MACIC,YADJ;;AAEA,KAAG;AACCF,IAAAA,YAAY,GAAG,KAAf;AACAJ,IAAAA,KAAK,CAACO,iBAAN,CAAwBN,SAAxB,EAAmCI,MAAnC,EAA2CG,QAA3C;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGF,QAAQ,CAACG,MAA/B,EAAuCF,CAAC,GAAGC,GAA3C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDH,MAAAA,YAAY,GAAGE,QAAQ,CAACC,CAAD,CAAvB;;AACA,UAAI,KAAKG,OAAL,CAAaN,YAAb,EAA2BV,aAA3B,EAA0CC,YAA1C,CAAJ,EAA6D;AACzDO,QAAAA,YAAY,GAAG,IAAf;AACAN,QAAAA,GAAG,CAACe,IAAJ,CAASP,YAAT;AACH;AACJ;;AACDD,IAAAA,MAAM;AACNG,IAAAA,QAAQ,CAACG,MAAT,GAAkB,CAAlB;AACH,GAZD,QAYSP,YAZT;;AAcA,SAAON,GAAP;AACH,CAtCD;;AAwCA,IAAIU,QAAQ,GAAG,EAAf;AAEA,eAAeb,OAAf","sourcesContent":["import IsArray from '../../utils/object/IsArray.js';\r\nimport IsPlainObject from '../../utils/object/IsPlainObject.js';\r\n\r\nvar FindFOV = function (visiblePoints, originTileXY, out) {\r\n    if (IsPlainObject(visiblePoints)) {\r\n        out = originTileXY;\r\n        originTileXY = visiblePoints;\r\n        visiblePoints = undefined;\r\n    } else if (IsArray(visiblePoints)) {\r\n        out = visiblePoints;\r\n        originTileXY = undefined;\r\n        visiblePoints = undefined;\r\n    }\r\n    if (IsArray(originTileXY)) {\r\n        out = originTileXY;\r\n        originTileXY = undefined;\r\n    }\r\n\r\n    if (out === undefined) {\r\n        out = [];\r\n    }\r\n\r\n    var board = this.board;\r\n    var myTileXYZ = this.chessData.tileXYZ;\r\n    var isAnyVisible, radius = 1,\r\n        targetTileXY;\r\n    do {\r\n        isAnyVisible = false;\r\n        board.ringToTileXYArray(myTileXYZ, radius, globRing);\r\n        for (var i = 0, cnt = globRing.length; i < cnt; i++) {\r\n            targetTileXY = globRing[i];\r\n            if (this.isInLOS(targetTileXY, visiblePoints, originTileXY)) {\r\n                isAnyVisible = true;\r\n                out.push(targetTileXY);\r\n            }\r\n        }\r\n        radius++;\r\n        globRing.length = 0;\r\n    } while (isAnyVisible)\r\n\r\n    return out;\r\n}\r\n\r\nvar globRing = [];\r\n\r\nexport default FindFOV;"]},"metadata":{},"sourceType":"module"}